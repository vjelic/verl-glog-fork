{
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Glog.AI",
          "organization": "Glog.AI",
          "fullName": "Glog, Making software more secure",
          "version": "1.0.0",
          "semanticVersion": "1.0.0",
          "informationUri": "https://www.glog.ai",
          "rules": [
            {
              "id": "a9c62e4b-3135-39e0-a42f-d5d44d7dfc94",
              "name": "resources.rules.prefer-apt-get",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.prefer-apt-get"
              },
              "fullDescription": {
                "text": "'apt-get' is preferred as an unattended tool for stability. 'apt' is discouraged."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "'apt-get' is preferred as an unattended tool for stability. 'apt' is discouraged.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "'apt-get' is preferred as an unattended tool for stability. 'apt' is discouraged.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3027](https://github.com/hadolint/hadolint/wiki/DL3027)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.prefer-apt-get"
                ]
              }
            },
            {
              "id": "3081e6f5-f3e6-377a-b3f0-a29ffeb09e8b",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "f2dc50d3-fa07-30dc-b8ee-da1eb9904316",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "e58be1ee-3f0a-3c8a-9f82-c7729ce32a7e",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "9c6fefaa-74b2-3813-ab0b-805fc999faf3",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "0ac945be-d33f-3680-a60a-74319f202704",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "1c2f1c2e-c42b-389f-8269-8f2096153e20",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "7ee8f005-96bc-391e-bed2-3f43117760d2",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "8bc29d0e-be81-3e58-bf46-b455c5b44319",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "6502ffda-45e0-3cd8-a98e-adb6e153c75d",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "c403b4e5-487e-3561-bda4-a4bbbda8dccf",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "a3b2e053-a2fa-33b3-a61a-22c68fa1727d",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "777505a3-0924-3432-b55a-b081a2041005",
              "name": "resources.rules.remove-package-cache",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.remove-package-cache"
              },
              "fullDescription": {
                "text": "The package cache was not deleted after running 'apt-get update', which increases the size of the image. Remove the package cache by appending '&& apt-get clean' at the end of apt-get command chain."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "The package cache was not deleted after running 'apt-get update', which increases the size of the image. Remove the package cache by appending '&& apt-get clean' at the end of apt-get command chain.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "The package cache was not deleted after running 'apt-get update', which increases the size of the image. Remove the package cache by appending '&& apt-get clean' at the end of apt-get command chain.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3009](https://github.com/hadolint/hadolint/wiki/DL3009)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.remove-package-cache"
                ]
              }
            },
            {
              "id": "5d5314db-0164-3334-88fc-056d8840ddc2",
              "name": "resources.rules.missing-no-install-recommends",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-no-install-recommends"
              },
              "fullDescription": {
                "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3015](https://github.com/hadolint/hadolint/wiki/DL3015)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-no-install-recommends"
                ]
              }
            },
            {
              "id": "d8a52bb2-ac43-3c12-8552-3e05cd0aa7a5",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "b6dd9555-a3c2-3924-b523-72e9b05ec940",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "072af968-94f7-3b31-a390-008ea7c3969e",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "20c7a739-92f1-3257-acb6-2dd0a823f0f3",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "59d2ee81-af18-3b52-904e-cb3f0631745e",
              "name": "resources.rules.set-pipefail",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.set-pipefail"
              },
              "fullDescription": {
                "text": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL4006](https://github.com/hadolint/hadolint/wiki/DL4006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.set-pipefail"
                ]
              }
            },
            {
              "id": "0fa39a66-b73d-3d07-8f8f-33414e1b46d9",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "8ccbbbb8-035b-352c-a949-8754533b9c53",
              "name": "resources.rules.set-pipefail",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.set-pipefail"
              },
              "fullDescription": {
                "text": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL4006](https://github.com/hadolint/hadolint/wiki/DL4006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.set-pipefail"
                ]
              }
            },
            {
              "id": "fd41d486-9e4f-30fd-b264-4ac2df817150",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "8c429a8f-c09c-37ff-a7b4-a688166961ea",
              "name": "resources.rules.set-pipefail",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.set-pipefail"
              },
              "fullDescription": {
                "text": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL4006](https://github.com/hadolint/hadolint/wiki/DL4006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.set-pipefail"
                ]
              }
            },
            {
              "id": "11efba98-12b9-3a2b-943c-ea124d9466e0",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "56ebeaba-6555-3824-9540-535a1b20c107",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "296d3d50-c6b4-3dec-936a-df681d20fd31",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "45357494-4929-32af-bc56-d99a50c00384",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "5188d90d-903f-3ecb-a43f-8c57004aeb1b",
              "name": "resources.rules.missing-user",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-user"
              },
              "fullDescription": {
                "text": "By not specifying a USER, a programs in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "By not specifying a USER, a programs in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "By not specifying a USER, a programs in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-user"
                ]
              }
            },
            {
              "id": "3739b7c0-aaad-3ad4-a906-bac82c7e3852",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "042415dc-9f0a-3ac4-b4e6-e42167b8e2ae",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "eb14a648-7be6-3850-8d2e-092bed79d3ac",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "0bbe0963-3d72-3697-951d-84f72126511c",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "c6ae51af-b1f3-39c8-9a16-286cb11162e5",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "fdbe52c4-ae3f-327b-892b-a58f2b4df225",
              "name": "resources.rules.missing-no-install-recommends",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-no-install-recommends"
              },
              "fullDescription": {
                "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3015](https://github.com/hadolint/hadolint/wiki/DL3015)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-no-install-recommends"
                ]
              }
            },
            {
              "id": "9dba8072-ff53-3338-a84f-2e5c5dbecf78",
              "name": "resources.rules.remove-package-cache",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.remove-package-cache"
              },
              "fullDescription": {
                "text": "The package cache was not deleted after running 'apt-get update', which increases the size of the image. Remove the package cache by appending '&& apt-get clean' at the end of apt-get command chain."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "The package cache was not deleted after running 'apt-get update', which increases the size of the image. Remove the package cache by appending '&& apt-get clean' at the end of apt-get command chain.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "The package cache was not deleted after running 'apt-get update', which increases the size of the image. Remove the package cache by appending '&& apt-get clean' at the end of apt-get command chain.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3009](https://github.com/hadolint/hadolint/wiki/DL3009)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.remove-package-cache"
                ]
              }
            },
            {
              "id": "ffaea517-cc2e-3471-b38c-2a299e6f98a1",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "cae4e4f8-7e47-392e-b236-d1385b65aba8",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "b64f3f1c-4607-3dac-975b-afdc12220052",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "882267eb-292c-3466-a154-e5206faddfac",
              "name": "resources.rules.set-pipefail",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.set-pipefail"
              },
              "fullDescription": {
                "text": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL4006](https://github.com/hadolint/hadolint/wiki/DL4006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.set-pipefail"
                ]
              }
            },
            {
              "id": "94304e5f-946c-3b71-9305-a61b82d8dd22",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "a787f6e9-3aaf-3518-b600-687dedff9283",
              "name": "resources.rules.set-pipefail",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.set-pipefail"
              },
              "fullDescription": {
                "text": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL4006](https://github.com/hadolint/hadolint/wiki/DL4006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.set-pipefail"
                ]
              }
            },
            {
              "id": "fbae2218-3890-32ab-883a-33d2ecbf8277",
              "name": "resources.rules.set-pipefail",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.set-pipefail"
              },
              "fullDescription": {
                "text": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL4006](https://github.com/hadolint/hadolint/wiki/DL4006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.set-pipefail"
                ]
              }
            },
            {
              "id": "81cbb08a-f393-321a-823a-d9c9525530d6",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "8472a11a-575e-32ac-8c76-b6a503561b4f",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "d841daf6-bee8-3bf5-aa9a-d2fad4878f1a",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "8477e31c-5f43-3e5e-b243-5eb1fa5a1b18",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "74719437-b223-3ef8-8980-075db9b29352",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "7d36f82e-8b1c-3abd-bc45-1d2863518915",
              "name": "resources.rules.missing-user",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-user"
              },
              "fullDescription": {
                "text": "By not specifying a USER, a programs in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "By not specifying a USER, a programs in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "By not specifying a USER, a programs in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-user"
                ]
              }
            },
            {
              "id": "fd13fad8-f245-3d95-9203-6906af5dc5be",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "1f232dbc-860d-36df-9866-04837aa9df69",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "cf38f142-9ebc-33a1-94f9-3a46ef79ff2b",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "a33239f9-ff6f-30a8-9510-4a594fa38178",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "f596c55d-a062-3a7f-832b-1aa09d35dd03",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "425ef736-4bbb-34bb-aaa6-b9e0e51f9311",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "36e3a9ed-2762-3ecf-8801-e42be211d994",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "681fd5d6-5bac-333e-8377-1b19ceb1d64e",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "536ee704-0b26-3cba-983b-dbf24117f7bc",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "7ee16feb-b771-3b3b-bd2c-a02c4b7ade07",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "c89962bf-2f05-333b-af99-e22b4c385a8a",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "a3790eae-6795-3735-958f-b52afd5f278b",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "e2b61ccd-0e9d-31ad-91cc-144c4c25a276",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "96a09cae-4308-3771-8abe-10181eaa786e",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "735928bb-debd-32f6-9266-0cb57fb9c586",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "a41be001-474c-331e-a696-2bfdee6caa76",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "31aeb782-b8b0-3711-9997-c4e8f4183d9e",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "837332a8-e64c-3c5e-bb9b-aac98b1a8fa8",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "1e2d137c-9959-37a4-a323-654f3158b43f",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "c7447126-0243-388c-82a3-226ffc51eb07",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "cf72a40e-bdbe-3f3e-b80b-00f4468992cf",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "1337c617-c3f4-32fd-be06-bad08bd3ca09",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "cd4681f5-2da8-3bb8-b1ea-148c54e29931",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "f78c9bdd-77aa-3b2a-a616-c58a245edec1",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "9f87378f-66fc-3e1e-844e-efecfb22cf90",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "aae2320f-8631-3d49-accb-eb2ba1212a58",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "26fcb6b1-17cf-3942-bcb8-25e099533bf2",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "f2c1d47e-d4af-370b-807e-b977f20c3b3f",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "09a30872-bae5-30a9-82aa-fff1865174d0",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "6c871106-dc2a-3378-a6c9-92899f7ae281",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "b36a5e61-e8fa-3d67-8074-5671def230bb",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "e5f36ccf-920a-3257-bb9b-a7fcd078fef7",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "c23451c6-7a4f-3c52-a399-6e73a6459cfe",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "61d02183-a05c-317d-867b-513f7c7edef0",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "6420849d-7d56-3e06-b812-460cdf348f43",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "6526c35a-1957-35d6-8646-918df1e4414a",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "a4a525e1-771f-35e3-9001-6aecdbad5b6c",
              "name": "resources.rules.missing-no-install-recommends",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-no-install-recommends"
              },
              "fullDescription": {
                "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3015](https://github.com/hadolint/hadolint/wiki/DL3015)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-no-install-recommends"
                ]
              }
            },
            {
              "id": "fc5a3d86-6fc3-3e6c-88d8-46c1750cb53c",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "2fde2749-a83e-3c6d-9d7c-f03e3f2a14f9",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "f577adbe-fc84-380e-a3ee-67019212d0b3",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "59eab600-e087-3ad5-8370-e4b92f3887c9",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "d358c85a-03e0-3f20-a65e-7aa7f4551a63",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "1538667f-183b-358d-a6bd-9d2b01e77ebb",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "753d393c-3914-3f3f-b6a1-d60e0e52f33f",
              "name": "resources.rules.missing-no-install-recommends",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-no-install-recommends"
              },
              "fullDescription": {
                "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3015](https://github.com/hadolint/hadolint/wiki/DL3015)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-no-install-recommends"
                ]
              }
            },
            {
              "id": "9e91ce5e-6105-3696-84f7-84f406f10d0d",
              "name": "resources.rules.missing-no-install-recommends",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-no-install-recommends"
              },
              "fullDescription": {
                "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3015](https://github.com/hadolint/hadolint/wiki/DL3015)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-no-install-recommends"
                ]
              }
            },
            {
              "id": "0aee6102-fdf1-39ec-a2c0-f15d998ac798",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "8ad87391-451c-3734-8285-4dfededd41e6",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "f57012c0-ebff-364f-b00a-29ce3513d02c",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "f7f9b495-7b69-3ae8-8a1e-ca94f0c8af9d",
              "name": "resources.rules.use-workdir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-workdir"
              },
              "fullDescription": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3003](https://github.com/hadolint/hadolint/wiki/DL3003)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-workdir"
                ]
              }
            },
            {
              "id": "27ed7097-39b4-305c-b3dc-d16e176d19df",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "0ca9a557-2516-3c43-97ec-ff8786cdfd75",
              "name": "resources.rules.missing-image-version",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-image-version"
              },
              "fullDescription": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Images should be tagged with an explicit version to produce deterministic container images.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Images should be tagged with an explicit version to produce deterministic container images.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3006](https://github.com/hadolint/hadolint/wiki/DL3006)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-image-version"
                ]
              }
            },
            {
              "id": "19b28e4d-dc63-3c80-9ad7-5fe5665af6e9",
              "name": "resources.rules.missing-pip-no-cache-dir",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-pip-no-cache-dir"
              },
              "fullDescription": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This '$PIP install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3042](https://github.com/hadolint/hadolint/wiki/DL3042)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-pip-no-cache-dir"
                ]
              }
            },
            {
              "id": "6d7fc283-db23-3d95-8d3c-7587f7698802",
              "name": "resources.rules.missing-no-install-recommends",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-no-install-recommends"
              },
              "fullDescription": {
                "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3015](https://github.com/hadolint/hadolint/wiki/DL3015)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-no-install-recommends"
                ]
              }
            },
            {
              "id": "5ba8b94e-7e2e-335d-8e38-a912b3d6f29f",
              "name": "resources.rules.missing-no-install-recommends",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-no-install-recommends"
              },
              "fullDescription": {
                "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "note"
              },
              "help": {
                "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/hadolint/hadolint/wiki/DL3015](https://github.com/hadolint/hadolint/wiki/DL3015)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-no-install-recommends"
                ]
              }
            },
            {
              "id": "0304e6c7-68bb-3702-b11d-12d58571fbca",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "816cdb40-3402-3891-bc84-ea25f55dbfd5",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "ca1c6655-d939-368e-8709-351432023f1a",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "3bba9bfb-7802-3dab-a677-004294282732",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "6b5575d0-04d2-3e83-a545-8b94325a5883",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "da89b29a-a423-3a6c-849f-a3ad9b7cef34",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "55ab7929-3e27-3d43-91b0-ae0ec9d635d1",
              "name": "resources.rules.return-not-in-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-not-in-function"
              },
              "fullDescription": {
                "text": "`return` only makes sense inside a function"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`return` only makes sense inside a function\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` only makes sense inside a function\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-not-in-function"
                ]
              }
            },
            {
              "id": "437fd3b9-6f3c-34f2-858e-92c38cd74b10",
              "name": "resources.rules.missing-ratelimit",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.missing-ratelimit"
              },
              "fullDescription": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Function '$FUNC' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart](https://github.com/jsocol/django-ratelimit/blob/main/docs/index.rst#quickstart)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.missing-ratelimit"
                ]
              }
            },
            {
              "id": "b32e4ad9-7892-35fd-bb8a-c5ec9d35e773",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "5cf039b2-5655-3603-8184-60b47f0ec4ff",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "65f6adfe-2af7-3e99-86c7-c69d9d1393d7",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "78ac25ea-9a28-30c3-8094-f4b2d4f51e1a",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "3207d85e-9f3b-3b43-9eaa-df6062f7ce3e",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "6f0f64da-cb2d-39ad-a0b1-0b13a4864e3a",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "047f9d23-382c-33ea-b577-5e33e1dc417a",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "91ae46e0-5d5e-3b50-9911-4a230de5680d",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "4023da56-1df5-36ec-b77d-d416240f82b9",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "55c2f0f8-711a-3ba0-ba19-161e54249e36",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "ec3b2e81-c0c4-3ebd-a3b5-f5ead8d9b997",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "e64f87bf-49d1-3b58-ad46-1fc8409d8c48",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "dac23ede-1cee-3fcf-9f02-61c0ae90c8b7",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "d8981edf-97f4-336b-bf27-a74bbc555c99",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "897977ed-6ff0-3ae1-98d7-0465bf224808",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "809267ef-6c12-3c3e-b3bd-cd9003bbf6ff",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "aa54d010-48f4-38e9-ace5-b25592075f1d",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "f8e2158e-6961-3c02-9b2d-e62bdb7b22db",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "9ccbade7-9411-3ffc-8569-dfa19e89d623",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "d37cdd50-f334-38c7-9aa7-b51ff5d2223f",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "8d73c040-01a3-38cb-b26e-172519a8537d",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "52ade7d0-9a6d-3189-8091-12c4e19f7d1d",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "228ebdf8-71af-3e4c-9b4d-16fe05eb1a97",
              "name": "python.lang.security.audit.eval-detected.eval-detected",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.eval-detected.eval-detected"
              },
              "fullDescription": {
                "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected",
              "help": {
                "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected)\n - [https://owasp.org/Top10/A03_2021-Injection](https://owasp.org/Top10/A03_2021-Injection)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.eval-detected.eval-detected"
                ]
              }
            },
            {
              "id": "9dfe8712-7e03-363b-9f3e-6b3c9c20f599",
              "name": "python.lang.security.audit.eval-detected.eval-detected",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.eval-detected.eval-detected"
              },
              "fullDescription": {
                "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected",
              "help": {
                "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected)\n - [https://owasp.org/Top10/A03_2021-Injection](https://owasp.org/Top10/A03_2021-Injection)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.eval-detected.eval-detected"
                ]
              }
            },
            {
              "id": "4f9c47b9-91ba-32a0-948e-1417a3fefb22",
              "name": "python.lang.security.audit.eval-detected.eval-detected",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.eval-detected.eval-detected"
              },
              "fullDescription": {
                "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected",
              "help": {
                "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected)\n - [https://owasp.org/Top10/A03_2021-Injection](https://owasp.org/Top10/A03_2021-Injection)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.eval-detected.eval-detected"
                ]
              }
            },
            {
              "id": "070e48f8-50b2-3ff7-a0de-b643e2087a33",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "bfd0a75a-03dc-3855-850e-7439e308b7d6",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "916a6f48-06c6-3079-aabc-3a59c3f961bb",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "2fac1587-82cc-3827-bd1b-1c93ea10c206",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "80891a99-e6ae-3624-89d1-d0f55ae43f75",
              "name": "trailofbits.python.automatic-memory-pinning.automatic-memory-pinning",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.automatic-memory-pinning.automatic-memory-pinning"
              },
              "fullDescription": {
                "text": "If possible, it is better to rely on automatic pinning in PyTorch to avoid undefined behavior and for efficiency"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.automatic-memory-pinning.automatic-memory-pinning",
              "help": {
                "text": "If possible, it is better to rely on automatic pinning in PyTorch to avoid undefined behavior and for efficiency\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "If possible, it is better to rely on automatic pinning in PyTorch to avoid undefined behavior and for efficiency\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.automatic-memory-pinning.automatic-memory-pinning)\n - [https://pytorch.org/docs/stable/data.html#memory-pinning](https://pytorch.org/docs/stable/data.html#memory-pinning)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.automatic-memory-pinning.automatic-memory-pinning"
                ]
              }
            },
            {
              "id": "86c8fb03-260f-3e20-a0fc-1b30f7652593",
              "name": "trailofbits.python.automatic-memory-pinning.automatic-memory-pinning",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.automatic-memory-pinning.automatic-memory-pinning"
              },
              "fullDescription": {
                "text": "If possible, it is better to rely on automatic pinning in PyTorch to avoid undefined behavior and for efficiency"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.automatic-memory-pinning.automatic-memory-pinning",
              "help": {
                "text": "If possible, it is better to rely on automatic pinning in PyTorch to avoid undefined behavior and for efficiency\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "If possible, it is better to rely on automatic pinning in PyTorch to avoid undefined behavior and for efficiency\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.automatic-memory-pinning.automatic-memory-pinning)\n - [https://pytorch.org/docs/stable/data.html#memory-pinning](https://pytorch.org/docs/stable/data.html#memory-pinning)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.automatic-memory-pinning.automatic-memory-pinning"
                ]
              }
            },
            {
              "id": "49fe7c01-1070-31ce-abac-9da5f3619a77",
              "name": "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
              },
              "fullDescription": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "help": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch)\n - [https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/](https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
                ]
              }
            },
            {
              "id": "dce9117f-1947-3af5-abc8-9ab0467cdd55",
              "name": "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
              },
              "fullDescription": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "help": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch)\n - [https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/](https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
                ]
              }
            },
            {
              "id": "d582d7e6-e1d0-3de9-9215-3bca071ae022",
              "name": "python.lang.security.deserialization.pickle.avoid-pickle",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.deserialization.pickle.avoid-pickle"
              },
              "fullDescription": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle",
              "help": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle)\n - [https://docs.python.org/3/library/pickle.html](https://docs.python.org/3/library/pickle.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.deserialization.pickle.avoid-pickle"
                ]
              }
            },
            {
              "id": "34e57461-081f-32ae-8d99-71713d0706b4",
              "name": "python.lang.security.deserialization.pickle.avoid-pickle",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.deserialization.pickle.avoid-pickle"
              },
              "fullDescription": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle",
              "help": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle)\n - [https://docs.python.org/3/library/pickle.html](https://docs.python.org/3/library/pickle.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.deserialization.pickle.avoid-pickle"
                ]
              }
            },
            {
              "id": "859dbfb6-529f-3458-afcc-739550cd58e5",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "aa5edcc9-4db0-30cc-a028-89b8dc35cfd6",
              "name": "python.lang.security.deserialization.pickle.avoid-pickle",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.deserialization.pickle.avoid-pickle"
              },
              "fullDescription": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle",
              "help": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle)\n - [https://docs.python.org/3/library/pickle.html](https://docs.python.org/3/library/pickle.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.deserialization.pickle.avoid-pickle"
                ]
              }
            },
            {
              "id": "7e485137-8750-302b-9f08-edd0f190f176",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "684af1db-45c8-3c09-9e48-275a599c7043",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "c34f8b25-7d31-3ddf-8136-a0b3ae2f95c2",
              "name": "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
              },
              "fullDescription": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "help": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch)\n - [https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/](https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
                ]
              }
            },
            {
              "id": "8419c03e-b07d-3fec-92cd-6fdeb2d019b6",
              "name": "resources.rules.dangerous-subprocess-use",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dangerous-subprocess-use"
              },
              "fullDescription": {
                "text": "Detected subprocess function '$FUNC' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Detected subprocess function '$FUNC' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected subprocess function '$FUNC' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess](https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess)\n - [https://docs.python.org/3/library/subprocess.html](https://docs.python.org/3/library/subprocess.html)\n - [https://docs.python.org/3/library/shlex.html](https://docs.python.org/3/library/shlex.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dangerous-subprocess-use"
                ]
              }
            },
            {
              "id": "8b20dcc9-0ee6-3888-b928-b2ac79b1f598",
              "name": "resources.rules.unchecked-subprocess-call",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.unchecked-subprocess-call"
              },
              "fullDescription": {
                "text": "This is not checking the return value of this subprocess call; if it fails no exception will be raised. Consider subprocess.check_call() instead"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "This is not checking the return value of this subprocess call; if it fails no exception will be raised. Consider subprocess.check_call() instead\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This is not checking the return value of this subprocess call; if it fails no exception will be raised. Consider subprocess.check_call() instead\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.unchecked-subprocess-call"
                ]
              }
            },
            {
              "id": "68d46c9d-67ff-3f7e-b19c-6d88159b4488",
              "name": "resources.rules.unchecked-subprocess-call",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.unchecked-subprocess-call"
              },
              "fullDescription": {
                "text": "This is not checking the return value of this subprocess call; if it fails no exception will be raised. Consider subprocess.check_call() instead"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "This is not checking the return value of this subprocess call; if it fails no exception will be raised. Consider subprocess.check_call() instead\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "This is not checking the return value of this subprocess call; if it fails no exception will be raised. Consider subprocess.check_call() instead\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.unchecked-subprocess-call"
                ]
              }
            },
            {
              "id": "0ad68bb0-4496-3732-8985-ea8e1a471bbc",
              "name": "resources.rules.use-sys-exit",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-sys-exit"
              },
              "fullDescription": {
                "text": "Use `sys.exit` over the python shell `exit` built-in. `exit` is a helper for the interactive shell and may not be available on all Python implementations. https://stackoverflow.com/questions/6501121/difference-between-exit-and-sys-exit-in-python"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use `sys.exit` over the python shell `exit` built-in. `exit` is a helper for the interactive shell and may not be available on all Python implementations. https://stackoverflow.com/questions/6501121/difference-between-exit-and-sys-exit-in-python\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use `sys.exit` over the python shell `exit` built-in. `exit` is a helper for the interactive shell and may not be available on all Python implementations. https://stackoverflow.com/questions/6501121/difference-between-exit-and-sys-exit-in-python\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-sys-exit"
                ]
              }
            },
            {
              "id": "f5ebdaf3-4fc2-3c3f-b725-82bb2b765d87",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "a3f7da19-057a-38e4-bf04-385811348048",
              "name": "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
              },
              "fullDescription": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "help": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch)\n - [https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/](https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
                ]
              }
            },
            {
              "id": "0e6dca61-93b9-38fb-a240-874033d16f15",
              "name": "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
              },
              "fullDescription": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "help": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch)\n - [https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/](https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
                ]
              }
            },
            {
              "id": "09c52a15-4f6f-3ab9-8b18-766b5bff74a7",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "dc4a66fc-291a-3b56-b06f-a1012f252bcd",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "9763c6f4-7057-327a-b140-7900282cd8e5",
              "name": "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
              },
              "fullDescription": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "help": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch)\n - [https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/](https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
                ]
              }
            },
            {
              "id": "9b6e321c-d282-37bb-90f9-cb7779aca9d8",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "0b8016f8-4100-3b10-b288-88c432c80d0e",
              "name": "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
              },
              "fullDescription": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "help": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch)\n - [https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/](https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
                ]
              }
            },
            {
              "id": "fc159843-8d1c-375c-a215-4533d4165c1f",
              "name": "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
              },
              "fullDescription": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "help": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch)\n - [https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/](https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
                ]
              }
            },
            {
              "id": "30397135-3adf-32bb-8f4e-2f49b3bdd321",
              "name": "resources.rules.useless-inner-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.useless-inner-function"
              },
              "fullDescription": {
                "text": "function `$FF` is defined inside a function but never used"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "function `$FF` is defined inside a function but never used\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "function `$FF` is defined inside a function but never used\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.useless-inner-function"
                ]
              }
            },
            {
              "id": "2ef140a6-0e2d-3ece-a802-d2434540018a",
              "name": "resources.rules.use-sys-exit",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-sys-exit"
              },
              "fullDescription": {
                "text": "Use `sys.exit` over the python shell `exit` built-in. `exit` is a helper for the interactive shell and may not be available on all Python implementations. https://stackoverflow.com/questions/6501121/difference-between-exit-and-sys-exit-in-python"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Use `sys.exit` over the python shell `exit` built-in. `exit` is a helper for the interactive shell and may not be available on all Python implementations. https://stackoverflow.com/questions/6501121/difference-between-exit-and-sys-exit-in-python\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Use `sys.exit` over the python shell `exit` built-in. `exit` is a helper for the interactive shell and may not be available on all Python implementations. https://stackoverflow.com/questions/6501121/difference-between-exit-and-sys-exit-in-python\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-sys-exit"
                ]
              }
            },
            {
              "id": "dd11450f-e0db-36ed-b0e8-b65a05de75a7",
              "name": "resources.rules.useless-literal-dict",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.useless-literal-dict"
              },
              "fullDescription": {
                "text": "key `$X` is uselessly assigned twice"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "key `$X` is uselessly assigned twice\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "key `$X` is uselessly assigned twice\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.useless-literal-dict"
                ]
              }
            },
            {
              "id": "2e7d7739-caf6-3b99-9487-ece68519b596",
              "name": "resources.rules.useless-literal-dict",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.useless-literal-dict"
              },
              "fullDescription": {
                "text": "key `$X` is uselessly assigned twice"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "key `$X` is uselessly assigned twice\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "key `$X` is uselessly assigned twice\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.useless-literal-dict"
                ]
              }
            },
            {
              "id": "6c565642-3a98-3fad-a355-03c3561c0aa0",
              "name": "resources.rules.useless-literal-dict",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.useless-literal-dict"
              },
              "fullDescription": {
                "text": "key `$X` is uselessly assigned twice"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "key `$X` is uselessly assigned twice\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "key `$X` is uselessly assigned twice\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.useless-literal-dict"
                ]
              }
            },
            {
              "id": "c0579060-9854-335e-81f0-9db25cd02741",
              "name": "resources.rules.useless-literal-dict",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.useless-literal-dict"
              },
              "fullDescription": {
                "text": "key `$X` is uselessly assigned twice"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "key `$X` is uselessly assigned twice\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "key `$X` is uselessly assigned twice\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.useless-literal-dict"
                ]
              }
            },
            {
              "id": "0b7a65df-d398-3ceb-b287-edfdd3cc19e1",
              "name": "resources.rules.useless-inner-function",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.useless-inner-function"
              },
              "fullDescription": {
                "text": "function `$FF` is defined inside a function but never used"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "function `$FF` is defined inside a function but never used\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "function `$FF` is defined inside a function but never used\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.useless-inner-function"
                ]
              }
            },
            {
              "id": "f2f58a25-e7c9-3197-80c7-1b9a703a6586",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "cdf082a1-f4a3-3640-8f32-d82ac16c24dc",
              "name": "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
              },
              "fullDescription": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "help": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch)\n - [https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/](https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
                ]
              }
            },
            {
              "id": "a61b6820-139f-30a0-a061-229ddd6ec303",
              "name": "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
              },
              "fullDescription": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "help": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch)\n - [https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/](https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
                ]
              }
            },
            {
              "id": "568c2484-d0a5-3231-b870-f006aa5b44b4",
              "name": "python.lang.security.deserialization.pickle.avoid-pickle",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.deserialization.pickle.avoid-pickle"
              },
              "fullDescription": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle",
              "help": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle)\n - [https://docs.python.org/3/library/pickle.html](https://docs.python.org/3/library/pickle.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.deserialization.pickle.avoid-pickle"
                ]
              }
            },
            {
              "id": "9bb0d255-edf1-319f-aab9-eee73579d0f2",
              "name": "python.lang.security.deserialization.pickle.avoid-pickle",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.deserialization.pickle.avoid-pickle"
              },
              "fullDescription": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle",
              "help": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle)\n - [https://docs.python.org/3/library/pickle.html](https://docs.python.org/3/library/pickle.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.deserialization.pickle.avoid-pickle"
                ]
              }
            },
            {
              "id": "f9ec4e92-bb55-330f-9b75-ff37da8bd555",
              "name": "trailofbits.python.automatic-memory-pinning.automatic-memory-pinning",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.automatic-memory-pinning.automatic-memory-pinning"
              },
              "fullDescription": {
                "text": "If possible, it is better to rely on automatic pinning in PyTorch to avoid undefined behavior and for efficiency"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.automatic-memory-pinning.automatic-memory-pinning",
              "help": {
                "text": "If possible, it is better to rely on automatic pinning in PyTorch to avoid undefined behavior and for efficiency\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "If possible, it is better to rely on automatic pinning in PyTorch to avoid undefined behavior and for efficiency\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.automatic-memory-pinning.automatic-memory-pinning)\n - [https://pytorch.org/docs/stable/data.html#memory-pinning](https://pytorch.org/docs/stable/data.html#memory-pinning)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.automatic-memory-pinning.automatic-memory-pinning"
                ]
              }
            },
            {
              "id": "d3f060fa-cce0-388a-8b73-4ae3862f877c",
              "name": "resources.rules.arbitrary-sleep",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.arbitrary-sleep"
              },
              "fullDescription": {
                "text": "time.sleep() call; did you mean to leave this in?"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "time.sleep() call; did you mean to leave this in?\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "time.sleep() call; did you mean to leave this in?\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.arbitrary-sleep"
                ]
              }
            },
            {
              "id": "81934d1e-e404-3fb5-a231-6a56b846b1ca",
              "name": "resources.rules.arbitrary-sleep",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.arbitrary-sleep"
              },
              "fullDescription": {
                "text": "time.sleep() call; did you mean to leave this in?"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "time.sleep() call; did you mean to leave this in?\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "time.sleep() call; did you mean to leave this in?\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.arbitrary-sleep"
                ]
              }
            },
            {
              "id": "495d53a7-a698-37dc-b7bb-e2ebc37eade8",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "9b97ca46-085e-3e1c-83fe-1d3ce9ef7d02",
              "name": "resources.rules.arbitrary-sleep",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.arbitrary-sleep"
              },
              "fullDescription": {
                "text": "time.sleep() call; did you mean to leave this in?"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "time.sleep() call; did you mean to leave this in?\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "time.sleep() call; did you mean to leave this in?\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.arbitrary-sleep"
                ]
              }
            },
            {
              "id": "6d583d09-827a-3b01-a8d4-7f77aa9eded2",
              "name": "resources.rules.return-in-init",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.return-in-init"
              },
              "fullDescription": {
                "text": "`return` should never appear inside a class __init__ function. This will cause a runtime error."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "`return` should never appear inside a class __init__ function. This will cause a runtime error.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`return` should never appear inside a class __init__ function. This will cause a runtime error.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.return-in-init"
                ]
              }
            },
            {
              "id": "cff1d856-ef29-3676-8f29-302fc5ce03bf",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "22bb4324-4eba-31d2-926e-84b26e0dca0a",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "330dae55-94a9-37d6-b9c9-378da7c2d45d",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "85cf8f87-299e-3497-a49c-7ad39cf4fd16",
              "name": "resources.rules.use-raise-for-status",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.use-raise-for-status"
              },
              "fullDescription": {
                "text": "There's an HTTP request made with requests,\nbut the raise_for_status() utility method isn't used.\nThis can result in request errors going unnoticed\nand your code behaving in unexpected ways,\nsuch as if your authorization API returns a 500 error\nwhile you're only checking for a 401."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "There's an HTTP request made with requests,\nbut the raise_for_status() utility method isn't used.\nThis can result in request errors going unnoticed\nand your code behaving in unexpected ways,\nsuch as if your authorization API returns a 500 error\nwhile you're only checking for a 401.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "There's an HTTP request made with requests,\nbut the raise_for_status() utility method isn't used.\nThis can result in request errors going unnoticed\nand your code behaving in unexpected ways,\nsuch as if your authorization API returns a 500 error\nwhile you're only checking for a 401.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://requests.readthedocs.io/en/master/api/#requests.Response.raise_for_status](https://requests.readthedocs.io/en/master/api/#requests.Response.raise_for_status)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.use-raise-for-status"
                ]
              }
            },
            {
              "id": "21708b1c-836c-3d18-99b1-955427158ee9",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "ec660e5b-8678-3b1b-8f5a-72552df41867",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "9d261427-b326-37b5-87bb-67d2e029fbaf",
              "name": "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
              },
              "fullDescription": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "help": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch)\n - [https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/](https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
                ]
              }
            },
            {
              "id": "95056413-b8b3-306d-9b5c-687f315f7beb",
              "name": "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
              },
              "fullDescription": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "help": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch)\n - [https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/](https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
                ]
              }
            },
            {
              "id": "c499f82b-499d-34ac-828c-5a5cc7c019b7",
              "name": "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
              },
              "fullDescription": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "help": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch)\n - [https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/](https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
                ]
              }
            },
            {
              "id": "59f03bcd-51ad-344f-b54a-e16a2a6054cc",
              "name": "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
              },
              "fullDescription": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "help": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch)\n - [https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/](https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
                ]
              }
            },
            {
              "id": "fe5618e6-3b34-359c-baeb-5a2b4f0ac6f8",
              "name": "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
              },
              "fullDescription": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "help": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch)\n - [https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/](https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
                ]
              }
            },
            {
              "id": "4330e77d-130e-3872-bf89-97452ff7f964",
              "name": "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "shortDescription": {
                "text": "Opengrep Finding: trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
              },
              "fullDescription": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "helpUri": "https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch",
              "help": {
                "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/trailofbits.python.pickles-in-pytorch.pickles-in-pytorch)\n - [https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/](https://blog.trailofbits.com/2021/03/15/never-a-dill-moment-exploiting-machine-learning-pickle-files/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "trailofbits.python.pickles-in-pytorch.pickles-in-pytorch"
                ]
              }
            },
            {
              "id": "845d2029-dbaf-34e0-8ef9-44ceaae58c1d",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "b059ce16-6a26-32ae-baf3-b0a0d46ddbcd",
              "name": "resources.rules.insecure-hash-algorithm-md5",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.insecure-hash-algorithm-md5"
              },
              "fullDescription": {
                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://tools.ietf.org/html/rfc6151](https://tools.ietf.org/html/rfc6151)\n - [https://crypto.stackexchange.com/questions/44151/how-does-the-flame-malware-take-advantage-of-md5-collision](https://crypto.stackexchange.com/questions/44151/how-does-the-flame-malware-take-advantage-of-md5-collision)\n - [https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html](https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.insecure-hash-algorithm-md5"
                ]
              }
            },
            {
              "id": "b33acd1a-8de7-3b52-b403-0dcc71f78d5d",
              "name": "resources.rules.insecure-hash-algorithm-md5",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.insecure-hash-algorithm-md5"
              },
              "fullDescription": {
                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://tools.ietf.org/html/rfc6151](https://tools.ietf.org/html/rfc6151)\n - [https://crypto.stackexchange.com/questions/44151/how-does-the-flame-malware-take-advantage-of-md5-collision](https://crypto.stackexchange.com/questions/44151/how-does-the-flame-malware-take-advantage-of-md5-collision)\n - [https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html](https://pycryptodome.readthedocs.io/en/latest/src/hash/sha3_256.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.insecure-hash-algorithm-md5"
                ]
              }
            },
            {
              "id": "5dd91ad3-7212-3002-8a13-24d4bd28469d",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "e9232108-d27b-3209-8f9c-d1466f7db370",
              "name": "resources.rules.dangerous-system-call",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dangerous-system-call"
              },
              "fullDescription": {
                "text": "Found dynamic content used in a system call. This is dangerous if external data can reach this function call because it allows a malicious actor to execute commands. Use the 'subprocess' module instead, which is easier to use without accidentally exposing a command injection vulnerability."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "Found dynamic content used in a system call. This is dangerous if external data can reach this function call because it allows a malicious actor to execute commands. Use the 'subprocess' module instead, which is easier to use without accidentally exposing a command injection vulnerability.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Found dynamic content used in a system call. This is dangerous if external data can reach this function call because it allows a malicious actor to execute commands. Use the 'subprocess' module instead, which is easier to use without accidentally exposing a command injection vulnerability.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dangerous-system-call"
                ]
              }
            },
            {
              "id": "974255a6-7cf6-3efa-9459-e80f240b4df9",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "1bcd52cf-0524-3067-a8f9-a79090aa425c",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "fb40666a-ba50-3fc3-a357-9f09162a1366",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "7d0a7d48-ed35-3a12-bd1a-e5ab6e8869b7",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "60d98f90-7433-3515-b2d8-f3cc8cd88aa4",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "835f8237-c397-3d66-8355-23f0280da748",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "85a23af1-4860-3ec1-bd9f-19c3f55c8387",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "c8c54877-47fc-3954-af5e-2103acd8c942",
              "name": "resources.rules.pass-body-fn",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.pass-body-fn"
              },
              "fullDescription": {
                "text": "`pass` is the body of function $X. Consider removing this or raise NotImplementedError() if this is a TODO"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`pass` is the body of function $X. Consider removing this or raise NotImplementedError() if this is a TODO\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`pass` is the body of function $X. Consider removing this or raise NotImplementedError() if this is a TODO\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.pass-body-fn"
                ]
              }
            },
            {
              "id": "74deb192-b4f0-391e-8f5f-8d68ff9461c3",
              "name": "resources.rules.pass-body-fn",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.pass-body-fn"
              },
              "fullDescription": {
                "text": "`pass` is the body of function $X. Consider removing this or raise NotImplementedError() if this is a TODO"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "`pass` is the body of function $X. Consider removing this or raise NotImplementedError() if this is a TODO\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "`pass` is the body of function $X. Consider removing this or raise NotImplementedError() if this is a TODO\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.pass-body-fn"
                ]
              }
            },
            {
              "id": "fa664867-ffea-3c83-867a-0d0104c12c9b",
              "name": "python.lang.security.deserialization.pickle.avoid-pickle",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.deserialization.pickle.avoid-pickle"
              },
              "fullDescription": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle",
              "help": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle)\n - [https://docs.python.org/3/library/pickle.html](https://docs.python.org/3/library/pickle.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.deserialization.pickle.avoid-pickle"
                ]
              }
            },
            {
              "id": "db34a058-83f3-3775-a9ce-6b6aeb6d1377",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "eceaa056-f909-395d-bdc4-82a210fe6c78",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "d5ff7163-eb03-3d09-ae5d-6121209036ba",
              "name": "resources.rules.arbitrary-sleep",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.arbitrary-sleep"
              },
              "fullDescription": {
                "text": "time.sleep() call; did you mean to leave this in?"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "time.sleep() call; did you mean to leave this in?\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "time.sleep() call; did you mean to leave this in?\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.arbitrary-sleep"
                ]
              }
            },
            {
              "id": "cba4fef0-9729-39dd-a84c-a74716e31cde",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "86e7008f-8d06-389b-a69e-49c23f947981",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "83a4fc18-e6af-39e5-b1f8-07c459a9c256",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "68220841-1ad5-31fa-abb5-4d16612a328b",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "9eddca0c-e430-31ff-8952-43b9c8b6fff0",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "20ab7ef8-abce-3d8e-8697-e94bee4ac077",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "5119c4ac-3e3b-3989-9cb6-2ef0b0f5cade",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "3f32e060-d597-310e-8802-742c58e92454",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "41aff92f-7e21-3114-9e5a-6f454a00ef9f",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "0af499be-c50c-330b-b9e2-ac87500ae764",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "a17d4220-650b-3fe4-9b4e-a084b52641f7",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "b14bf653-7316-36ff-b4ca-7fe7750190a5",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "e05d83f2-07ac-35de-9438-f5e414bf04e0",
              "name": "resources.rules.useless-assignment-keyed",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.useless-assignment-keyed"
              },
              "fullDescription": {
                "text": "key `$Y` in `$X` is assigned twice; the first assignment is useless"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "help": {
                "text": "key `$Y` in `$X` is assigned twice; the first assignment is useless\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "key `$Y` in `$X` is assigned twice; the first assignment is useless\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.useless-assignment-keyed"
                ]
              }
            },
            {
              "id": "80621617-a583-3687-a14b-a9314f78e4f9",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "547376e8-b9e9-39fb-a49d-a8132199c2fe",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "0e541eff-b6e4-311f-af88-e48ce91cfedd",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "f95cb51a-13aa-3552-aca2-13fac46fd458",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "36ee83df-55a7-38de-a943-57d65760aeaf",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "d491ae20-1ac5-38b4-a8a0-b2b3a29473f1",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "72d6561f-7292-340c-a303-de619de17e86",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "bf34b1d4-ade9-3986-9d7b-0aad0bad32ab",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "680578e5-0e49-34ae-afde-e28b67f82b28",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "37ceb121-dc79-3d90-aa79-8b93a9230ed3",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "2a1c6206-d0e5-35ff-8ae6-2a7aecaa7e83",
              "name": "python.lang.security.audit.eval-detected.eval-detected",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.eval-detected.eval-detected"
              },
              "fullDescription": {
                "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected",
              "help": {
                "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected)\n - [https://owasp.org/Top10/A03_2021-Injection](https://owasp.org/Top10/A03_2021-Injection)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.eval-detected.eval-detected"
                ]
              }
            },
            {
              "id": "cd7c2410-aed8-3181-a8e6-f2b7ef8c392f",
              "name": "python.lang.security.audit.eval-detected.eval-detected",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.eval-detected.eval-detected"
              },
              "fullDescription": {
                "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected",
              "help": {
                "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected)\n - [https://owasp.org/Top10/A03_2021-Injection](https://owasp.org/Top10/A03_2021-Injection)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.eval-detected.eval-detected"
                ]
              }
            },
            {
              "id": "a310af99-43c7-329a-aaa2-d6f9e8fb4ebc",
              "name": "python.lang.security.audit.eval-detected.eval-detected",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.eval-detected.eval-detected"
              },
              "fullDescription": {
                "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected",
              "help": {
                "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.eval-detected.eval-detected)\n - [https://owasp.org/Top10/A03_2021-Injection](https://owasp.org/Top10/A03_2021-Injection)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.eval-detected.eval-detected"
                ]
              }
            },
            {
              "id": "318befd0-dc27-3a39-aeab-35215349e25a",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "ba02dac9-7db7-3341-a9d5-c58e1078406c",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "4b82bc31-a27c-34f4-95fd-b5a05e27b2bd",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "34ab6d20-bfc7-3c70-a129-c4104964e77d",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "5ad18498-95e6-3c99-99f0-6412349b431a",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "d3d91de1-e9b6-322d-9a8e-1346b1b59eb2",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "6eb953b1-68a6-3a46-9179-7afd4799c399",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "30607e4e-a027-3c85-ae10-0ab00390fed3",
              "name": "python.lang.security.audit.non-literal-import.non-literal-import",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.audit.non-literal-import.non-literal-import"
              },
              "fullDescription": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import",
              "help": {
                "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.audit.non-literal-import.non-literal-import)\n - [https://owasp.org/Top10/A01_2021-Broken_Access_Control](https://owasp.org/Top10/A01_2021-Broken_Access_Control)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.audit.non-literal-import.non-literal-import"
                ]
              }
            },
            {
              "id": "4d3d360c-8e80-3d74-8dee-c72bb926345b",
              "name": "python.lang.security.deserialization.pickle.avoid-pickle",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.deserialization.pickle.avoid-pickle"
              },
              "fullDescription": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle",
              "help": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle)\n - [https://docs.python.org/3/library/pickle.html](https://docs.python.org/3/library/pickle.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.deserialization.pickle.avoid-pickle"
                ]
              }
            },
            {
              "id": "ef45d802-a493-3e36-b3b4-f6c3daa08430",
              "name": "python.lang.security.deserialization.pickle.avoid-pickle",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.deserialization.pickle.avoid-pickle"
              },
              "fullDescription": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle",
              "help": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle)\n - [https://docs.python.org/3/library/pickle.html](https://docs.python.org/3/library/pickle.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.deserialization.pickle.avoid-pickle"
                ]
              }
            },
            {
              "id": "e8352f3c-24c3-3f7f-8204-0f3f498a1e1c",
              "name": "resources.rules.dlint-catastrophic-redos",
              "shortDescription": {
                "text": "Opengrep Finding: resources.rules.dlint-catastrophic-redos"
              },
              "fullDescription": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "error"
              },
              "help": {
                "text": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Regex `$X` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/](https://r2c.dev/blog/2020/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/)\n - [https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/](https://r2c.dev/blog/2020/improving-redos-detection-with-dlint-and-r2c/)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "resources.rules.dlint-catastrophic-redos"
                ]
              }
            },
            {
              "id": "78403b2d-0b5e-3747-a7f5-4452ccbeb818",
              "name": "python.lang.security.deserialization.pickle.avoid-pickle",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.deserialization.pickle.avoid-pickle"
              },
              "fullDescription": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle",
              "help": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle)\n - [https://docs.python.org/3/library/pickle.html](https://docs.python.org/3/library/pickle.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.deserialization.pickle.avoid-pickle"
                ]
              }
            },
            {
              "id": "fbbaeda2-a6e8-3e41-9900-b9c1b9abe9b1",
              "name": "python.lang.security.deserialization.pickle.avoid-pickle",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.deserialization.pickle.avoid-pickle"
              },
              "fullDescription": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle",
              "help": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle)\n - [https://docs.python.org/3/library/pickle.html](https://docs.python.org/3/library/pickle.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.deserialization.pickle.avoid-pickle"
                ]
              }
            },
            {
              "id": "d878a268-0fb8-31f9-9091-5332c60f8fb3",
              "name": "python.lang.security.deserialization.pickle.avoid-pickle",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.deserialization.pickle.avoid-pickle"
              },
              "fullDescription": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle",
              "help": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle)\n - [https://docs.python.org/3/library/pickle.html](https://docs.python.org/3/library/pickle.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.deserialization.pickle.avoid-pickle"
                ]
              }
            },
            {
              "id": "b0ce86bb-1738-30f4-a500-be5de9b050c2",
              "name": "python.lang.security.deserialization.pickle.avoid-pickle",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.deserialization.pickle.avoid-pickle"
              },
              "fullDescription": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle",
              "help": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle)\n - [https://docs.python.org/3/library/pickle.html](https://docs.python.org/3/library/pickle.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.deserialization.pickle.avoid-pickle"
                ]
              }
            },
            {
              "id": "8e08b079-a12a-3b8f-8fb3-54f1c81bfede",
              "name": "python.lang.security.deserialization.pickle.avoid-pickle",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.deserialization.pickle.avoid-pickle"
              },
              "fullDescription": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle",
              "help": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle)\n - [https://docs.python.org/3/library/pickle.html](https://docs.python.org/3/library/pickle.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.deserialization.pickle.avoid-pickle"
                ]
              }
            },
            {
              "id": "9b93ac05-df9c-3f31-a3cc-ca60f91a9c41",
              "name": "python.lang.security.deserialization.pickle.avoid-pickle",
              "shortDescription": {
                "text": "Opengrep Finding: python.lang.security.deserialization.pickle.avoid-pickle"
              },
              "fullDescription": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
              },
              "defaultConfiguration": {
                "enabled": true,
                "level": "warning"
              },
              "helpUri": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle",
              "help": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\nðŸ’Ž Enable cross-file analysis and Pro rules for free at sg.run/pro",
                "markdown": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.\n\n#### ðŸ’Ž Enable cross-file analysis and Pro rules for free at <a href='https://sg.run/pro'>sg.run/pro</a>\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle)\n - [https://docs.python.org/3/library/pickle.html](https://docs.python.org/3/library/pickle.html)\n"
              },
              "properties": {
                "precision": "very-high",
                "tags": [
                  "python.lang.security.deserialization.pickle.avoid-pickle"
                ]
              }
            }
          ],
          "language": "en-US",
          "contents": [
            "localizedData",
            "nonLocalizedData"
          ],
          "isComprehensive": false
        }
      },
      "language": "en-US",
      "results": [
        {
          "ruleId": "a9c62e4b-3135-39e0-a42f-d5d44d7dfc94",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'apt-get' is preferred as an unattended tool for stability. 'apt' is discouraged."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.extention.awsefa",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 15,
                  "endColumn": 8,
                  "snippet": {
                    "text": "RUN apt update && apt install -y linux-image-generic libhwloc-dev"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "036d4fa91872fe15ab8d86c5f14eabdce04c347267d568dead7e1d2ae240fd5844e4f4032f2a888bb5b2cc11b2433b4dcb4c0728480ac233620edad3b8ae6281_0"
          },
          "properties": {}
        },
        {
          "ruleId": "3081e6f5-f3e6-377a-b3f0-a29ffeb09e8b",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.extention.awsefa",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 1,
                  "endLine": 17,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN cd /tmp && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "95919ebb45fb195bd6ffacf3e419276195fa8c0f3881bc23984f895e1928befb719f65d5ddcf61ed6748c958fe5eae54b309ed085f986899faed5f2bb8fa6f31_0"
          },
          "properties": {}
        },
        {
          "ruleId": "f2dc50d3-fa07-30dc-b8ee-da1eb9904316",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.extention.awsefa",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM verlai/verl:app-verl0.5-sglang0.4.6.post5-mcore0.12.1"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "e5c69e37b311f155d37b801f71922c6405bb4ddbbe3755413203f2c9bd18a8e0c71f23a4ec49080ae7755d5e1d209ebe39037c298b88e3118b060c87a9b27bc0_0"
          },
          "properties": {}
        },
        {
          "ruleId": "e58be1ee-3f0a-3c8a-9f82-c7729ce32a7e",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.extention.awsefa",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 1,
                  "endLine": 26,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN cd /tmp && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "95919ebb45fb195bd6ffacf3e419276195fa8c0f3881bc23984f895e1928befb719f65d5ddcf61ed6748c958fe5eae54b309ed085f986899faed5f2bb8fa6f31_1"
          },
          "properties": {}
        },
        {
          "ruleId": "9c6fefaa-74b2-3813-ab0b-805fc999faf3",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.ngc.vllm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 1,
                  "endLine": 2,
                  "endColumn": 10,
                  "snippet": {
                    "text": "FROM nvcr.io/nvidia/pytorch:24.05-py3"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "7911f46a2b649a55c7f353b5dad730f90e7a38b75f198f0b229cfbe036ad692773caaa233b66c398c9f25b732313530a2bf6da5cf46b878990065804f9126283_0"
          },
          "properties": {}
        },
        {
          "ruleId": "0ac945be-d33f-3680-a60a-74319f202704",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip3 install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.ngc.vllm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 1,
                  "endLine": 46,
                  "endColumn": 72,
                  "snippet": {
                    "text": "RUN MAX_JOBS=1 NINJA_FLAGS=\"-j1\" TE_BUILD_WITH_NINJA=0 pip3 install git+https://github.com/eric-haibin-lin/TransformerEngine.git@v1.7.0"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "5365f61df98f067f6df17ea3a1cca91a347253b734382df758ec8a23df32934c6cf437750f7a0cf76a01bcf1222f00ea964fe95a367e5b55577cd9c8f1644584_0"
          },
          "properties": {}
        },
        {
          "ruleId": "1c2f1c2e-c42b-389f-8269-8f2096153e20",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip3 install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.ngc.vllm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endLine": 13,
                  "endColumn": 23,
                  "snippet": {
                    "text": "RUN pip3 install torch==2.4.0 torchvision==0.19.0 torchaudio==2.4.0 --index-url https://download.pytorch.org/whl/cu124"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "da5891725fd8ce08c746d850bf701e629132ca11ad789210232156888c619e55ecb7b0f6c05acfe76ef884644bdfebab244e6c1a43c04ab71f9fe49c67202cd3_0"
          },
          "properties": {}
        },
        {
          "ruleId": "7ee8f005-96bc-391e-bed2-3f43117760d2",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip3 install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.ngc.vllm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 1,
                  "endLine": 41,
                  "endColumn": 24,
                  "snippet": {
                    "text": "RUN pip3 install pytest pre-commit py-spy pyext liger-kernel"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "4a60bb085391bb05801df916d85bb2111999f7ae5d25d4118f012c4c8f17512d71aa6c16d8dad71a3363e1869446a73159dfa98e783f9f33981313a9a0130eb0_0"
          },
          "properties": {}
        },
        {
          "ruleId": "8bc29d0e-be81-3e58-bf46-b455c5b44319",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.ngc.vllm0.8",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 1,
                  "endLine": 39,
                  "endColumn": 36,
                  "snippet": {
                    "text": "RUN pip config set global.index-url \"${PIP_INDEX}\" && \\\n    pip config set global.extra-index-url \"${PIP_INDEX}\" && \\\n    python -m pip install --upgrade pip"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "78c100b4d4dc04623b2bd201ebdfc2773be60000d77682acd57eca7df7065f604659649519cf74858b1d076bc18629cc4e844623eae4f9a21781a01bd142e392_0"
          },
          "properties": {}
        },
        {
          "ruleId": "6502ffda-45e0-3cd8-a98e-adb6e153c75d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.ngc.vllm0.8",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 10,
                  "snippet": {
                    "text": "FROM nvcr.io/nvidia/pytorch:24.08-py3"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1cdd923531fcf66a8eed1d8f8996907393aa86dafcfaf1408949b62232820c008e88224105a8908c8bf49ba221fb4d9b2f604b70b49de0d5ad9bdb5ac5067a25_0"
          },
          "properties": {}
        },
        {
          "ruleId": "c403b4e5-487e-3561-bda4-a4bbbda8dccf",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.ngc.vllm0.8.sagemaker",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 1,
                  "endLine": 2,
                  "endColumn": 18,
                  "snippet": {
                    "text": "FROM 763104351884.dkr.ecr.us-east-1.amazonaws.com/huggingface-pytorch-training:2.1.0-transformers4.36.0-gpu-py310-cu121-ubuntu20.04"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "970ece7b5247659c9599ea49617ba62eeb2d2f8e153bb2b2734901fdc4d52e10ee4960234841d4a9a5652e95683eb57fa050dcfce59e87397fdc2be757a71d79_0"
          },
          "properties": {}
        },
        {
          "ruleId": "a3b2e053-a2fa-33b3-a61a-22c68fa1727d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.ngc.vllm0.8.sagemaker",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 1,
                  "endLine": 34,
                  "endColumn": 22,
                  "snippet": {
                    "text": "RUN pip uninstall -y transformer-engine flash-attn && \\\n    pip install flash-attn==2.7.4.post1 --no-build-isolation"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "c32f8a1b84791b47783f4ed65983c099dc980cc657408fb88a80273e1d92d137b1d17adc275d409ceb2eb0705e6a4442f883fee1cb467771bc55924f4ab15512_0"
          },
          "properties": {}
        },
        {
          "ruleId": "777505a3-0924-3432-b55a-b081a2041005",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "The package cache was not deleted after running 'apt-get update', which increases the size of the image. Remove the package cache by appending '&& apt-get clean' at the end of apt-get command chain."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 1,
                  "endLine": 14,
                  "endColumn": 19,
                  "snippet": {
                    "text": "RUN apt-get update"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "a5c38ffbf2f415d0a9278d9790c4d145c81653e433be6131d63eb526721a801d10483217d7951b67aa9402aad4c9627c2453db64e24575d3d0507777482b3e76_0"
          },
          "properties": {}
        },
        {
          "ruleId": "5d5314db-0164-3334-88fc-056d8840ddc2",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 15,
                  "endColumn": 23,
                  "snippet": {
                    "text": "RUN apt-get install -y pkg-config liblzma-dev"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "bb7dea851d939d926bd3bd68f6523bceb20e9f4c5c9b8da2720073448b9f64ea3b487e43d94b8ecf42ab2b4979decdbe7a81dbdce51e1d95ac3b6e3411815010_0"
          },
          "properties": {}
        },
        {
          "ruleId": "d8a52bb2-ac43-3c12-8552-3e05cd0aa7a5",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 1,
                  "endLine": 71,
                  "endColumn": 23,
                  "snippet": {
                    "text": "RUN pip install \"boto3>=1.26.0\""
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "389f08b1d42080657323ccc341e780d8c8f3cb5a2d0598d983da9925337e228a025f9871f2fcb4645657f2cd0c4ce082b8c50e8e9b9a7d0e17b91a3adae7376b_0"
          },
          "properties": {}
        },
        {
          "ruleId": "b6dd9555-a3c2-3924-b523-72e9b05ec940",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 1,
                  "endLine": 72,
                  "endColumn": 31,
                  "snippet": {
                    "text": "RUN pip install setuptools_scm"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "f3497cd35151e9ef532d41fc5340f2c9602f1206bd291ba50ff7482e9997536a163e2b308b5a6c564fa92b0ca13f2b69877a1accccac43afa5950382e683b703_0"
          },
          "properties": {}
        },
        {
          "ruleId": "072af968-94f7-3b31-a390-008ea7c3969e",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 1,
                  "endLine": 149,
                  "endColumn": 24,
                  "snippet": {
                    "text": "RUN pip install IPython orjson python-multipart torchao pybind11"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "7d45a3933621f9a6835772420031d5ddbf58d871e42cf5a2c5210696c9de745d19c56818d1b4d2bc1a52f80357c028dfb822cb444a3412287b13bc1f90b0f96c_0"
          },
          "properties": {}
        },
        {
          "ruleId": "20c7a739-92f1-3257-acb6-2dd0a823f0f3",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 1,
                  "endLine": 85,
                  "endColumn": 27,
                  "snippet": {
                    "text": "RUN pip install setuptools==75.8.0"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1c4278df008da4bf0f19b117d2886c0d8f33b19cd8ebe93f0fc62d1222e3947e8ebf980e3d1b65ae3aa915089beb7c42d692e6f2dad30685b77ecfa99c236ec0_0"
          },
          "properties": {}
        },
        {
          "ruleId": "59d2ee81-af18-3b52-904e-cb3f0631745e",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 1,
                  "endLine": 167,
                  "endColumn": 35,
                  "snippet": {
                    "text": "RUN pip uninstall -y aiter || true"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "808d809a72cf0deff32633390c77d23556960ce12ec13f7acc782d657e55f9bad26f828586c98dd7e67dad79f3ec59d5fd551cb302e0f158633ab00f77b94d84_1"
          },
          "properties": {}
        },
        {
          "ruleId": "0fa39a66-b73d-3d07-8f8f-33414e1b46d9",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 1,
                  "endLine": 169,
                  "endColumn": 10,
                  "snippet": {
                    "text": "RUN git clone ${AITER_REPO} \\\n    && cd aiter \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "74bf7ecc79ab64793fe4d0f9bd6ad25b47f9d8194a6e36681fa8711ef146cfae6f3b33ef6bcda13a3863f95ab11d212daab69b79b6b32a4d98d207cf13baedb9_2"
          },
          "properties": {}
        },
        {
          "ruleId": "8ccbbbb8-035b-352c-a949-8754533b9c53",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 1,
                  "endLine": 214,
                  "endColumn": 34,
                  "snippet": {
                    "text": "RUN pip uninstall -y vllm || true"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "808d809a72cf0deff32633390c77d23556960ce12ec13f7acc782d657e55f9bad26f828586c98dd7e67dad79f3ec59d5fd551cb302e0f158633ab00f77b94d84_2"
          },
          "properties": {}
        },
        {
          "ruleId": "fd41d486-9e4f-30fd-b264-4ac2df817150",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 1,
                  "endLine": 217,
                  "endColumn": 10,
                  "snippet": {
                    "text": "RUN git clone https://github.com/RLFoundation/vllm-patch.git \\\n    && cd vllm-patch \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "74bf7ecc79ab64793fe4d0f9bd6ad25b47f9d8194a6e36681fa8711ef146cfae6f3b33ef6bcda13a3863f95ab11d212daab69b79b6b32a4d98d207cf13baedb9_3"
          },
          "properties": {}
        },
        {
          "ruleId": "8c429a8f-c09c-37ff-a7b4-a688166961ea",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 1,
                  "endLine": 182,
                  "endColumn": 56,
                  "snippet": {
                    "text": "RUN find /sgl-workspace/sglang/python/sglang/srt/layers/quantization/configs/ \\\n         /sgl-workspace/sglang/python/sglang/srt/layers/moe/fused_moe_triton/configs/ \\\n         -type f -name '*MI300X*' | \\\n         xargs -I {} sh -c 'vf_config=$(echo \"$1\" | sed \"s/MI300X/MI300X_VF/\"); cp \"$1\" \"$vf_config\"' -- {}"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "e05ec2664e0d4e5dd80c86eb7d7f0a1723039202a683ad21846cdefc6982cc44bbb46f906ac505dcda2ae2066004127e900dc59cbd1e214539d6ccf318761c1d_0"
          },
          "properties": {}
        },
        {
          "ruleId": "11efba98-12b9-3a2b-943c-ea124d9466e0",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 1,
                  "endLine": 253,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN pip uninstall -y apex && \\\n    git clone https://github.com/ROCm/apex.git && \\\n    cd apex && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "74bf7ecc79ab64793fe4d0f9bd6ad25b47f9d8194a6e36681fa8711ef146cfae6f3b33ef6bcda13a3863f95ab11d212daab69b79b6b32a4d98d207cf13baedb9_5"
          },
          "properties": {}
        },
        {
          "ruleId": "56ebeaba-6555-3824-9540-535a1b20c107",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 1,
                  "endLine": 270,
                  "endColumn": 21,
                  "snippet": {
                    "text": "RUN pip install \"git+https://github.com/YangWang92/torch_memory_saver_numa.git@numa\""
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "ed96aec5122871589388c886f1fb8e091b71627227312084b13ce497b225f0e4264b755b057122a24db150d9943eb3e47e9c1be3274be2191773ebd8185f35d6_0"
          },
          "properties": {}
        },
        {
          "ruleId": "296d3d50-c6b4-3dec-936a-df681d20fd31",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 1,
                  "endLine": 282,
                  "endColumn": 21,
                  "snippet": {
                    "text": "RUN pip install \"ray[data,train,tune,serve]>=2.47.0\""
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "12cfd3e81c46a6adda1c4a9de39da0b6d37dde39bdd41b245f1383bb219b4b9adedaba3b4bd28610e52332eb466f8ab8f1122b1e943fac0b5e57de9422e4b30d_0"
          },
          "properties": {}
        },
        {
          "ruleId": "45357494-4929-32af-bc56-d99a50c00384",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 1,
                  "endLine": 292,
                  "endColumn": 28,
                  "snippet": {
                    "text": "RUN pip install \"tensordict==0.6.2\" --no-deps && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "f1ed638bb42b8734241471f071e56e2ff6b6d57697e8112b9c5f0da8292a407759109fc5903aa8e0c9270424823ef6d81810b33f1577a5547149aa89970191a0_0"
          },
          "properties": {}
        },
        {
          "ruleId": "5188d90d-903f-3ecb-a43f-8c57004aeb1b",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "By not specifying a USER, a programs in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 1,
                  "endLine": 321,
                  "endColumn": 22,
                  "snippet": {
                    "text": "CMD [\"/usr/bin/bash\"]"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "0a722b0c058a7c6f95f5434f5b1c888ff68e764d6ba168b60fd4a6bb14bd645311f2f1ace0e715043655ae81d6d03b86f333da9b64be0505372f1307b0e58015_0"
          },
          "properties": {}
        },
        {
          "ruleId": "3739b7c0-aaad-3ad4-a906-bac82c7e3852",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.3.0.post1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 3,
                  "endLine": 7,
                  "endColumn": 12,
                  "snippet": {
                    "text": "# FROM rocm/vllm:rocm6.2_mi300_ubuntu20.04_py3.9_vllm_0.6.4"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1ccf6ccc6024c24d9d8aaeba623627390126972a3f5a8477522ca16f6218e05b999508003a11a116b52f54b71b52c1c451fdc8c9ac7594f5c0478d93c93055fc_0"
          },
          "properties": {}
        },
        {
          "ruleId": "042415dc-9f0a-3ac4-b4e6-e42167b8e2ae",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.3.0.post1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 1,
                  "endLine": 25,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN pip uninstall -y vllm && \\\n    rm -rf vllm && \\\n    git clone -b v0.6.3 https://github.com/vllm-project/vllm.git && \\\n    cd vllm && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "b1ca49be74fbb3f22ebc479e0e029bb3c71114f39866a52a606f9a6182a74d8f3c0331a6118ac633440d77d7e15f0c5050f18e9fe89860114073b9d4814606fe_0"
          },
          "properties": {}
        },
        {
          "ruleId": "eb14a648-7be6-3850-8d2e-092bed79d3ac",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.3.0.post1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 1,
                  "endLine": 9,
                  "endColumn": 14,
                  "snippet": {
                    "text": "FROM lmsysorg/sglang:v0.4.6.post5-rocm630"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "e66b5034bc148846ba58d8ad244f3d50cde9e5ba33494d22b23b7feba434c6c77ffaf6ea65910863c3deccd4c5234d82fa88c9e09e354625f2418c442f33a02a_0"
          },
          "properties": {}
        },
        {
          "ruleId": "0bbe0963-3d72-3697-951d-84f72126511c",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.3.0.post1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 1,
                  "endLine": 34,
                  "endColumn": 28,
                  "snippet": {
                    "text": "RUN pip install \"tensordict==0.6.2\" --no-deps && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "e034591042eb3f18ecf0e8f1d52e27bd93a5bede01c8a1e626d5ff3f1ac912c22505f4003baac2ae84597a1bb81d7889fda25727bee27f9671b264656577247d_0"
          },
          "properties": {}
        },
        {
          "ruleId": "c6ae51af-b1f3-39c8-9a16-286cb11162e5",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.3.0.post1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 1,
                  "endLine": 58,
                  "endColumn": 20,
                  "snippet": {
                    "text": "RUN pip install git+https://github.com/ExtremeViscent/torch_memory_saver.git --no-deps"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "7990e6a18007cabc8243fe9fc3de50a03fae2cf420e8f2f0e4d42117e364fab9badf715f27c3541091dfa5939e434770584b1c994111170e3adeeb5a2855fc90_0"
          },
          "properties": {}
        },
        {
          "ruleId": "fdbe52c4-ae3f-327b-892b-a58f2b4df225",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.4.1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 15,
                  "endColumn": 23,
                  "snippet": {
                    "text": "RUN apt-get install -y pkg-config liblzma-dev"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "c8d551b527840fa2ffa9503e138a49bdc976e4d834aa250823d0c70558a51bd69eb504e1f48f28288d9d9fcf40f35265bb62796c28cae5b252b46d51a714028d_0"
          },
          "properties": {}
        },
        {
          "ruleId": "9dba8072-ff53-3338-a84f-2e5c5dbecf78",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "The package cache was not deleted after running 'apt-get update', which increases the size of the image. Remove the package cache by appending '&& apt-get clean' at the end of apt-get command chain."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.4.1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 1,
                  "endLine": 14,
                  "endColumn": 19,
                  "snippet": {
                    "text": "RUN apt-get update"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "55261364677b7c9d9a36a7e51957da2bd607898feb95b69be59b5a4cabbcb60c57194b6f53b3c41fe2c83cee7ba1d76ca8732df6d1ef06299bd61c942f6a81f4_0"
          },
          "properties": {}
        },
        {
          "ruleId": "ffaea517-cc2e-3471-b38c-2a299e6f98a1",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.4.1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 1,
                  "endLine": 71,
                  "endColumn": 23,
                  "snippet": {
                    "text": "RUN pip install \"boto3>=1.26.0\""
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "04cf8d53f44107936a128de548511aa65dd5fa9d106b8dc8832b2d744a210357fc5feeb1a8aa3b87927c7caeae824e5bdd79c74633bdde8d500c479f71a0413d_0"
          },
          "properties": {}
        },
        {
          "ruleId": "cae4e4f8-7e47-392e-b236-d1385b65aba8",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.4.1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 1,
                  "endLine": 72,
                  "endColumn": 31,
                  "snippet": {
                    "text": "RUN pip install setuptools_scm"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "c84b9f35acde53be9a656ef95e942177d6106ab2bfdf8aa774235be4cb8213083e93d4c649e1bc488ad0a97135b0a82c28cf46839ec968043bdd1bba52e0ccd5_0"
          },
          "properties": {}
        },
        {
          "ruleId": "b64f3f1c-4607-3dac-975b-afdc12220052",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.4.1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 1,
                  "endLine": 149,
                  "endColumn": 24,
                  "snippet": {
                    "text": "RUN pip install IPython orjson python-multipart torchao pybind11"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "bc58b23cf9a59589948055f0f43e568e69bd91a51365e96d8e7795c3b7c81fac5f375c6ca6065c6c8d3ce91eb9344c4e7a27e86e71a37b1781c96db27034d3e0_0"
          },
          "properties": {}
        },
        {
          "ruleId": "06019f38-667e-33af-aa2c-fca8b5db7e8b",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.4.1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 1,
                  "endLine": 85,
                  "endColumn": 27,
                  "snippet": {
                    "text": "RUN pip install setuptools==75.8.0"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "dcd2de756c191ce3a254af3fe7f2ce51272218569f6d27e3f446cb68eae62418dee2f6b735d44965a9f574c10d5ca88730fa122e1d7e6937932578611be3bdda_0"
          },
          "properties": {}
        },
        {
          "ruleId": "882267eb-292c-3466-a154-e5206faddfac",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.4.1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 1,
                  "endLine": 167,
                  "endColumn": 35,
                  "snippet": {
                    "text": "RUN pip uninstall -y aiter || true"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "04459b199901e3f9afe00f5e0258c3535dae0413743bcc89ca9e88bba3518a6cce0388c74743a04d8cc35a8ea45f14759b904ddf8b18e51c1e98eb45e1130103_1"
          },
          "properties": {}
        },
        {
          "ruleId": "94304e5f-946c-3b71-9305-a61b82d8dd22",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.4.1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 1,
                  "endLine": 169,
                  "endColumn": 10,
                  "snippet": {
                    "text": "RUN git clone ${AITER_REPO} \\\n    && cd aiter \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "6217f3de5750a2e959964b46d957b1af599f99de3c2fd7a75b972559e7e4fd4e6072f10aa27c4a0dd57ae79f855d9ca0a70cc8dc6b9f5e6a748973216a52399f_2"
          },
          "properties": {}
        },
        {
          "ruleId": "a787f6e9-3aaf-3518-b600-687dedff9283",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.4.1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 1,
                  "endLine": 214,
                  "endColumn": 34,
                  "snippet": {
                    "text": "RUN pip uninstall -y vllm || true"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "04459b199901e3f9afe00f5e0258c3535dae0413743bcc89ca9e88bba3518a6cce0388c74743a04d8cc35a8ea45f14759b904ddf8b18e51c1e98eb45e1130103_2"
          },
          "properties": {}
        },
        {
          "ruleId": "fbae2218-3890-32ab-883a-33d2ecbf8277",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Only the exit code from the final command in this RUN instruction will be evaluated unless 'pipefail' is set.\nIf you want to fail the command at any stage in the pipe, set 'pipefail' by including 'SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"] before the command.\nIf you're using alpine and don't have bash installed, communicate this explicitly with `SHELL [\"/bin/ash\"]`.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.4.1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 1,
                  "endLine": 182,
                  "endColumn": 56,
                  "snippet": {
                    "text": "RUN find /sgl-workspace/sglang/python/sglang/srt/layers/quantization/configs/ \\\n         /sgl-workspace/sglang/python/sglang/srt/layers/moe/fused_moe_triton/configs/ \\\n         -type f -name '*MI300X*' | \\\n         xargs -I {} sh -c 'vf_config=$(echo \"$1\" | sed \"s/MI300X/MI300X_VF/\"); cp \"$1\" \"$vf_config\"' -- {}"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "399aa2b7bef453fff16518cfc763f3a69fd1dc995512ec79ccc759128e46df84ba5f2637141aae8c810834f933e6a424b78dcbd5e3f83a6db20774ca5435fa93_0"
          },
          "properties": {}
        },
        {
          "ruleId": "81cbb08a-f393-321a-823a-d9c9525530d6",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.4.1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 1,
                  "endLine": 217,
                  "endColumn": 10,
                  "snippet": {
                    "text": "RUN git clone https://github.com/RLFoundation/vllm-patch.git \\\n    && cd vllm-patch \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "6217f3de5750a2e959964b46d957b1af599f99de3c2fd7a75b972559e7e4fd4e6072f10aa27c4a0dd57ae79f855d9ca0a70cc8dc6b9f5e6a748973216a52399f_3"
          },
          "properties": {}
        },
        {
          "ruleId": "8472a11a-575e-32ac-8c76-b6a503561b4f",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.4.1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 1,
                  "endLine": 253,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN pip uninstall -y apex && \\\n    git clone https://github.com/ROCm/apex.git && \\\n    cd apex && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "6217f3de5750a2e959964b46d957b1af599f99de3c2fd7a75b972559e7e4fd4e6072f10aa27c4a0dd57ae79f855d9ca0a70cc8dc6b9f5e6a748973216a52399f_5"
          },
          "properties": {}
        },
        {
          "ruleId": "d841daf6-bee8-3bf5-aa9a-d2fad4878f1a",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.4.1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 1,
                  "endLine": 270,
                  "endColumn": 21,
                  "snippet": {
                    "text": "RUN pip install \"git+https://github.com/YangWang92/torch_memory_saver_numa.git@numa\""
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "818a3a1f665412ff6825c4452dd815db2837f630bc21c88d37d8e488c781ff9fcf47bb9f6c048b89163f27ee83f47e2753d795c266ecee1df843e93575501eca_0"
          },
          "properties": {}
        },
        {
          "ruleId": "8477e31c-5f43-3e5e-b243-5eb1fa5a1b18",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.4.1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 1,
                  "endLine": 282,
                  "endColumn": 21,
                  "snippet": {
                    "text": "RUN pip install \"ray[data,train,tune,serve]>=2.47.0\""
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "ba63b7f50708622e4b9ded836150912267f0d80caab38aa01378535c323cb912e18ca370122fd072adccdb68c90bc850bd6b0292cf1ce665d0ef47a050e779a7_0"
          },
          "properties": {}
        },
        {
          "ruleId": "74719437-b223-3ef8-8980-075db9b29352",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.4.1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 1,
                  "endLine": 292,
                  "endColumn": 28,
                  "snippet": {
                    "text": "RUN pip install \"tensordict==0.6.2\" --no-deps && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "fe459dd8b00b8c2a626166dbf6235d7e9ebd35f779075c1796b0a94f3da4dc2726c94353dfb29d5cbd7dda93563cccf21a741c423efd94e15e24a820913e222c_0"
          },
          "properties": {}
        },
        {
          "ruleId": "7d36f82e-8b1c-3abd-bc45-1d2863518915",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "By not specifying a USER, a programs in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.rocm_verl-0.4.1",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 1,
                  "endLine": 322,
                  "endColumn": 22,
                  "snippet": {
                    "text": "CMD [\"/usr/bin/bash\"]\nCMD [\"/usr/bin/bash\"]"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1e1022176ffd0eed8df0e8a9caddb920592f3d424107bb2b0923b35b93638497ef42d4d2cbd5bed96d99abcb216670375f2327a7366bce272e7843a07044cf87_0"
          },
          "properties": {}
        },
        {
          "ruleId": "fd13fad8-f245-3d95-9203-6906af5dc5be",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.sglang",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 10,
                  "snippet": {
                    "text": "FROM nvcr.io/nvidia/pytorch:24.08-py3"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "158c3e0fea5a47361acd75f3f939d651cb9c110fbfd4a6588018299e1b049dfa65d8286bb1f21684076e18291d62e4b6cb727599483677f479faf7f518420cc4_0"
          },
          "properties": {}
        },
        {
          "ruleId": "1f232dbc-860d-36df-9866-04837aa9df69",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.sglang",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 1,
                  "endLine": 37,
                  "endColumn": 36,
                  "snippet": {
                    "text": "RUN pip config set global.index-url \"${PIP_INDEX}\" && \\\n    pip config set global.extra-index-url \"${PIP_INDEX}\" && \\\n    python -m pip install --upgrade pip"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "2d4c3fff6db78d2b2b94018dd430ba02d9ac9f024698e2179117f8713b0690dec9ec2aeb57021d5a042a00d41e3d04e32474edba889918dee773161abedc72e5_0"
          },
          "properties": {}
        },
        {
          "ruleId": "cf38f142-9ebc-33a1-94f9-3a46ef79ff2b",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.vemlp.vllm.te",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 3,
                  "endLine": 4,
                  "endColumn": 13,
                  "snippet": {
                    "text": "# FROM vemlp-cn-beijing.cr.volces.com/veturbo/pytorch:2.4-cu124"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "c512bad926c7f56ce55627349551c39f99d6e783a1e286ba95fdf93bc4ab738b0bb4fd7a416d2765364cc5234b26d40f9819eaa2a6b9fbd61744a09b656c9011_0"
          },
          "properties": {}
        },
        {
          "ruleId": "a33239f9-ff6f-30a8-9510-4a594fa38178",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.vemlp.vllm.te",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 1,
                  "endLine": 5,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM docker.io/haibinlin/verl:v0.0.5-th2.4.0-cu124-base"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "73dece580ccc3171d2d50e511cc57a28814285013b8322945dc4a9e6e4e80ade531a7a94e315948655841cf45c565478dfd6dc3e196d37850388051663482731_0"
          },
          "properties": {}
        },
        {
          "ruleId": "f596c55d-a062-3a7f-832b-1aa09d35dd03",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip3 install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.vemlp.vllm.te",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 3,
                  "endLine": 39,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# RUN CUDNN_PATH=/opt/conda/lib/python3.11/site-packages/nvidia/cudnn \\\n#     pip3 install git+https://github.com/eric-haibin-lin/TransformerEngine.git@v1.7.0"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "a8868ef6b7097a6960ecbf8d91f50703ea37b748458d6215f19dafd22228ae37dda9f49d9efb68cc115c33fc92acaed1bc84ba0ba0b85baef460c9fe1a4d3d27_0"
          },
          "properties": {}
        },
        {
          "ruleId": "425ef736-4bbb-34bb-aaa6-b9e0e51f9311",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip3 install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.vemlp.vllm.te",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 1,
                  "endLine": 41,
                  "endColumn": 50,
                  "snippet": {
                    "text": "RUN MAX_JOBS=1 NINJA_FLAGS=\"-j1\" pip3 install git+https://github.com/NVIDIA/TransformerEngine.git@v1.7"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "a8868ef6b7097a6960ecbf8d91f50703ea37b748458d6215f19dafd22228ae37dda9f49d9efb68cc115c33fc92acaed1bc84ba0ba0b85baef460c9fe1a4d3d27_1"
          },
          "properties": {}
        },
        {
          "ruleId": "36e3a9ed-2762-3ecf-8801-e42be211d994",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.vllm.sglang.megatron.deepseek",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 10,
                  "snippet": {
                    "text": "FROM nvcr.io/nvidia/pytorch:24.08-py3"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "f556e0b6d1c9a1c55925a4b3b89231375bc105baf4b4c66371f7522b50a9dae433c01311ed9986ef903812de29b1b006b124eb2151c36272e19a5a9dc6fb8fb4_0"
          },
          "properties": {}
        },
        {
          "ruleId": "681fd5d6-5bac-333e-8377-1b19ceb1d64e",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.vllm.sglang.megatron.deepseek",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 1,
                  "endLine": 39,
                  "endColumn": 36,
                  "snippet": {
                    "text": "RUN pip config set global.index-url \"${PIP_INDEX}\" && \\\n    pip config set global.extra-index-url \"${PIP_INDEX}\" && \\\n    python -m pip install --upgrade pip"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1de8a8d1be05db594187aa2623a952f3327ab6d45ae598a605e3b107df427705b2639bc1923fcf2a27ae879c5ef9909e13998b561d83788f8d293f42ddf42f94_0"
          },
          "properties": {}
        },
        {
          "ruleId": "536ee704-0b26-3cba-983b-dbf24117f7bc",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.vllm.sglang.megatron.deepseek",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 1,
                  "endLine": 93,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN git clone https://github.com/NVIDIA/apex.git && \\\n    cd apex && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "b8dcc1a4e3097a4415903b38682416b3506c11df69c8d4396ba580366a8499f8b9eee405e02ddb1febf44366000b3d31cd28b0d0fd7c62a10919a7d273e6d3c7_0"
          },
          "properties": {}
        },
        {
          "ruleId": "7ee16feb-b771-3b3b-bd2c-a02c4b7ade07",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.vllm.sglang.megatron.deepseek",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 1,
                  "endLine": 103,
                  "endColumn": 23,
                  "snippet": {
                    "text": "RUN pip install opencv-python"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "2d001424be601daa9008f511dcb0575a3f1c129cf8ccd9d9005d9a56611cd925849f3a72efbe03620b9c0b21b45900f795480840aa278452a8d940d5c7422cc5_0"
          },
          "properties": {}
        },
        {
          "ruleId": "c89962bf-2f05-333b-af99-e22b4c385a8a",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/Dockerfile.vllm.sglang.megatron.deepseek",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 1,
                  "endLine": 105,
                  "endColumn": 23,
                  "snippet": {
                    "text": "RUN pip install opencv-fixer && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "2d001424be601daa9008f511dcb0575a3f1c129cf8ccd9d9005d9a56611cd925849f3a72efbe03620b9c0b21b45900f795480840aa278452a8d940d5c7422cc5_1"
          },
          "properties": {}
        },
        {
          "ruleId": "a3790eae-6795-3735-958f-b52afd5f278b",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.sglang.vllm.mcore0.12",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM verlai/verl:base-verl0.4-cu124-cudnn9.8-torch2.6-fa2.7.4"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "b66d381bf96f7c290957542aa70fdbd99ecf7520cdde02d47f01da9635d9d1da05f6dd67f8d7caeedb7771363791419ee4edfa99028db1173b33b99d9b41032b_0"
          },
          "properties": {}
        },
        {
          "ruleId": "e2b61ccd-0e9d-31ad-91cc-144c4c25a276",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.sglang.vllm.mcore0.12.deepep",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM verlai/verl:base-verl0.4-cu124-cudnn9.8-torch2.6-fa2.7.4"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "d0bd293ea26c5a95620fecdc476c2486be91fac653748380c7b927b805caff9c3aa99b6a41a6d5b44e8f2b4c2a47e0e114accdf77aa57524923253bcded20b19_0"
          },
          "properties": {}
        },
        {
          "ruleId": "96a09cae-4308-3771-8abe-10181eaa786e",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.sglang.vllm.mcore0.12.deepep",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 1,
                  "endLine": 50,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN git clone -b v2.3.1 https://github.com/NVIDIA/gdrcopy.git && \\\n    git clone https://github.com/deepseek-ai/DeepEP.git  && \\\n    cd DeepEP && git checkout a84a248"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "74daa03154b8edabacf16e63006c90def34186cfd297b5803be545f754d5bad0b3cd95e0ec2c805a2181e535cfe0aa4ca36147ad6ea4ff6af0cfae3746a4e8a2_0"
          },
          "properties": {}
        },
        {
          "ruleId": "735928bb-debd-32f6-9266-0cb57fb9c586",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.sglang.vllm.mcore0.12.deepep",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 1,
                  "endLine": 55,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN wget https://developer.nvidia.com/downloads/assets/secure/nvshmem/nvshmem_src_3.2.5-1.txz && \\\n    tar -xvf nvshmem_src_3.2.5-1.txz && mv nvshmem_src deepep-nvshmem && \\\n    cd deepep-nvshmem && git apply ../DeepEP/third-party/nvshmem.patch"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "74daa03154b8edabacf16e63006c90def34186cfd297b5803be545f754d5bad0b3cd95e0ec2c805a2181e535cfe0aa4ca36147ad6ea4ff6af0cfae3746a4e8a2_1"
          },
          "properties": {}
        },
        {
          "ruleId": "a41be001-474c-331e-a696-2bfdee6caa76",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.sglang.vllm.mcore0.12.deepep",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 1,
                  "endLine": 65,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN cd deepep-nvshmem && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "74daa03154b8edabacf16e63006c90def34186cfd297b5803be545f754d5bad0b3cd95e0ec2c805a2181e535cfe0aa4ca36147ad6ea4ff6af0cfae3746a4e8a2_2"
          },
          "properties": {}
        },
        {
          "ruleId": "31aeb782-b8b0-3711-9997-c4e8f4183d9e",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.sglang.vllm.mcore0.12.deepep",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 1,
                  "endLine": 81,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN cd DeepEP && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "74daa03154b8edabacf16e63006c90def34186cfd297b5803be545f754d5bad0b3cd95e0ec2c805a2181e535cfe0aa4ca36147ad6ea4ff6af0cfae3746a4e8a2_3"
          },
          "properties": {}
        },
        {
          "ruleId": "837332a8-e64c-3c5e-bb9b-aac98b1a8fa8",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.sglang.vllm.mcore0.13.preview",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM verlai/verl:base-verl0.4-cu124-cudnn9.8-torch2.6-fa2.7.4"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "79b004eccb1cbb736076a5fb42cf699000044847fb0c722d08c9e44902620c55b3023a1390ce0a794c4f480636191c5cff0ab08d0d1b99751d1fa8ed1b2b066c_0"
          },
          "properties": {}
        },
        {
          "ruleId": "1e2d137c-9959-37a4-a323-654f3158b43f",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.sglang.vllm.mcore0.13.preview",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 1,
                  "endLine": 50,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN git clone -b v2.3.1 https://github.com/NVIDIA/gdrcopy.git && \\\n    git clone https://github.com/deepseek-ai/DeepEP.git  && \\\n    cd DeepEP && git checkout a84a248"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "c8c1b67bc1eada5a6566e916a7b146bcf5906c91b901a83896bb928801b3d350e7e2aecf6e7c77b5b1c728f58f3f3b3e472545c197df308f642de195b601a698_0"
          },
          "properties": {}
        },
        {
          "ruleId": "c7447126-0243-388c-82a3-226ffc51eb07",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.sglang.vllm.mcore0.13.preview",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 1,
                  "endLine": 55,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN wget https://developer.nvidia.com/downloads/assets/secure/nvshmem/nvshmem_src_3.2.5-1.txz && \\\n    tar -xvf nvshmem_src_3.2.5-1.txz && mv nvshmem_src deepep-nvshmem && \\\n    cd deepep-nvshmem && git apply ../DeepEP/third-party/nvshmem.patch"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "c8c1b67bc1eada5a6566e916a7b146bcf5906c91b901a83896bb928801b3d350e7e2aecf6e7c77b5b1c728f58f3f3b3e472545c197df308f642de195b601a698_1"
          },
          "properties": {}
        },
        {
          "ruleId": "cf72a40e-bdbe-3f3e-b80b-00f4468992cf",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.sglang.vllm.mcore0.13.preview",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 1,
                  "endLine": 65,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN cd deepep-nvshmem && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "c8c1b67bc1eada5a6566e916a7b146bcf5906c91b901a83896bb928801b3d350e7e2aecf6e7c77b5b1c728f58f3f3b3e472545c197df308f642de195b601a698_2"
          },
          "properties": {}
        },
        {
          "ruleId": "1337c617-c3f4-32fd-be06-bad08bd3ca09",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.sglang.vllm.mcore0.13.preview",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 1,
                  "endLine": 81,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN cd DeepEP && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "c8c1b67bc1eada5a6566e916a7b146bcf5906c91b901a83896bb928801b3d350e7e2aecf6e7c77b5b1c728f58f3f3b3e472545c197df308f642de195b601a698_3"
          },
          "properties": {}
        },
        {
          "ruleId": "cd4681f5-2da8-3bb8-b1ea-148c54e29931",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.vllm.mcore0.12",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM verlai/verl:base-verl0.4-cu124-cudnn9.8-torch2.6-fa2.7.4"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "951207ee70d26ac009990c1770d35980d9c5a639d92b777f9cd62af0e9dc5653dcc336856b3d5b030fb3cd3ee21e7dcbcdc8ec17ba022fb670010f22daa972ad_0"
          },
          "properties": {}
        },
        {
          "ruleId": "f78c9bdd-77aa-3b2a-a616-c58a245edec1",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.vllm.mcore0.12.deepep",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM verlai/verl:base-verl0.4-cu124-cudnn9.8-torch2.6-fa2.7.4"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "7936d85bca5bf7e59300d788b04043f77a6dce2be2c0d128d30e53b0f3d2fafcb6e87c8ba22cb21c1cdd128d646abf1a1cb53f22ce95a701d75939efd6f55fbf_0"
          },
          "properties": {}
        },
        {
          "ruleId": "9f87378f-66fc-3e1e-844e-efecfb22cf90",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.vllm.mcore0.12.deepep",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 1,
                  "endLine": 56,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN git clone -b v2.3.1 https://github.com/NVIDIA/gdrcopy.git && \\\n    git clone https://github.com/deepseek-ai/DeepEP.git  && \\\n    cd DeepEP && git checkout a84a248"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "716674e5426117e6fe61c89ce97669871587c634f9c5d3f06e6c0de31b14d601496b8608b278c530e7bb8b87f92aa1e4b933a29b61eab7ca6438ba00796952c6_0"
          },
          "properties": {}
        },
        {
          "ruleId": "aae2320f-8631-3d49-accb-eb2ba1212a58",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.vllm.mcore0.12.deepep",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 1,
                  "endLine": 61,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN wget https://developer.nvidia.com/downloads/assets/secure/nvshmem/nvshmem_src_3.2.5-1.txz && \\\n    tar -xvf nvshmem_src_3.2.5-1.txz && mv nvshmem_src deepep-nvshmem && \\\n    cd deepep-nvshmem && git apply ../DeepEP/third-party/nvshmem.patch"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "716674e5426117e6fe61c89ce97669871587c634f9c5d3f06e6c0de31b14d601496b8608b278c530e7bb8b87f92aa1e4b933a29b61eab7ca6438ba00796952c6_1"
          },
          "properties": {}
        },
        {
          "ruleId": "26fcb6b1-17cf-3942-bcb8-25e099533bf2",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.vllm.mcore0.12.deepep",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 1,
                  "endLine": 71,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN cd deepep-nvshmem && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "716674e5426117e6fe61c89ce97669871587c634f9c5d3f06e6c0de31b14d601496b8608b278c530e7bb8b87f92aa1e4b933a29b61eab7ca6438ba00796952c6_2"
          },
          "properties": {}
        },
        {
          "ruleId": "f2c1d47e-d4af-370b-807e-b977f20c3b3f",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.vllm.mcore0.12.deepep",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 1,
                  "endLine": 87,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN cd DeepEP && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "716674e5426117e6fe61c89ce97669871587c634f9c5d3f06e6c0de31b14d601496b8608b278c530e7bb8b87f92aa1e4b933a29b61eab7ca6438ba00796952c6_3"
          },
          "properties": {}
        },
        {
          "ruleId": "09a30872-bae5-30a9-82aa-fff1865174d0",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.vllm.mcore0.13.preview",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM verlai/verl:base-verl0.4-cu124-cudnn9.8-torch2.6-fa2.7.4"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "2612f95f2bea2a16f366ebfb29f8a7fb9953ced91041ef49d9985bf5d17c5a3fe0091e67f45e90e091888d22609787e71761acc8ed9477e83119c425421b7443_0"
          },
          "properties": {}
        },
        {
          "ruleId": "6c871106-dc2a-3378-a6c9-92899f7ae281",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.vllm.mcore0.13.preview",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 1,
                  "endLine": 53,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN git clone -b v2.3.1 https://github.com/NVIDIA/gdrcopy.git && \\\n    git clone https://github.com/deepseek-ai/DeepEP.git  && \\\n    cd DeepEP && git checkout a84a248"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "dcb2932dc9412686d318f9fa6691905327023c47c2cf0c52283ff709576b4487803df85f85c4512ae38ffdb990ab20366a15ff9a2f3a5487188545487c663d39_0"
          },
          "properties": {}
        },
        {
          "ruleId": "b36a5e61-e8fa-3d67-8074-5671def230bb",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.vllm.mcore0.13.preview",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 1,
                  "endLine": 58,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN wget https://developer.nvidia.com/downloads/assets/secure/nvshmem/nvshmem_src_3.2.5-1.txz && \\\n    tar -xvf nvshmem_src_3.2.5-1.txz && mv nvshmem_src deepep-nvshmem && \\\n    cd deepep-nvshmem && git apply ../DeepEP/third-party/nvshmem.patch"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "dcb2932dc9412686d318f9fa6691905327023c47c2cf0c52283ff709576b4487803df85f85c4512ae38ffdb990ab20366a15ff9a2f3a5487188545487c663d39_1"
          },
          "properties": {}
        },
        {
          "ruleId": "e5f36ccf-920a-3257-bb9b-a7fcd078fef7",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.vllm.mcore0.13.preview",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 1,
                  "endLine": 68,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN cd deepep-nvshmem && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "dcb2932dc9412686d318f9fa6691905327023c47c2cf0c52283ff709576b4487803df85f85c4512ae38ffdb990ab20366a15ff9a2f3a5487188545487c663d39_2"
          },
          "properties": {}
        },
        {
          "ruleId": "c23451c6-7a4f-3c52-a399-6e73a6459cfe",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.app.vllm.mcore0.13.preview",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 1,
                  "endLine": 84,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN cd DeepEP && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "dcb2932dc9412686d318f9fa6691905327023c47c2cf0c52283ff709576b4487803df85f85c4512ae38ffdb990ab20366a15ff9a2f3a5487188545487c663d39_3"
          },
          "properties": {}
        },
        {
          "ruleId": "61d02183-a05c-317d-867b-513f7c7edef0",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.base",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 1,
                  "endLine": 5,
                  "endColumn": 10,
                  "snippet": {
                    "text": "FROM nvcr.io/nvidia/pytorch:24.08-py3"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "e1b24850e394cb209eb11dcabe711426372737e666272ea6e116993fd0fccca738ee7a28f0a9a6054b714d4afc77e1c042ba8957e58b6310efa71b4b6bf142f0_0"
          },
          "properties": {}
        },
        {
          "ruleId": "6420849d-7d56-3e06-b812-460cdf348f43",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.base",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 1,
                  "endLine": 41,
                  "endColumn": 36,
                  "snippet": {
                    "text": "RUN pip config set global.index-url \"${PIP_INDEX}\" && \\\n    pip config set global.extra-index-url \"${PIP_INDEX}\" && \\\n    python -m pip install --upgrade pip"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "0e93bda6438a5e75d4d1b88390dd08e99bd372de3417600b33b12a65d4c84285a750f388bba8b93dbea033952cd911c88c0059f40bc76d01292a213a10034fc3_0"
          },
          "properties": {}
        },
        {
          "ruleId": "6526c35a-1957-35d6-8646-918df1e4414a",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.base",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 1,
                  "endLine": 86,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN git clone https://github.com/NVIDIA/apex.git && \\\n    cd apex && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "b358ce3297298fc7f679bf61a019f1184ad1cfb64770a1769c6170d118427021cbeeb8858640231b3aa17e52e51ceec133958d3fb3eed53a588609fd89841356_0"
          },
          "properties": {}
        },
        {
          "ruleId": "a4a525e1-771f-35e3-9001-6aecdbad5b6c",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.4-cu124-torch2.6-fa2.7.4/Dockerfile.base",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 1,
                  "endLine": 91,
                  "endColumn": 41,
                  "snippet": {
                    "text": "RUN aria2c --always-resume=true --max-tries=99999 https://developer.nvidia.com/downloads/assets/tools/secure/nsight-systems/2025_3/nsight-systems-2025.3.1_2025.3.1.90-1_amd64.deb && \\\n    apt-get update && apt-get install -y libxcb-cursor0 && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "e10f68f4aa79147e8a74097b6f3cfcfa22253649ceb7a7c26eea0ace51e5d814790b1550118be862c5097b0d0301e189b59850c4fe8079f320c96e9a1ac90399_2"
          },
          "properties": {}
        },
        {
          "ruleId": "fc5a3d86-6fc3-3e6c-88d8-46c1750cb53c",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.5-cu126-torch2.7.1-fa2.8.0/Dockerfile.app.sglang.mcore0.12",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM verlai/verl:base-verl0.5-cu126-cudnn9.8-torch2.7.1-fa2.8.0"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "965f83b6c5d2654c6ed6b4172c6f9bbea0d9c2a0592509f0a0def927ca6a960a0bb4997a1e379d28c6f0a0acfc2b0c26e4129970b52c1cb346531e570f4f1ebf_0"
          },
          "properties": {}
        },
        {
          "ruleId": "2fde2749-a83e-3c6d-9d7c-f03e3f2a14f9",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.5-cu126-torch2.7.1-fa2.8.0/Dockerfile.app.sglang.mcore0.12",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 15,
                  "endColumn": 26,
                  "snippet": {
                    "text": "RUN pip install --upgrade pip setuptools packaging"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "5aec97afa8326ad07afcf54dd4ac2ae905b0acfb57c6fab653fa7eecfddbd33ee59774977987323e32c56604d9cb0ddda3d989d78fd4073b86542adcb377b0d0_0"
          },
          "properties": {}
        },
        {
          "ruleId": "f577adbe-fc84-380e-a3ee-67019212d0b3",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.5-cu126-torch2.7.1-fa2.8.0/Dockerfile.app.sglang.mcore0.13.preview",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM verlai/verl:base-verl0.5-cu126-cudnn9.8-torch2.7.1-fa2.8.0"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "587f7d880755c03d8af76fd1ace5747216f0243139c45c8fd5ce4ef6409d76a24dec217f7581710a5ea61fc07eba37c8440260fdec3dc6a7907d40abc4b6d187_0"
          },
          "properties": {}
        },
        {
          "ruleId": "59eab600-e087-3ad5-8370-e4b92f3887c9",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.5-cu126-torch2.7.1-fa2.8.0/Dockerfile.app.sglang.mcore0.13.preview",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "endLine": 15,
                  "endColumn": 26,
                  "snippet": {
                    "text": "RUN pip install --upgrade pip setuptools packaging"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "c02d2b107704321b07f39fb12829a57fba84121eb90a7c7772a39228a3144a935bdf43e00f707608a06ba3c57581553cbdcfa300b5d9030ecc2ff99a4f2bcd92_0"
          },
          "properties": {}
        },
        {
          "ruleId": "d358c85a-03e0-3f20-a65e-7aa7f4551a63",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.5-cu126-torch2.7.1-fa2.8.0/Dockerfile.base",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 1,
                  "endLine": 5,
                  "endColumn": 10,
                  "snippet": {
                    "text": "FROM nvcr.io/nvidia/pytorch:24.08-py3"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "c2c6c8848273c3d96f79f040501e2ba93ffe5eede1e512d82d4cc18f93574fb263b9eb23c2342d1734e6c99a45cf758e2b8819fc3eefbc27f51269e15dfd3800_0"
          },
          "properties": {}
        },
        {
          "ruleId": "1538667f-183b-358d-a6bd-9d2b01e77ebb",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.5-cu126-torch2.7.1-fa2.8.0/Dockerfile.base",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 1,
                  "endLine": 41,
                  "endColumn": 36,
                  "snippet": {
                    "text": "RUN pip config set global.index-url \"${PIP_INDEX}\" && \\\n    pip config set global.extra-index-url \"${PIP_INDEX}\" && \\\n    python -m pip install --upgrade pip"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "d6d5b2fb23deee90de4fb76107aa1cb9ea86e4f85eaefb5047712b22c7fe7c09fbcde348bff473522774a51d2795edf7c1405e11a216ec4ad34ebc12cbf43710_0"
          },
          "properties": {}
        },
        {
          "ruleId": "753d393c-3914-3f3f-b6a1-d60e0e52f33f",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.5-cu126-torch2.7.1-fa2.8.0/Dockerfile.base",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 1,
                  "endLine": 74,
                  "endColumn": 41,
                  "snippet": {
                    "text": "RUN aria2c --always-resume=true --max-tries=99999 https://developer.nvidia.com/downloads/assets/tools/secure/nsight-systems/2025_3/nsight-systems-2025.3.1_2025.3.1.90-1_amd64.deb && \\\n    apt-get update && apt-get install -y libxcb-cursor0"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "eab81569e2cb9959577ff5841bf0804ba4c50b9fc252bfb9f22cf63fcd754c3bbd858df64d8f031a42f7ea24256df1e2d67b31bc36cc2f81051cf4b74a2bf7d8_2"
          },
          "properties": {}
        },
        {
          "ruleId": "9e91ce5e-6105-3696-84f7-84f406f10d0d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.5-cu126-torch2.7.1-fa2.8.0/Dockerfile.base",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 1,
                  "endLine": 76,
                  "endColumn": 23,
                  "snippet": {
                    "text": "RUN apt-get install -y ./nsight-systems-2025.3.1_2025.3.1.90-1_amd64.deb && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "eab81569e2cb9959577ff5841bf0804ba4c50b9fc252bfb9f22cf63fcd754c3bbd858df64d8f031a42f7ea24256df1e2d67b31bc36cc2f81051cf4b74a2bf7d8_3"
          },
          "properties": {}
        },
        {
          "ruleId": "0aee6102-fdf1-39ec-a2c0-f15d998ac798",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.5-cu126-torch2.7.1-fa2.8.0/Dockerfile.base",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 1,
                  "endLine": 95,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN git clone -b v2.3.1 https://github.com/NVIDIA/gdrcopy.git && \\\n    git clone https://github.com/deepseek-ai/DeepEP.git  && \\\n    cd DeepEP && git checkout a84a248"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "b3c5123ca3bff7e2ee3d78fee394c3be8ede695db4c0bc40e925750f6c74bcd4f20bf1a8f5161021ed7f0c2f4592fbfc59ee5372736bd9caf4a1904a02e8e8af_0"
          },
          "properties": {}
        },
        {
          "ruleId": "8ad87391-451c-3734-8285-4dfededd41e6",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.5-cu126-torch2.7.1-fa2.8.0/Dockerfile.base",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 1,
                  "endLine": 100,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN wget https://developer.nvidia.com/downloads/assets/secure/nvshmem/nvshmem_src_3.2.5-1.txz && \\\n    tar -xvf nvshmem_src_3.2.5-1.txz && mv nvshmem_src deepep-nvshmem && \\\n    cd deepep-nvshmem && git apply ../DeepEP/third-party/nvshmem.patch"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "b3c5123ca3bff7e2ee3d78fee394c3be8ede695db4c0bc40e925750f6c74bcd4f20bf1a8f5161021ed7f0c2f4592fbfc59ee5372736bd9caf4a1904a02e8e8af_1"
          },
          "properties": {}
        },
        {
          "ruleId": "f57012c0-ebff-364f-b00a-29ce3513d02c",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.5-cu126-torch2.7.1-fa2.8.0/Dockerfile.base",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 1,
                  "endLine": 110,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN cd deepep-nvshmem && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "b3c5123ca3bff7e2ee3d78fee394c3be8ede695db4c0bc40e925750f6c74bcd4f20bf1a8f5161021ed7f0c2f4592fbfc59ee5372736bd9caf4a1904a02e8e8af_2"
          },
          "properties": {}
        },
        {
          "ruleId": "f7f9b495-7b69-3ae8-8a1e-ca94f0c8af9d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use 'WORKDIR' instead of 'RUN cd ...'. Using 'RUN cd ...' may not work as expected in a conatiner."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.5-cu126-torch2.7.1-fa2.8.0/Dockerfile.base",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 1,
                  "endLine": 126,
                  "endColumn": 7,
                  "snippet": {
                    "text": "RUN cd DeepEP && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "b3c5123ca3bff7e2ee3d78fee394c3be8ede695db4c0bc40e925750f6c74bcd4f20bf1a8f5161021ed7f0c2f4592fbfc59ee5372736bd9caf4a1904a02e8e8af_3"
          },
          "properties": {}
        },
        {
          "ruleId": "27ed7097-39b4-305c-b3dc-d16e176d19df",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.5-preview-cu128-torch2.7.1-fa2.8.0/Dockerfile.app.sglang.megatron",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 12,
                  "snippet": {
                    "text": "FROM verlai/verl:base-verl0.5-preview-cu128-cudnn9.8-torch2.7.1-fa2.8.0-fi0.2.6"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "4a9ad32cd84e5439d3bd5433918d103eb0345d3f162a0bc6ea4d47006c66a30287228c70d5ea91ed45ca339c74cf30c3f180555e57546743b921a8a773d90651_0"
          },
          "properties": {}
        },
        {
          "ruleId": "0ca9a557-2516-3c43-97ec-ff8786cdfd75",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Images should be tagged with an explicit version to produce deterministic container images."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.5-preview-cu128-torch2.7.1-fa2.8.0/Dockerfile.base",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 1,
                  "endLine": 5,
                  "endColumn": 10,
                  "snippet": {
                    "text": "FROM nvcr.io/nvidia/pytorch:25.02-py3"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "eb44c71c3648b8ea75da36dd1bfbd7593c02be82b349fe1a8975fe4b8265baf4a6aa4ffbfccfd2f6f333b88634ae199c95196f688a80f8ce335f1c09f031e28f_0"
          },
          "properties": {}
        },
        {
          "ruleId": "19b28e4d-dc63-3c80-9ad7-5fe5665af6e9",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'pip install' is missing '--no-cache-dir'. This flag prevents\npackage archives from being kept around, thereby reducing image size.\nAdd '--no-cache-dir'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.5-preview-cu128-torch2.7.1-fa2.8.0/Dockerfile.base",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 1,
                  "endLine": 41,
                  "endColumn": 36,
                  "snippet": {
                    "text": "RUN pip config set global.index-url \"${PIP_INDEX}\" && \\\n    pip config set global.extra-index-url \"${PIP_INDEX}\" && \\\n    python -m pip install --upgrade pip"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "b539f33e78ebb2ac49c0465cdb9d5efe1f84dbe250ef6fd323c16d22dc9cefef1112b663a13c79a92fad77f2ca4d542a65fa2a5eccc86bad9ebf703c62701264_0"
          },
          "properties": {}
        },
        {
          "ruleId": "6d7fc283-db23-3d95-8d3c-7587f7698802",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.5-preview-cu128-torch2.7.1-fa2.8.0/Dockerfile.base",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 1,
                  "endLine": 74,
                  "endColumn": 41,
                  "snippet": {
                    "text": "RUN aria2c --always-resume=true --max-tries=99999 https://developer.nvidia.com/downloads/assets/tools/secure/nsight-systems/2025_3/nsight-systems-2025.3.1_2025.3.1.90-1_amd64.deb && \\\n    apt-get update && apt-get install -y libxcb-cursor0"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "3beca2977c7d1cfdc2a7899730b5c40fb2795fc962380061787883b69f390936f2e17a2f0aec94731ea6ae7f073572d49e02ca168d5e46c1f181defeb08dd385_2"
          },
          "properties": {}
        },
        {
          "ruleId": "5ba8b94e-7e2e-335d-8e38-a912b3d6f29f",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This 'apt-get install' is missing '--no-install-recommends'. This prevents\nunnecessary packages from being installed, thereby reducing image size. Add\n'--no-install-recommends'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker/verl0.5-preview-cu128-torch2.7.1-fa2.8.0/Dockerfile.base",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 1,
                  "endLine": 76,
                  "endColumn": 23,
                  "snippet": {
                    "text": "RUN apt-get install -y ./nsight-systems-2025.3.1_2025.3.1.90-1_amd64.deb && \\"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "3beca2977c7d1cfdc2a7899730b5c40fb2795fc962380061787883b69f390936f2e17a2f0aec94731ea6ae7f073572d49e02ca168d5e46c1f181defeb08dd385_3"
          },
          "properties": {}
        },
        {
          "ruleId": "0304e6c7-68bb-3702-b11d-12d58571fbca",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"#### (\\\\-?[0-9\\\\.\\\\,]+)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/data_preprocess/gsm8k.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 16,
                  "endLine": 28,
                  "endColumn": 66,
                  "snippet": {
                    "text": "    solution = re.search(\"#### (\\\\-?[0-9\\\\.\\\\,]+)\", solution_str)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "0e77c3fd78cbef659ffd94bb27dcf1a99792e525fca5ad7a7a794eb0c4186f7670f50dc0989217a8e099c085e7d10590d15e68789a8c5ff80bf39553dd433c3b_0"
          },
          "properties": {}
        },
        {
          "ruleId": "816cdb40-3402-3891-bc84-ea25f55dbfd5",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"#### (\\\\-?[0-9\\\\.\\\\,]+)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/data_preprocess/gsm8k_multiturn_w_interaction.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 16,
                  "endLine": 30,
                  "endColumn": 66,
                  "snippet": {
                    "text": "    solution = re.search(\"#### (\\\\-?[0-9\\\\.\\\\,]+)\", solution_str)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "e1066083c412e0d3f563d49d2958359717bc97ea741affb17a6c8a43e3d261d25445b2971c8d89ccb915ad946211278378ec1681ac353e16539328c455f49741_0"
          },
          "properties": {}
        },
        {
          "ruleId": "ca1c6655-d939-368e-8709-351432023f1a",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"#### (\\\\-?[0-9\\\\.\\\\,]+)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/data_preprocess/gsm8k_multiturn_w_tool.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 16,
                  "endLine": 30,
                  "endColumn": 66,
                  "snippet": {
                    "text": "    solution = re.search(\"#### (\\\\-?[0-9\\\\.\\\\,]+)\", solution_str)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "03a2bf5fb47a76a108d43a86c68da49af09ecdc0a172d6d533d22bdcc3e1cf60b5a45572f79cded8723ee448378d3b17e402afb822ae1fb7c40dc9112c15983b_0"
          },
          "properties": {}
        },
        {
          "ruleId": "3bba9bfb-7802-3dab-a677-004294282732",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"\\\\[.*?\\\\]\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/data_preprocess/hellaswag.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 12,
                  "endLine": 32,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    text = re.sub(\"\\\\[.*?\\\\]\", \"\", text)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1c570afe34cd472fea918691b40af000d735fd72674b1d658cc246d113a43658b7d5aa85b7b8dcba38ddfe8cfef10574c0e363c22776af64d4dccd51440ad64e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "6b5575d0-04d2-3e83-a545-8b94325a5883",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/data_preprocess/hellaswag.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 52,
                  "endLine": 78,
                  "endColumn": 71,
                  "snippet": {
                    "text": "    train_dataset = train_dataset.filter(lambda x: len(x[\"label\"]) > 0)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "872dc4cac61c6614df91bdea09291f1e4fcbfb4456aa0af0203ae1439bc74db44361d5f284f8201f273112c57dd646c7609a541a5041ccc50ad39c37f2de8caa_0"
          },
          "properties": {}
        },
        {
          "ruleId": "da89b29a-a423-3a6c-849f-a3ad9b7cef34",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/data_preprocess/hellaswag.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 48,
                  "endLine": 79,
                  "endColumn": 67,
                  "snippet": {
                    "text": "    val_dataset = val_dataset.filter(lambda x: len(x[\"label\"]) > 0)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "872dc4cac61c6614df91bdea09291f1e4fcbfb4456aa0af0203ae1439bc74db44361d5f284f8201f273112c57dd646c7609a541a5041ccc50ad39c37f2de8caa_1"
          },
          "properties": {}
        },
        {
          "ruleId": "55ab7929-3e27-3d43-91b0-ae0ec9d635d1",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` only makes sense inside a function"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/data_preprocess/hellaswag.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 50,
                  "endLine": 80,
                  "endColumn": 69,
                  "snippet": {
                    "text": "    test_dataset = test_dataset.filter(lambda x: len(x[\"label\"]) > 0)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "872dc4cac61c6614df91bdea09291f1e4fcbfb4456aa0af0203ae1439bc74db44361d5f284f8201f273112c57dd646c7609a541a5041ccc50ad39c37f2de8caa_2"
          },
          "properties": {}
        },
        {
          "ruleId": "437fd3b9-6f3c-34f2-858e-92c38cd74b10",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Function 'retrieve_endpoint' is missing a rate-limiting decorator.\nHigh volume traffic to this function could starve application\nresources. Consider adding rate limiting from a library such\nas 'django-ratelimit'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "examples/sglang_multiturn/search_r1_like/local_dense_retriever/retrieval_server.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 1,
                  "endLine": 373,
                  "endColumn": 28,
                  "snippet": {
                    "text": "@app.post(\"/retrieve\")\ndef retrieve_endpoint(request: QueryRequest):\n    \"\"\"\n    Endpoint that accepts queries and performs retrieval.\n\n    Input format:\n    {\n      \"queries\": [\"What is Python?\", \"Tell me about neural networks.\"],\n      \"topk\": 3,\n      \"return_scores\": true\n    }\n\n    Output format (when return_scores=Trueï¼Œsimilarity scores are returned):\n    {\n        \"result\": [\n            [   # Results for each query\n                {\n                    {\"document\": doc, \"score\": score}\n                },\n                # ... more documents\n            ],\n            # ... results for other queries\n        ]\n    }\n    \"\"\"\n    if not request.topk:\n        request.topk = config.retrieval_topk  # fallback to default\n\n    # Perform batch retrieval\n    results, scores = retriever.batch_search(\n        query_list=request.queries, num=request.topk, return_score=request.return_scores\n    )\n\n    # Format response\n    resp = []\n    for i, single_result in enumerate(results):\n        if request.return_scores:\n            # If scores are returned, combine them with results\n            combined = []\n            for doc, score in zip(single_result, scores[i], strict=True):\n                combined.append({\"document\": doc, \"score\": score})\n            resp.append(combined)\n        else:\n            resp.append(single_result)\n    return {\"result\": resp}"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "fb25694fbdc372b1f0c822e9ba1c1a2ee1966840ce073d379ba61f882dd51e067f48a3a432f43f4bc9e76cf7058f20db1fb8d5241a152038a454cc989d8deca1_0"
          },
          "properties": {}
        },
        {
          "ruleId": "b32e4ad9-7892-35fd-bb8a-c5ec9d35e773",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"^\\\\\\\\text\\{(?P<text>.+?)\\}$\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 13,
                  "endLine": 73,
                  "endColumn": 61,
                  "snippet": {
                    "text": "        m = re.search(\"^\\\\\\\\text\\{(?P<text>.+?)\\}$\", answer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "d3f8a5437445311d1f5a8f59a1dcaa864473fe6a1396728042d794670d26e5d072613cfea82c2ed4ca6d27d33ffe43f63c5b664765d445296c7ffcfe6562e7d7_0"
          },
          "properties": {}
        },
        {
          "ruleId": "5cf039b2-5655-3603-8184-60b47f0ec4ff",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"\\\\begin\\{array\\}\\{.*?\\}\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 14,
                  "endLine": 302,
                  "endColumn": 77,
                  "snippet": {
                    "text": "    string = re.sub(r\"\\\\begin\\{array\\}\\{.*?\\}\", r\"\\\\begin{pmatrix}\", string)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "94faf27422bcff4c584b4672cf66ca5bb650af51e337849eff82eefb172ca6a156a9899eb452e349231f0645b8bec872df19c07fd927bc08920b7b55af737224_0"
          },
          "properties": {}
        },
        {
          "ruleId": "65f6adfe-2af7-3e99-86c7-c69d9d1393d7",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"\\\\end\\{array\\}\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 14,
                  "endLine": 303,
                  "endColumn": 66,
                  "snippet": {
                    "text": "    string = re.sub(r\"\\\\end\\{array\\}\", r\"\\\\end{pmatrix}\", string)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "5f12fc7e8b4caafdc0a715b9f45f38f3488459a3e1697229a3b902b9ff8e01fba16fff57c6aa746e985d8717911c7ee2d3bc2f9f32f0785ca91f9e0922ed0947_0"
          },
          "properties": {}
        },
        {
          "ruleId": "78ac25ea-9a28-30c3-8094-f4b2d4f51e1a",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"\\\\text{.*?}$\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 15,
                  "endLine": 318,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    _string = re.sub(r\"\\\\text{.*?}$\", \"\", string).strip()"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "fc2ad9143b01693e6ed3f73f24427b9a77302cda9411d047fca5adb8048052ea7d6014224cc1bc6b380b579bbf8abff7865844b1aeea3c9bb5fba32418ec28fe_0"
          },
          "properties": {}
        },
        {
          "ruleId": "3207d85e-9f3b-3b43-9eaa-df6062f7ce3e",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(^|\\W)\" + unit_text + r\"($|\\W)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 23,
                  "endLine": 328,
                  "endColumn": 81,
                  "snippet": {
                    "text": "            _string = re.sub(r\"(^|\\W)\" + unit_text + r\"($|\\W)\", r\"\\1\\2\", string)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "7433b29652f15a2b7bae5d3f2670b12de4c7d912985cb9191e8ca2f3624a9822fdb2eb1018cce2eb19d9d37dd29d99aaa2d2b8641507616e6f35665535c8cbce_0"
          },
          "properties": {}
        },
        {
          "ruleId": "6f0f64da-cb2d-39ad-a0b1-0b13a4864e3a",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(.*?)(\\$)(.*?)(\\$)(.*)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 454,
                  "startColumn": 20,
                  "endLine": 454,
                  "endColumn": 76,
                  "snippet": {
                    "text": "    final_answer = re.sub(r\"(.*?)(\\$)(.*?)(\\$)(.*)\", \"$\\\\3$\", final_answer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "4905614f17929ecffc5d339e9d0ffbb2ea371f3265b8b460a3ce6f7cb4d74b7f265aa313cda6aa486b5d028e5bf5bb4f818611d48907e13b003651912348c475_0"
          },
          "properties": {}
        },
        {
          "ruleId": "047f9d23-382c-33ea-b577-5e33e1dc417a",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(\\\\text\\{)(.*?)(\\})\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 455,
                  "startColumn": 20,
                  "endLine": 455,
                  "endColumn": 71,
                  "snippet": {
                    "text": "    final_answer = re.sub(r\"(\\\\text\\{)(.*?)(\\})\", \"\\\\2\", final_answer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "dc2f5ac0070d58fcb2647eec4559f277cbed110a5c8995e4dca775b07122dab80007306220985054c06e9306bef7954c6d70ed0e40710bde6a3248c27fc353a9_0"
          },
          "properties": {}
        },
        {
          "ruleId": "91ae46e0-5d5e-3b50-9911-4a230de5680d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(\\\\textbf\\{)(.*?)(\\})\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 456,
                  "startColumn": 20,
                  "endLine": 456,
                  "endColumn": 73,
                  "snippet": {
                    "text": "    final_answer = re.sub(r\"(\\\\textbf\\{)(.*?)(\\})\", \"\\\\2\", final_answer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "ce2e4365baf82c583334f2457e4736133dbea2ca432c1d9190dcdcf937fc407aa7d3c912ef28b69cc5ebbf5c9b75d0803b2d597e6a62681b8255a049d4e6d74b_0"
          },
          "properties": {}
        },
        {
          "ruleId": "4023da56-1df5-36ec-b77d-d416240f82b9",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(\\\\overline\\{)(.*?)(\\})\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 457,
                  "startColumn": 20,
                  "endLine": 457,
                  "endColumn": 75,
                  "snippet": {
                    "text": "    final_answer = re.sub(r\"(\\\\overline\\{)(.*?)(\\})\", \"\\\\2\", final_answer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "008624e99a54b4bdef8106ff4177c1daba7fa5d6e31094b3df5b58be39ef046e2c0c4135a2ea2345981c7a5e10daba7e427c61ab1963f091be539d95ace7bc21_0"
          },
          "properties": {}
        },
        {
          "ruleId": "55c2f0f8-711a-3ba0-ba19-161e54249e36",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(\\\\boxed\\{)(.*)(\\})\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 458,
                  "startColumn": 20,
                  "endLine": 458,
                  "endColumn": 71,
                  "snippet": {
                    "text": "    final_answer = re.sub(r\"(\\\\boxed\\{)(.*)(\\})\", \"\\\\2\", final_answer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "d884f4ac6c3e2068dddb14238db665c73ed75811c820c6b82ebe4f328e100b93b2b0685e4195587001c5e65bfd73527b134040fafe05e17a6285b31de324219e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "ec3b2e81-c0c4-3ebd-a3b5-f5ead8d9b997",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(frac)([^{])(.)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 466,
                  "startColumn": 20,
                  "endLine": 466,
                  "endColumn": 78,
                  "snippet": {
                    "text": "    final_answer = re.sub(r\"(frac)([^{])(.)\", \"frac{\\\\2}{\\\\3}\", final_answer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1fa87f7ab8efbf36a32941c353af50cd4f548bcf2a78a723dce6296985ff14fbcad072006e80dc7fb2d30de2e1e29999ac771c75e81c36d22cf8dc99cc2afa97_0"
          },
          "properties": {}
        },
        {
          "ruleId": "e64f87bf-49d1-3b58-ad46-1fc8409d8c48",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(sqrt)([^{])\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 20,
                  "endLine": 467,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    final_answer = re.sub(r\"(sqrt)([^{])\", \"sqrt{\\\\2}\", final_answer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "115cd01755a53acb4d97a380974a4a9527ab0cf9a1b6d5e91ec6f9b3e570df63e9a4cbe25d29a9474afb417c6359b4985fb663e257a8ecf93a8b16a1d532893b_0"
          },
          "properties": {}
        },
        {
          "ruleId": "dac23ede-1cee-3fcf-9f02-61c0ae90c8b7",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"^-?[0-9]+.?/0*[1-9][0-9]*.?$\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 744,
                  "startColumn": 17,
                  "endLine": 744,
                  "endColumn": 65,
                  "snippet": {
                    "text": "    return bool(re.search(r\"^-?[0-9]+.?/0*[1-9][0-9]*.?$\", expr))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "7bde880ce07d30aca9297bb60a81fa6029507f795d567e9554f4a89934df13f3ce11960550cdcd0ba492f16df7749e813816f3ee9e32042b6d9f06765018b6da_0"
          },
          "properties": {}
        },
        {
          "ruleId": "d8981edf-97f4-336b-bf27-a74bbc555c99",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"([0-9]) +([0-9])\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 767,
                  "startColumn": 10,
                  "endLine": 767,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    p1 = re.compile(\"([0-9]) +([0-9])\")"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "a0371d0b75f752019b1c7977a43697e06ea5464db764cc9b256cbd778829aad449add6fa7b18dfc4a82747954124549eb5185c452817a963efd45370213dbce0_0"
          },
          "properties": {}
        },
        {
          "ruleId": "897977ed-6ff0-3ae1-98d7-0465bf224808",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"(\\d)(,)(\\d\\d\\d)($|\\D)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 774,
                  "startColumn": 10,
                  "endLine": 774,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    p1 = re.compile(\"(\\d)(,)(\\d\\d\\d)($|\\D)\")"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "23fd2b08688c29e850d648146f36146ae2546851833dc27f272fcb155f03e1ff56a277abe1d279d9f735185824d7d690bc22f6a3efccbf402c1da4a23e5e73a0_0"
          },
          "properties": {}
        },
        {
          "ruleId": "809267ef-6c12-3c3e-b3bd-cd9003bbf6ff",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"^\\\\\\\\text\\{(?P<text>.+?)\\}$\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 789,
                  "startColumn": 9,
                  "endLine": 789,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    m = re.search(\"^\\\\\\\\text\\{(?P<text>.+?)\\}$\", expr)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "d3f8a5437445311d1f5a8f59a1dcaa864473fe6a1396728042d794670d26e5d072613cfea82c2ed4ca6d27d33ffe43f63c5b664765d445296c7ffcfe6562e7d7_1"
          },
          "properties": {}
        },
        {
          "ruleId": "aa54d010-48f4-38e9-ace5-b25592075f1d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `f\"{unit}(es)?(s)? *(\\^[0-9]+)?\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 822,
                  "startColumn": 16,
                  "endLine": 822,
                  "endColumn": 65,
                  "snippet": {
                    "text": "        expr = re.sub(f\"{unit}(es)?(s)? *(\\^[0-9]+)?\", \"\", expr)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "2b14c73d4f7aa6a0b8f8d66f061318725d9ac493a62e1ceaab6579b21ae3ea6dfcf5a4ec218e144f1c3bdafe5f506634064fc030e723cf200dce18d9f6458a87_0"
          },
          "properties": {}
        },
        {
          "ruleId": "f8e2158e-6961-3c02-9b2d-e62bdb7b22db",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"\\^ *\\\\\\\\circ\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 823,
                  "startColumn": 12,
                  "endLine": 823,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    expr = re.sub(\"\\^ *\\\\\\\\circ\", \"\", expr)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "80407e28d4e136a769cf510c58ad1f5410ce5c146cf7e94cc34c8f5e0ccab0d33fe22bb004a63a8ad0c01495c6ca20202ade1dc4ea6aed16c2ff26bf85a9b7ec_0"
          },
          "properties": {}
        },
        {
          "ruleId": "9ccbade7-9411-3ffc-8569-dfa19e89d623",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\",\\\\\\\\! *\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 828,
                  "startColumn": 12,
                  "endLine": 828,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    expr = re.sub(\",\\\\\\\\! *\", \"\", expr)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "0e3ca9c94ef09e53a95b52b0c5bf031b9734950d8177f7d9fddc6af150267024cd6a02ad4772cc1cfdbbf908f08b5cf3c9034bd77a77ae00cd5d46b05801da9f_0"
          },
          "properties": {}
        },
        {
          "ruleId": "d37cdd50-f334-38c7-9aa7-b51ff5d2223f",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"- *\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 838,
                  "startColumn": 12,
                  "endLine": 838,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    expr = re.sub(\"- *\", \"-\", expr)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "4dc81ddfa5931e75cc0210d5db5f2390c59fd5f262ba11b726fe61fc11b8c0d1117d1b1efc53364dadcfd290e01ed6330a8cff601828b1b59e7532ef74d59b10_0"
          },
          "properties": {}
        },
        {
          "ruleId": "8d73c040-01a3-38cb-b26e-172519a8537d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `bad_regex` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 873,
                  "startColumn": 12,
                  "endLine": 873,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        if re.search(bad_regex, expr) is not None:"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "c9f10b1bbafcd06d2d4ede2ef7b9dcc8be10996515265b8956ebac4e02228cbfc67667f399ec65d03199383785a940335b95f17ea17333adee84bdee419affa7_0"
          },
          "properties": {}
        },
        {
          "ruleId": "52ade7d0-9a6d-3189-8091-12c4e19f7d1d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"\\$\\d+(\\.\\d+)?\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/grader.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 41,
                  "endLine": 123,
                  "endColumn": 75,
                  "snippet": {
                    "text": "    if isinstance(answer, str) and bool(re.match(r\"\\$\\d+(\\.\\d+)?\", answer)):"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "e8a714bb36ce98799413daed5aef4210dd33b8723069bbe2e31c26580b9eb60efde8925644e6573201845da2c73dcd77d7c4d94b9198f020b2c8f45a3f59aa1b_0"
          },
          "properties": {}
        },
        {
          "ruleId": "228ebdf8-71af-3e4c-9b4d-16fe05eb1a97",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/grader.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 22,
                  "endLine": 169,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            string = eval(string)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1e78bce04c72308ff3317945d3594183226339f9d1818cb6fb767a50cb85fe0a84dfbbd6bd793e804c16f7a3f673bfcf80d5162843c5d5452cf145180f3eb094_0"
          },
          "properties": {}
        },
        {
          "ruleId": "9dfe8712-7e03-363b-9f3e-6b3c9c20f599",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/grader.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 23,
                  "endLine": 299,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        if isinstance(eval(prediction), list):"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1e78bce04c72308ff3317945d3594183226339f9d1818cb6fb767a50cb85fe0a84dfbbd6bd793e804c16f7a3f673bfcf80d5162843c5d5452cf145180f3eb094_1"
          },
          "properties": {}
        },
        {
          "ruleId": "4f9c47b9-91ba-32a0-948e-1417a3fefb22",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/grader.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 31,
                  "endLine": 301,
                  "endColumn": 47,
                  "snippet": {
                    "text": "                pred_matrix = eval(prediction)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1e78bce04c72308ff3317945d3594183226339f9d1818cb6fb767a50cb85fe0a84dfbbd6bd793e804c16f7a3f673bfcf80d5162843c5d5452cf145180f3eb094_2"
          },
          "properties": {}
        },
        {
          "ruleId": "070e48f8-50b2-3ff7-a0de-b643e2087a33",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `pattern` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/grader.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 371,
                  "startColumn": 17,
                  "endLine": 371,
                  "endColumn": 46,
                  "snippet": {
                    "text": "        match = re.match(pattern, prediction)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "d68f82b099f99da7db34d8dba9e43d0a56a91524aa4bd0bc849e11e2afce1fec28159cbcb5793fd4ae45567c685b0f2915b94220fbf21d56ccb6d84f9d12a167_0"
          },
          "properties": {}
        },
        {
          "ruleId": "bfd0a75a-03dc-3855-850e-7439e308b7d6",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"^\\\\\\\\text\\{(?P<text>.+?)\\}$\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/entropy/reward_score/entropy_math/math_normalize.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 13,
                  "endLine": 50,
                  "endColumn": 61,
                  "snippet": {
                    "text": "        m = re.search(\"^\\\\\\\\text\\{(?P<text>.+?)\\}$\", answer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "47011283eb26258cb19ec48a072a65ff162a1b514b7d61837dc1460165c3c56da07d8bb1ac16cb76eb36066b18383f77b50d1042b0783a707b1c4129e65c9eb3_0"
          },
          "properties": {}
        },
        {
          "ruleId": "916a6f48-06c6-3079-aabc-3a59c3f961bb",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `f\"({pattern})\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/minicpmo/rl_dataset.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 21,
                  "endLine": 146,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            parts = re.split(f\"({pattern})\", content)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "38136274d8a1fdae455354e54687bc604412fe86ecc4b790fc70ea179766489a584e8378e74df0e21b8707c4ae6ab4e1503095cc98c3336476fc072659f884a2_0"
          },
          "properties": {}
        },
        {
          "ruleId": "2fac1587-82cc-3827-bd1b-1c93ea10c206",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `pattern` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/minicpmo/rl_dataset.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 20,
                  "endLine": 150,
                  "endColumn": 43,
                  "snippet": {
                    "text": "                if re.match(pattern, part):"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "9b80b289caec99a2a4ddf3a5ac5602cccc87909f1ee26692f2b2ea6226aee3f5d80ced5be09d59ee835a1ee32f5c06ab641368b93ea5766597776dbf58d2a9eb_0"
          },
          "properties": {}
        },
        {
          "ruleId": "80891a99-e6ae-3624-89d1-d0f55ae43f75",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "If possible, it is better to rely on automatic pinning in PyTorch to avoid undefined behavior and for efficiency"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/prime/prime_ray_trainer.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 33,
                  "endLine": 204,
                  "endColumn": 10,
                  "snippet": {
                    "text": "        self.train_dataloader = DataLoader(\n            dataset=self.train_dataset,\n            batch_size=int(self.config.data.train_batch_size * self.config.data.oversample_factor),\n            drop_last=True,\n            collate_fn=collate_fn,\n            sampler=sampler,\n        )"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "7d873f095c86447ce28eece51abbce900babe8661b9973a09b744f45774d7fb06445dbf8b509a01035e1c873d18fc2ca48d28bfb576167434b57c8e3669b956e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "86c8fb03-260f-3e20-a0fc-1b30f7652593",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "If possible, it is better to rely on automatic pinning in PyTorch to avoid undefined behavior and for efficiency"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/prime/prime_ray_trainer.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 31,
                  "endLine": 215,
                  "endColumn": 10,
                  "snippet": {
                    "text": "        self.val_dataloader = DataLoader(\n            dataset=self.val_dataset,\n            batch_size=len(self.val_dataset),\n            shuffle=True,\n            drop_last=True,\n            collate_fn=collate_fn,\n        )"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "7d873f095c86447ce28eece51abbce900babe8661b9973a09b744f45774d7fb06445dbf8b509a01035e1c873d18fc2ca48d28bfb576167434b57c8e3669b956e_1"
          },
          "properties": {}
        },
        {
          "ruleId": "49fe7c01-1070-31ce-abac-9da5f3619a77",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/prime/prime_ray_trainer.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 9,
                  "endLine": 273,
                  "endColumn": 85,
                  "snippet": {
                    "text": "        torch.save(self.train_dataloader, dataloader_local_path, pickle_module=dill)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "bb6bec0618a56bf4e2a1db2282f49844fdcc0f9288275b89ac38eb9e554c39e7e90616cde95c44acd45a5b3607d9c773316b1f9d377c90194976ae44dba4f107_0"
          },
          "properties": {}
        },
        {
          "ruleId": "dce9117f-1947-3af5-abc8-9ab0467cdd55",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/prime/prime_ray_trainer.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 331,
                  "startColumn": 33,
                  "endLine": 331,
                  "endColumn": 66,
                  "snippet": {
                    "text": "        self.train_dataloader = torch.load(dataloader_local_path)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "bb6bec0618a56bf4e2a1db2282f49844fdcc0f9288275b89ac38eb9e554c39e7e90616cde95c44acd45a5b3607d9c773316b1f9d377c90194976ae44dba4f107_1"
          },
          "properties": {}
        },
        {
          "ruleId": "d582d7e6-e1d0-3de9-9215-3bca071ae022",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/r1/data_process.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 17,
                  "endLine": 140,
                  "endColumn": 111,
                  "snippet": {
                    "text": "                pickle.loads(zlib.decompress(base64.b64decode(example[\"private_test_cases\"].encode(\"utf-8\"))))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "2b745c7fc33467cb72ed7b3353e6e6994c3ebfb0745d838106129891a8f561027440553e57221c7dacec93c3d4bbe5e6da2943a21a33d657afd7f563c4ac69c4_0"
          },
          "properties": {}
        },
        {
          "ruleId": "34e57461-081f-32ae-8d99-71713d0706b4",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/r1/data_process.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 64,
                  "endLine": 150,
                  "endColumn": 100,
                  "snippet": {
                    "text": "        text_cases_compressed = base64.b64encode(zlib.compress(pickle.dumps(json.dumps(test_cases)))).decode(\"utf-8\")"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "21bdf2372ecf6be014ca7023d6a35dff05ad6de8be289b6ee08e6e753338d9a786f7cec28a888a36ba24f18a54c36204994229111e816e1557ed519b278ccf9d_0"
          },
          "properties": {}
        },
        {
          "ruleId": "859dbfb6-529f-3458-afcc-739550cd58e5",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `ANSWER_PATTERN_MULTICHOICE` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/r1/tasks/gpqa.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 13,
                  "endLine": 22,
                  "endColumn": 64,
                  "snippet": {
                    "text": "    match = re.search(ANSWER_PATTERN_MULTICHOICE, solution_str)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "e162811f5eb615697757a5e2e9a43816ece6a5129bb98c5b5a9ca8cb765f97327448b3b16bb142136eba9a13755bbb8db6180c1a1f5edd3b3f8af09d9ea7a7ed_0"
          },
          "properties": {}
        },
        {
          "ruleId": "aa5edcc9-4db0-30cc-a028-89b8dc35cfd6",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/r1/tasks/livecodebench.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 30,
                  "endLine": 63,
                  "endColumn": 105,
                  "snippet": {
                    "text": "        in_outs = json.loads(pickle.loads(zlib.decompress(base64.b64decode(test_cases.encode(\"utf-8\")))))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "78f1684666d8e5fec65cc018807c0862eb975d275b4c94bde1f9f7c6add6bd2f88c7c7cbcf13176ec5d38d594e27a2377b320e43dfa95f6e0034c5bed922f743_0"
          },
          "properties": {}
        },
        {
          "ruleId": "7e485137-8750-302b-9f08-edd0f190f176",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"```python(.*?)```\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/retool/retool.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 29,
                  "endLine": 32,
                  "endColumn": 72,
                  "snippet": {
                    "text": "        self.code_pattern = re.compile(r\"```python(.*?)```\", re.DOTALL)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "8961ec78fd05448d14c55877e0c50fbab2a4d7592f4b5eb50c5a8609f2e51c4170c05c28d9d3bf65eb3e1d24c334ebfe17ca154707bce3ab37d07c531da53201_0"
          },
          "properties": {}
        },
        {
          "ruleId": "684af1db-45c8-3c09-9e48-275a599c7043",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"```python(.*?)```\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/retool/retool_sft_preprocess.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 16,
                  "endLine": 25,
                  "endColumn": 59,
                  "snippet": {
                    "text": "code_pattern = re.compile(r\"```python(.*?)```\", re.DOTALL)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "43a5453a442e535252788f6d021434687b4f5873b312653cb4c5f77557b3480ebbeb847e3aac00a744a84037392bc4139410b1fe661fc7c4825b49208421fa3b_0"
          },
          "properties": {}
        },
        {
          "ruleId": "c34f8b25-7d31-3ddf-8136-a0b3ae2f95c2",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "recipe/spin/spin_trainer.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 947,
                  "startColumn": 37,
                  "endLine": 947,
                  "endColumn": 90,
                  "snippet": {
                    "text": "            dataloader_state_dict = torch.load(dataloader_local_path, weights_only=False)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "80947e924d485ed226c55ee58447a3d44ee634abded4ea3f30779194f5e1334661d6043cc5a36524e6bae6f8893b7ac6caa2938191e418745c20392b00686d27_0"
          },
          "properties": {}
        },
        {
          "ruleId": "8419c03e-b07d-3fec-92cd-6fdeb2d019b6",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected subprocess function 'Popen' without a static string. If this data can be\ncontrolled by a malicious actor, it may be an instance of command injection.\nAudit the use of this call to ensure it is not controllable by an external resource.\nYou may consider using 'shlex.escape()'.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/diagnose.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 16,
                  "endLine": 140,
                  "endColumn": 74,
                  "snippet": {
                    "text": "        pipe = subprocess.Popen((\"sysctl\", \"-a\"), stdout=subprocess.PIPE)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "ac125fd55d17bb06b87216dfa979153a8dcc91776c9dd13fa5b49548fa03bd63f46d6f95a8c22d1ccbe7422a1c882b6b7f8a5eb540d4ecc07b2605ef5c80df3f_0"
          },
          "properties": {}
        },
        {
          "ruleId": "8b20dcc9-0ee6-3888-b928-b2ac79b1f598",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This is not checking the return value of this subprocess call; if it fails no exception will be raised. Consider subprocess.check_call() instead"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/diagnose.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 9,
                  "endLine": 146,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        subprocess.call([\"lscpu\"])"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "897df068cc03eb491b2568ad8db8d7a06d4bc4a7db5ea9b0f304e74dc0cc53ca0495f280ff7dac0dffca2ca85b9ea41c42fa2da17ce64cc9ff7aa801d21683aa_0"
          },
          "properties": {}
        },
        {
          "ruleId": "68d46c9d-67ff-3f7e-b19c-6d88159b4488",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "This is not checking the return value of this subprocess call; if it fails no exception will be raised. Consider subprocess.check_call() instead"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/diagnose.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 9,
                  "endLine": 148,
                  "endColumn": 56,
                  "snippet": {
                    "text": "        subprocess.call([\"wmic\", \"cpu\", \"get\", \"name\"])"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "897df068cc03eb491b2568ad8db8d7a06d4bc4a7db5ea9b0f304e74dc0cc53ca0495f280ff7dac0dffca2ca85b9ea41c42fa2da17ce64cc9ff7aa801d21683aa_1"
          },
          "properties": {}
        },
        {
          "ruleId": "0ad68bb0-4496-3732-8985-ea8e1a471bbc",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use `sys.exit` over the python shell `exit` built-in. `exit` is a helper for the interactive shell and may not be available on all Python implementations. https://stackoverflow.com/questions/6501121/difference-between-exit-and-sys-exit-in-python"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/init_random_model.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 9,
                  "endLine": 49,
                  "endColumn": 15,
                  "snippet": {
                    "text": "        exit()"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "b99f9bcb665e281a79162b83a6f3c3109a706c1d9b3ffd4f07355368291add9e2fdb741aea3ed4da75ff5c91f53ced4852aabdfd5dee1085312751825383b587_0"
          },
          "properties": {}
        },
        {
          "ruleId": "f5ebdaf3-4fc2-3c3f-b725-82bb2b765d87",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"model_world_size_(\\d+)_rank_0\\.pt\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/legacy_model_merger.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 21,
                  "endLine": 234,
                  "endColumn": 77,
                  "snippet": {
                    "text": "            match = re.match(r\"model_world_size_(\\d+)_rank_0\\.pt\", filename)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "ee96e8b467f4fa430f036e8148dab08badf1d7d1700535db786fa665e6cb85c936c2ca716e70f5251a7b183cd8fcf7980ecf447fa78c35c830923ea563e8a664_0"
          },
          "properties": {}
        },
        {
          "ruleId": "a3f7da19-057a-38e4-bf04-385811348048",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/legacy_model_merger.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 16,
                  "endLine": 246,
                  "endColumn": 10,
                  "snippet": {
                    "text": "        return torch.load(\n            Path(self.config.local_dir) / f\"model_world_size_{world_size}_rank_0.pt\",\n            map_location=\"cpu\",\n            weights_only=False,\n        )"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "c2aafdb67f63713cb7427081f087d17544fd6b7a6353df88f550580a3853c0f5bcca75f4f6acfcd0271b0e3e92df0a85a9707f1db814f6b4029092c662297e49_0"
          },
          "properties": {}
        },
        {
          "ruleId": "0e6dca61-93b9-38fb-a240-874033d16f15",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/legacy_model_merger.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 26,
                  "endLine": 302,
                  "endColumn": 88,
                  "snippet": {
                    "text": "            state_dict = torch.load(model_path, map_location=\"cpu\", weights_only=False)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "c2aafdb67f63713cb7427081f087d17544fd6b7a6353df88f550580a3853c0f5bcca75f4f6acfcd0271b0e3e92df0a85a9707f1db814f6b4029092c662297e49_1"
          },
          "properties": {}
        },
        {
          "ruleId": "09c52a15-4f6f-3ab9-8b18-766b5bff74a7",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"mp_rank_(\\d\\d)_(\\d\\d\\d)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/legacy_model_merger.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 462,
                  "startColumn": 12,
                  "endLine": 462,
                  "endColumn": 61,
                  "snippet": {
                    "text": "        if re.match(r\"mp_rank_(\\d\\d)_(\\d\\d\\d)\", sharded_dir):"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "18a4f00c54361cbfcd7c0b65d32d25a7d376fc33cad08d8e7b95515fff38740e60b60a09d9c0fac726b201503bfbccbd5576ecf1d598bbff164c6baca9a8fb4e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "dc4a66fc-291a-3b56-b06f-a1012f252bcd",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"mp_rank_(\\d\\d)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/legacy_model_merger.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 465,
                  "startColumn": 14,
                  "endLine": 465,
                  "endColumn": 54,
                  "snippet": {
                    "text": "        elif re.match(r\"mp_rank_(\\d\\d)\", sharded_dir):"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "91822cadc0aece90cdf4f3278a5f459f30e887d44fb3f9d0745fb52fdc8bcb6db10ce567b2df806ff3209cadbfebf45dffac6a0bfdb83e88ed528fff387b4028_0"
          },
          "properties": {}
        },
        {
          "ruleId": "9763c6f4-7057-327a-b140-7900282cd8e5",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "scripts/legacy_model_merger.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 551,
                  "startColumn": 26,
                  "endLine": 551,
                  "endColumn": 93,
                  "snippet": {
                    "text": "            state_dict = torch.load(model_file_path, map_location=\"cpu\", weights_only=False)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "c2aafdb67f63713cb7427081f087d17544fd6b7a6353df88f550580a3853c0f5bcca75f4f6acfcd0271b0e3e92df0a85a9707f1db814f6b4029092c662297e49_2"
          },
          "properties": {}
        },
        {
          "ruleId": "9b6e321c-d282-37bb-90f9-cb7779aca9d8",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"<tool_call>(.*?)</tool_call>\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/experimental/agent_loop/tool_agent_loop.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 32,
                  "endLine": 69,
                  "endColumn": 86,
                  "snippet": {
                    "text": "        self.tool_call_regex = re.compile(r\"<tool_call>(.*?)</tool_call>\", re.DOTALL)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "98e82f41f09a8e1850da70a4a8039f0078dbb87afe26cca6bdb70e4ecde9e4ff84dc73572ac9debb92982782ec0acdcf3cdaecdd29b8bcaf9d36fce74315e6db_0"
          },
          "properties": {}
        },
        {
          "ruleId": "0b8016f8-4100-3b10-b288-88c432c80d0e",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/model_merger/fsdp_model_merger.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 16,
                  "endLine": 94,
                  "endColumn": 10,
                  "snippet": {
                    "text": "        return torch.load(\n            Path(self.config.local_dir) / f\"model_world_size_{world_size}_rank_0.pt\",\n            map_location=\"cpu\",\n            weights_only=False,\n        )"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "58c5a5b2eeca71d470c2d6011deacd3cab0e18297b6b57d0387a32ed9bf3888ceec38502c75ba49e129a6ba4807ac9e50f3135cd7a7d5ce7f375c722cfbf837b_0"
          },
          "properties": {}
        },
        {
          "ruleId": "fc159843-8d1c-375c-a215-4533d4165c1f",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/model_merger/fsdp_model_merger.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 26,
                  "endLine": 150,
                  "endColumn": 88,
                  "snippet": {
                    "text": "            state_dict = torch.load(model_path, map_location=\"cpu\", weights_only=False)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "58c5a5b2eeca71d470c2d6011deacd3cab0e18297b6b57d0387a32ed9bf3888ceec38502c75ba49e129a6ba4807ac9e50f3135cd7a7d5ce7f375c722cfbf837b_1"
          },
          "properties": {}
        },
        {
          "ruleId": "30397135-3adf-32bb-8f4e-2f49b3bdd321",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "function `fetch_params` is defined inside a function but never used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/models/llama/megatron/checkpoint_utils/llama_loader.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 5,
                  "endLine": 76,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    def fetch_params(module):\n        for param in module.parameters():\n            torch.distributed.fetch(\n                param.data, src=mpu.get_data_parallel_src_rank(), group=mpu.get_data_parallel_group()\n            )"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "b034e7de8c3d518fe320318f352302a3581121a47dd6d120f6128f0f184ed04ea60a575030258d2b9d5ac7da658b03a6ae886e232a464efe54611d2ad425f3a5_0"
          },
          "properties": {}
        },
        {
          "ruleId": "2ef140a6-0e2d-3ece-a802-d2434540018a",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Use `sys.exit` over the python shell `exit` built-in. `exit` is a helper for the interactive shell and may not be available on all Python implementations. https://stackoverflow.com/questions/6501121/difference-between-exit-and-sys-exit-in-python"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/models/llama/megatron/checkpoint_utils/llama_saver.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 436,
                  "startColumn": 13,
                  "endLine": 436,
                  "endColumn": 20,
                  "snippet": {
                    "text": "            exit(1)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "02dbd46ea93e9e31a1667d32bef11a56cf1190c82ac8622d471f2977fd7091fa67ee7cf17eb602290800d596d9d80863fea66677de1f288743f4c124a4e17cd4_0"
          },
          "properties": {}
        },
        {
          "ruleId": "dd11450f-e0db-36ed-b0e8-b65a05de75a7",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "key `SupportedModel.QWEN2_5_VL` is uselessly assigned twice"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/models/mcore/registry.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 119,
                  "endLine": 87,
                  "endColumn": 2,
                  "snippet": {
                    "text": "MODEL_CONFIG_CONVERTER_REGISTRY: dict[SupportedModel, Callable[[PretrainedConfig, torch.dtype], TransformerConfig]] = {\n    SupportedModel.LLAMA: hf_to_mcore_config_dense,\n    SupportedModel.QWEN2: hf_to_mcore_config_dense,\n    SupportedModel.QWEN2_MOE: hf_to_mcore_config_qwen2moe,\n    SupportedModel.DEEPSEEK_V3: hf_to_mcore_config_dpskv3,\n    SupportedModel.MIXTRAL: hf_to_mcore_config_mixtral,\n    SupportedModel.QWEN2_5_VL: hf_to_mcore_config_qwen2_5_vl,\n    SupportedModel.LLAMA4: hf_to_mcore_config_llama4,\n    SupportedModel.QWEN3: hf_to_mcore_config_dense,\n    SupportedModel.QWEN3_MOE: hf_to_mcore_config_qwen3moe,\n    SupportedModel.QWEN2_5_VL: hf_to_mcore_config_qwen2_5_vl,\n}"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "5d5a7521cea64a3775c27d270d623eab969507964ec17032128f57e1b508fd26245e17457bb2f67aeba04f068acc0a24dcf783b2c3add71dba7150254e3fd537_0"
          },
          "properties": {}
        },
        {
          "ruleId": "2e7d7739-caf6-3b99-9487-ece68519b596",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "key `SupportedModel.QWEN2_5_VL` is uselessly assigned twice"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/models/mcore/registry.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 80,
                  "endLine": 101,
                  "endColumn": 2,
                  "snippet": {
                    "text": "MODEL_INITIALIZER_REGISTRY: dict[SupportedModel, type[BaseModelInitializer]] = {\n    SupportedModel.LLAMA: DenseModel,\n    SupportedModel.QWEN2: DenseModel,\n    SupportedModel.QWEN2_MOE: Qwen2MoEModel,\n    SupportedModel.MIXTRAL: MixtralModel,\n    SupportedModel.DEEPSEEK_V3: DeepseekV3Model,\n    SupportedModel.QWEN2_5_VL: Qwen25VLModel,\n    SupportedModel.LLAMA4: DenseModel,\n    SupportedModel.QWEN3: DenseModel,\n    SupportedModel.QWEN3_MOE: Qwen3MoEModel,\n    SupportedModel.QWEN2_5_VL: Qwen25VLModel,\n}"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "54ae50d23d90c19b0bec7aede6ffb59afa8ed39e632f9425ae7fd08673a4851cbda8f8c01d5f5ded0e9a143d800e9015ced954a58a98fc57775b8ab9c30d34d1_0"
          },
          "properties": {}
        },
        {
          "ruleId": "6c565642-3a98-3fad-a355-03c3561c0aa0",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "key `SupportedModel.DEEPSEEK_V3` is uselessly assigned twice"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/models/mcore/registry.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 58,
                  "endLine": 116,
                  "endColumn": 2,
                  "snippet": {
                    "text": "MODEL_FORWARD_REGISTRY: dict[SupportedModel, Callable] = {\n    SupportedModel.LLAMA: gptmodel_forward,\n    SupportedModel.QWEN2: gptmodel_forward,\n    SupportedModel.QWEN2_MOE: gptmodel_forward,\n    SupportedModel.MIXTRAL: gptmodel_forward,\n    SupportedModel.DEEPSEEK_V3: gptmodel_forward,\n    SupportedModel.QWEN2_5_VL: gptmodel_forward,\n    SupportedModel.LLAMA4: gptmodel_forward,\n    SupportedModel.QWEN3: gptmodel_forward,\n    SupportedModel.QWEN3_MOE: gptmodel_forward,\n    SupportedModel.QWEN2_5_VL: gptmodel_forward_qwen2_5_vl,\n    SupportedModel.DEEPSEEK_V3: gptmodel_forward,\n}"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "444d29da1bb7ba557ba4d72383fe81d1f0e3505554ce570cbe190f347f69d94d76f5a18903940a168e910c4eae5935bad62082b186ccf263f3878429d5546fe7_0"
          },
          "properties": {}
        },
        {
          "ruleId": "c0579060-9854-335e-81f0-9db25cd02741",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "key `SupportedModel.DEEPSEEK_V3` is uselessly assigned twice"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/models/mcore/registry.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 64,
                  "endLine": 131,
                  "endColumn": 2,
                  "snippet": {
                    "text": "MODEL_FORWARD_FUSED_REGISTRY: dict[SupportedModel, Callable] = {\n    SupportedModel.LLAMA: fused_forward_gptmodel,\n    SupportedModel.QWEN2: fused_forward_gptmodel,\n    SupportedModel.QWEN2_MOE: fused_forward_gptmodel,\n    SupportedModel.MIXTRAL: fused_forward_gptmodel,\n    SupportedModel.DEEPSEEK_V3: fused_forward_gptmodel,\n    SupportedModel.QWEN2_5_VL: fused_forward_qwen2_5_vl,\n    SupportedModel.LLAMA4: fused_forward_gptmodel,\n    SupportedModel.QWEN3: fused_forward_gptmodel,\n    SupportedModel.QWEN3_MOE: fused_forward_gptmodel,\n    SupportedModel.QWEN2_5_VL: fused_forward_qwen2_5_vl,\n    SupportedModel.DEEPSEEK_V3: fused_forward_gptmodel,\n}"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "dceacd83e1cc8c6e3d79721a25d9846ba7818c98ea330ca758678190e8f5a5d2ca38bb082a7c9074f5493cd77f316969a2d5c09a4e6c35ce66ad26a2b778a944_0"
          },
          "properties": {}
        },
        {
          "ruleId": "0b7a65df-d398-3ceb-b287-edfdd3cc19e1",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "function `fetch_params` is defined inside a function but never used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/models/qwen2/megatron/checkpoint_utils/qwen2_loader.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 5,
                  "endLine": 74,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    def fetch_params(module):\n        for param in module.parameters():\n            torch.distributed.fetch(\n                param.data, src=mpu.get_data_parallel_src_rank(), group=mpu.get_data_parallel_group()\n            )"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "6765e7f917aefb2b4a13fc69ee7333dca5e01bcfd3a775a5652d27f45b4e2fcacda00ffc39c89e690508d5951ef9a93bfffa650837f51c33cf855f82907621a9_0"
          },
          "properties": {}
        },
        {
          "ruleId": "f2f58a25-e7c9-3197-80c7-1b9a703a6586",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/models/registry.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 18,
                  "endLine": 53,
                  "endColumn": 114,
                  "snippet": {
                    "text": "        module = importlib.import_module(f\"verl.models.{module_name}.{megatron}.modeling_{module_name}_megatron\")"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "09be90a8aff9e45c08eaa060288c135193ee85e9fed177742c57b2ba78b9c00698d3909299d15e6e0b09a045c410ff5ba56c6300721352f5824b56cdc6306bac_0"
          },
          "properties": {}
        },
        {
          "ruleId": "cdf082a1-f4a3-3640-8f32-d82ac16c24dc",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/protocol.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 9,
                  "endLine": 274,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        torch.save(self.batch, buffer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "e8e642b26ffb1277a68daa056dabcbf9a0d766933128e42dd54d201db8050c92a872557fe0afec84e54eb1975bd67a7dbd4b56e41725eb22243e0bc5aabb72a4_0"
          },
          "properties": {}
        },
        {
          "ruleId": "a61b6820-139f-30a0-a061-229ddd6ec303",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/protocol.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 17,
                  "endLine": 287,
                  "endColumn": 10,
                  "snippet": {
                    "text": "        batch = torch.load(\n            batch_deserialized,\n            weights_only=False,\n            map_location=\"cpu\" if not get_torch_device().is_available() else None,\n        )"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "e8e642b26ffb1277a68daa056dabcbf9a0d766933128e42dd54d201db8050c92a872557fe0afec84e54eb1975bd67a7dbd4b56e41725eb22243e0bc5aabb72a4_1"
          },
          "properties": {}
        },
        {
          "ruleId": "568c2484-d0a5-3231-b870-f006aa5b44b4",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/protocol.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 294,
                  "startColumn": 13,
                  "endLine": 294,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            pickle.dump(self, f)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "fa6375b1f56752d99395aae2f62588ba5f80690a7ce4cf9a35d16c56e1f4031f17b78ca54cdb94c8ca663730642657729f2f5118c75f5af934d21e204d459bee_0"
          },
          "properties": {}
        },
        {
          "ruleId": "9bb0d255-edf1-319f-aab9-eee73579d0f2",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/protocol.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 20,
                  "endLine": 299,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            data = pickle.load(f)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "4ffada55f2f07a3559c864c7457885f215baea5361fe7b4e63ddf97a1154c27490a7d9cc5f4642d13fbbbdb6b571eaaed81071380597d935278c0d055476ee08_0"
          },
          "properties": {}
        },
        {
          "ruleId": "f9ec4e92-bb55-330f-9b75-ff37da8bd555",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "If possible, it is better to rely on automatic pinning in PyTorch to avoid undefined behavior and for efficiency"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/protocol.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 653,
                  "startColumn": 28,
                  "endLine": 655,
                  "endColumn": 10,
                  "snippet": {
                    "text": "        train_dataloader = DataLoader(\n            dataset=self, batch_size=mini_batch_size, collate_fn=collate_fn, generator=generator, **dataloader_kwargs\n        )"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "224138c646816d43a5dca46a0cfe34aca313ba84fac706d3003b20168ff3921b093b7b470c4a5b0a8b8c96f25f683b2e468fe72d68b72cb178ab52dcb8ca35b5_0"
          },
          "properties": {}
        },
        {
          "ruleId": "d3f060fa-cce0-388a-8b73-4ae3862f877c",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "time.sleep() call; did you mean to leave this in?"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/single_controller/base/worker_group.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 9,
                  "endLine": 120,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        time.sleep(gap_time)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "2645affab0eae979b0d4d1c6aac4c44cfe67a167e1c709be763c64b18a48e3b3bc8cc2ce5e8727a1111cc6aebaf0d2d02058727fcc0347ab2b3e02b55f8e945d_0"
          },
          "properties": {}
        },
        {
          "ruleId": "81934d1e-e404-3fb5-a231-6a56b846b1ca",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "time.sleep() call; did you mean to leave this in?"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/single_controller/base/worker_group.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 17,
                  "endLine": 159,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                time.sleep(1)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "9029ffc3c685fc92052e539aad77d04ba5128ac26858ced655e045c157b50b23de52e77a88903fd222dc34b7459725f921c1e8c241550eca16f020503f652153_0"
          },
          "properties": {}
        },
        {
          "ruleId": "495d53a7-a698-37dc-b7bb-e2ebc37eade8",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"ActorClass\\(([^)]+)\\)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/single_controller/ray/base.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 384,
                  "startColumn": 25,
                  "endLine": 384,
                  "endColumn": 70,
                  "snippet": {
                    "text": "                match = re.search(r\"ActorClass\\(([^)]+)\\)\", cia_name)  # ray.remote(Obj) -> \"ActorClass(Obj)\""
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "55e9cf10da9b41c277a0cfd80c0317dea871db0b0cf2605fcfcfe83f92d71992b8d56044f5ffd56cbd59544b1b5f4e6eeb505a9b54f394d30859766bbc6f04b3_0"
          },
          "properties": {}
        },
        {
          "ruleId": "9b97ca46-085e-3e1c-83fe-1d3ce9ef7d02",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "time.sleep() call; did you mean to leave this in?"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/single_controller/ray/base.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 434,
                  "startColumn": 25,
                  "endLine": 434,
                  "endColumn": 38,
                  "snippet": {
                    "text": "                        time.sleep(1)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "2c6e1eba0234e89ad4e8525ffd4dabbfdcf3b9327a87e69744ee3dc28f38a0176ff0551addd6e675e06e40722201f6d3b1c932c1302b7e7a67ac9bca5fa00e71_0"
          },
          "properties": {}
        },
        {
          "ruleId": "6d583d09-827a-3b01-a8d4-7f77aa9eded2",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`return` should never appear inside a class __init__ function. This will cause a runtime error."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/single_controller/ray/base.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 844,
                  "startColumn": 94,
                  "endLine": 844,
                  "endColumn": 106,
                  "snippet": {
                    "text": "                    udc._get_ray_actor_cls_name = lambda x, name_renamed=class_name_renamed: name_renamed"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "d9ca43db333f28bdfb151e8b52fdab78536d1fcb7cbe951161014216af48642601daf2884306ab1cf0ee1083f53ee6cd02a1c21ea67d3f328d05d67960df1501_0"
          },
          "properties": {}
        },
        {
          "ruleId": "cff1d856-ef29-3676-8f29-302fc5ce03bf",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r'query\"\\s*:\\s*\"([^\"]+)\"'` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/tools/mcp_search_tool.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 31,
                  "endLine": 46,
                  "endColumn": 73,
                  "snippet": {
                    "text": "                query_match = re.search(r'query\"\\s*:\\s*\"([^\"]+)\"', text)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "fb8594cc25b662c73e066cf184ce05364939c1fcd601c0bc61b7f7b284d0c2f88c32fe5f06501c50b0e0fbfe0b78bdb1bb2a7761c21ab56dadbc677e7a3a0778_0"
          },
          "properties": {}
        },
        {
          "ruleId": "22bb4324-4eba-31d2-926e-84b26e0dca0a",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r'\"title\"\\s*:'` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/tools/mcp_search_tool.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 33,
                  "endLine": 50,
                  "endColumn": 65,
                  "snippet": {
                    "text": "                title_matches = re.findall(r'\"title\"\\s*:', text)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1e9649f6e280e2964d9c20b365d531779c2910db306bc73566b98c8756712a55aad629d6c1530ba064b3d5c5e29e55e0d0df368664bc3be7a0536164079e4ab6_0"
          },
          "properties": {}
        },
        {
          "ruleId": "330dae55-94a9-37d6-b9c9-378da7c2d45d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r'\"results\"\\s*:\\s*(\\[.*?\\])'` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/tools/mcp_search_tool.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 33,
                  "endLine": 53,
                  "endColumn": 89,
                  "snippet": {
                    "text": "                results_match = re.search(r'\"results\"\\s*:\\s*(\\[.*?\\])', text, re.DOTALL)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "21bdaff6e8a50d29ddc10cd57675cbe127927a6c42e0e2bbf5a6a0e0121183daa460562a35c32ad7bfce08593bee9a7aaad0424317519181c871016bcc738530_0"
          },
          "properties": {}
        },
        {
          "ruleId": "85cf8f87-299e-3497-a49c-7ad39cf4fd16",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "There's an HTTP request made with requests,\nbut the raise_for_status() utility method isn't used.\nThis can result in request errors going unnoticed\nand your code behaving in unexpected ways,\nsuch as if your authorization API returns a 500 error\nwhile you're only checking for a 401."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/tools/utils/search_r1_like_utils.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 24,
                  "endLine": 76,
                  "endColumn": 14,
                  "snippet": {
                    "text": "            response = requests.post(\n                retrieval_service_url,\n                headers=headers,\n                json=payload,\n                timeout=timeout,\n            )"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "01ad8dfa388eb93a3ed8ce915254368aab52ebe7d29a5fc020c874cc4f0e2804fb1eb990df6a3968791722e07bf88432e00a5949b46ff4f8ea39b15b2912336a_0"
          },
          "properties": {}
        },
        {
          "ruleId": "21708b1c-836c-3d18-99b1-955427158ee9",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"global_step_(\\d+)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/trainer/fsdp_sft_trainer.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 13,
                  "endLine": 81,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    match = re.search(r\"global_step_(\\d+)\", path)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "7527c521ed2f4e0af273dcb98c858bc176b01e50512feed2f30d0ea857b74ae99b16cc3ce7d94da33afa0778cb2194b4bbf73bef6c4cd8ab5f312559bb025c23_0"
          },
          "properties": {}
        },
        {
          "ruleId": "ec660e5b-8678-3b1b-8f5a-72552df41867",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/trainer/fsdp_sft_trainer.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 13,
                  "endLine": 192,
                  "endColumn": 68,
                  "snippet": {
                    "text": "            importlib.import_module(self.config.model.external_lib)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "9dafbe21e146d63b2c24d9b8d6f9c1e3b749a5777dcab5192837d97ae3257a894697e8ebf969ae21fb49d136a1bf888e76ea79c3545cca7d7479ceb1f7c40f84_0"
          },
          "properties": {}
        },
        {
          "ruleId": "9d261427-b326-37b5-87bb-67d2e029fbaf",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/trainer/ppo/ray_trainer.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1046,
                  "startColumn": 37,
                  "endLine": 1046,
                  "endColumn": 90,
                  "snippet": {
                    "text": "            dataloader_state_dict = torch.load(dataloader_local_path, weights_only=False)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "fd5089521fc8f960e92ab2d420a53d2d5fd4b00e3e306ef3e09e5824eff425e6964fe50a76742f60befb9cccb46b627f1b301b356ec89ecd10e61cc5e94a5ae4_0"
          },
          "properties": {}
        },
        {
          "ruleId": "95056413-b8b3-306d-9b5c-687f315f7beb",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/checkpoint/fsdp_checkpoint_manager.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 36,
                  "endLine": 134,
                  "endColumn": 84,
                  "snippet": {
                    "text": "                model_state_dict = torch.load(local_model_path, weights_only=False)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "61e816da1d4e90524b859c662f4a20cafbc5fd0363fc5b0f16bfcbeed78ee63c90b7cce01f0785023b18bb7efc5208aab850c2d615d4432ae8cff2615805f2e2_0"
          },
          "properties": {}
        },
        {
          "ruleId": "c499f82b-499d-34ac-828c-5a5cc7c019b7",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/checkpoint/fsdp_checkpoint_manager.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 40,
                  "endLine": 141,
                  "endColumn": 88,
                  "snippet": {
                    "text": "                optimizer_state_dict = torch.load(local_optim_path, weights_only=False)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "61e816da1d4e90524b859c662f4a20cafbc5fd0363fc5b0f16bfcbeed78ee63c90b7cce01f0785023b18bb7efc5208aab850c2d615d4432ae8cff2615805f2e2_1"
          },
          "properties": {}
        },
        {
          "ruleId": "59f03bcd-51ad-344f-b54a-e16a2a6054cc",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/checkpoint/fsdp_checkpoint_manager.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 32,
                  "endLine": 150,
                  "endColumn": 86,
                  "snippet": {
                    "text": "            extra_state_dict = torch.load(local_extra_state_path, weights_only=False)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "61e816da1d4e90524b859c662f4a20cafbc5fd0363fc5b0f16bfcbeed78ee63c90b7cce01f0785023b18bb7efc5208aab850c2d615d4432ae8cff2615805f2e2_2"
          },
          "properties": {}
        },
        {
          "ruleId": "fe5618e6-3b34-359c-baeb-5a2b4f0ac6f8",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/checkpoint/fsdp_checkpoint_manager.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 21,
                  "endLine": 250,
                  "endColumn": 61,
                  "snippet": {
                    "text": "                    torch.save(extra_state_dict, extra_path)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "61e816da1d4e90524b859c662f4a20cafbc5fd0363fc5b0f16bfcbeed78ee63c90b7cce01f0785023b18bb7efc5208aab850c2d615d4432ae8cff2615805f2e2_3"
          },
          "properties": {}
        },
        {
          "ruleId": "4330e77d-130e-3872-bf89-97452ff7f964",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Functions reliant on pickle can result in arbitrary code execution.  Consider loading from `state_dict`, using fickling, or switching to a safer serialization method like ONNX"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/debug/trajectory_tracker.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 5,
                  "endLine": 74,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    torch.save(data, buffer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "84d064fab80d675b19d8b0c6c05e97818d4244c9d20c29a63327cc94b62a502c6024c708c8a9a3a0aafe85a256827f0adfe0b13147f575032b941cfeafc2eed7_0"
          },
          "properties": {}
        },
        {
          "ruleId": "845d2029-dbaf-34e0-8ef9-44ceaae58c1d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"(<image>|<video>)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/dataset/rl_dataset.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 28,
                  "endLine": 201,
                  "endColumn": 66,
                  "snippet": {
                    "text": "                segments = re.split(\"(<image>|<video>)\", content)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "85d1ed44f8b0d3ca12cdcb30e325fd68a964dd4275900761c37a126fae814a0fff3d105f18790395deaddbfde0756e802e1c9a4bb1106a2c76eb24e245651f9e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "b059ce16-6a26-32ae-baf3-b0a0d46ddbcd",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/fs.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 12,
                  "endLine": 58,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    return hashlib.md5(path.encode()).hexdigest()"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "d3946672954b53a1d54777d43195dd1aabe18f46d2a04c6b69f6c0f433550d00c9dc293a8f0bf53fdc0ef10f8477547261df4dd53713681d96a6b995f654e771_0"
          },
          "properties": {}
        },
        {
          "ruleId": "b33acd1a-8de7-3b52-b403-0dcc71f78d5d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/fs.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 41,
                  "endLine": 147,
                  "endColumn": 77,
                  "snippet": {
                    "text": "    dest = os.path.join(shm_model_root, hashlib.md5(src_abs.encode(\"utf-8\")).hexdigest())"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "d3946672954b53a1d54777d43195dd1aabe18f46d2a04c6b69f6c0f433550d00c9dc293a8f0bf53fdc0ef10f8477547261df4dd53713681d96a6b995f654e771_1"
          },
          "properties": {}
        },
        {
          "ruleId": "5dd91ad3-7212-3002-8a13-24d4bd28469d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/import_utils.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 9,
                  "endLine": 80,
                  "endColumn": 46,
                  "snippet": {
                    "text": "        importlib.import_module(external_lib)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "7845381feb9e37489b5262e5dcb95bd546f54c38e1acd76f74b33ca9bd0cd3c31faeb03b1cb0b7f8d2c2ac2af275ba884b0fa669c76752da9e18e8f52170669e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "e9232108-d27b-3209-8f9c-d1466f7db370",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Found dynamic content used in a system call. This is dangerous if external data can reach this function call because it allows a malicious actor to execute commands. Use the 'subprocess' module instead, which is easier to use without accidentally exposing a command injection vulnerability."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/hdfs_io.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 12,
                  "endLine": 141,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    return os.system(cmd)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "eeae1eb04e72858b587744815fc26c6cf5a2aae3f4451408d73017946b40e9b845b024fba84e1b1abe9db3987a91186c7838dce8c08c520fa03f69fb8cea3d50_0"
          },
          "properties": {}
        },
        {
          "ruleId": "974255a6-7cf6-3efa-9459-e80f240b4df9",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/import_utils.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 18,
                  "endLine": 92,
                  "endColumn": 54,
                  "snippet": {
                    "text": "        module = importlib.import_module(module_name)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "91a16b3ac34e967391be172726fccc273d12008b4dc7b49173475f38b7938a02c900c5689e016e462b961d698929989bf958c1b050136171458008af7bac1917_0"
          },
          "properties": {}
        },
        {
          "ruleId": "1bcd52cf-0524-3067-a8f9-a79090aa425c",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"\\(.*\\)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/model.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 27,
                  "endLine": 233,
                  "endColumn": 61,
                  "snippet": {
                    "text": "            replacement = re.sub(r\"\\(.*\\)\", \"\", replacement)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "df37678f0020c34a9062873bf44ab1358d0ea766aec09dfaecbea24421606db3ded82f9946d1235276adf7d1a92270a1fabf1b96ec6a7d2c23ac17f8386efe3d_0"
          },
          "properties": {}
        },
        {
          "ruleId": "fb40666a-ba50-3fc3-a357-9f09162a1366",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `pattern` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/model.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 30,
                  "endLine": 234,
                  "endColumn": 64,
                  "snippet": {
                    "text": "            key, n_replace = re.subn(pattern, replacement, key)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "d18c81d1ae1a6c0324a8176e1d690ab7db9ff91a098bdf04f4468dd1761f0011e0976acbd581103d6c5592d20c96f496752a8530a15c147905bebc1452d3f00c_0"
          },
          "properties": {}
        },
        {
          "ruleId": "7d0a7d48-ed35-3a12-bd1a-e5ab6e8869b7",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `config.exclude_modules` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/model.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 16,
                  "endLine": 258,
                  "endColumn": 57,
                  "snippet": {
                    "text": "            if re.fullmatch(config.exclude_modules, key):"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "df60e269e65bacb6ea89a348e640a31a8af03458c809b38935cd10fb2a7da76f5c96d689f98c55e0f7f70eb2d282358c4359024387ef6da5ebab999f2d13349e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "60d98f90-7433-3515-b2d8-f3cc8cd88aa4",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `config.target_modules` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/model.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 31,
                  "endLine": 280,
                  "endColumn": 71,
                  "snippet": {
                    "text": "        target_module_found = re.fullmatch(config.target_modules, key)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "3e2dce4f04ea0673eff057d3216bfe6eb657291005d1fdb263ffb1c112dc03ef7ec3b806c28b495d03fb462792e87cb1cfc9779f1e4e7c7103e9dcc8263e5efe_0"
          },
          "properties": {}
        },
        {
          "ruleId": "835f8237-c397-3d66-8355-23f0280da748",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\".*\\.[^.]*\\.(\\d+)\\.\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/model.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 31,
                  "endLine": 298,
                  "endColumn": 67,
                  "snippet": {
                    "text": "                layer_index = re.match(r\".*\\.[^.]*\\.(\\d+)\\.\", key)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "22cc071ac3427409dc7e8dd717f978fe694a7819ba798695ff30654275907d19fc6129ff7eadc4f2c17ab3916faa49d410ec8929d6dbe28aaca7fbcac819667b_0"
          },
          "properties": {}
        },
        {
          "ruleId": "85a23af1-4860-3ec1-bd9f-19c3f55c8387",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `rf\".*\\.{pattern}\\.(\\d+)\\.\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/model.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 35,
                  "endLine": 302,
                  "endColumn": 76,
                  "snippet": {
                    "text": "                    layer_index = re.match(rf\".*\\.{pattern}\\.(\\d+)\\.\", key)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "d0fb3519749053a5c3627a2457cde4e59f41c5d2d452e71607a40fabb3742166cddf5483efc4541c688db131de22e0680cba59b198850e0298d84ac5b3e194c1_0"
          },
          "properties": {}
        },
        {
          "ruleId": "c8c54877-47fc-3954-af5e-2103acd8c942",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`pass` is the body of function mark_start_range. Consider removing this or raise NotImplementedError() if this is a TODO"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/profiler/empty_annotations.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 24,
                  "endColumn": 9,
                  "snippet": {
                    "text": "def mark_start_range(\n    message: Optional[str] = None,\n    color: Optional[str] = None,\n    domain: Optional[str] = None,\n    category: Optional[str] = None,\n) -> None:\n    pass"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "4181efa6288c9d3cdf853e06b8d8c14303daf70a607603167eb698c9fd8029ac152c464ce605283dd913a83cba6ae2798b585871a6d52abe554240aaaa2443c0_0"
          },
          "properties": {}
        },
        {
          "ruleId": "74deb192-b4f0-391e-8f5f-8d68ff9461c3",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "`pass` is the body of function mark_end_range. Consider removing this or raise NotImplementedError() if this is a TODO"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/profiler/empty_annotations.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 1,
                  "endLine": 28,
                  "endColumn": 9,
                  "snippet": {
                    "text": "def mark_end_range(range_id: str) -> None:\n    pass"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "332769bac913e9c4576a58db940742ec161db4b52ff57849cb8791afdc4ab6d02d331e3b899bf4efd401ff6e336c683040d78ceb5e1735cffcc4dfa507ed382e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "fa664867-ffea-3c83-867a-0d0104c12c9b",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/py_functional.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 13,
                  "endLine": 44,
                  "endColumn": 28,
                  "snippet": {
                    "text": "            pickle.dumps(e)  # Test if the exception is pickleable"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "0af79d29300ff56a73aefa2d61ce2f2ae7ad4d534d851ebfb6bc6cfa8368429a4f639c085acf0427bb4be97768c147c5139159338bb559112cee116b392faa09_0"
          },
          "properties": {}
        },
        {
          "ruleId": "db34a058-83f3-3775-a9ce-6b6aeb6d1377",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/py_functional.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 26,
                  "endLine": 224,
                  "endColumn": 65,
                  "snippet": {
                    "text": "        return getattr, (importlib.import_module(cls.__module__), cls.__name__)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "52fa79776f6eca5dce87ad062e5c28683ce936f3e0f5fd7943afbe98bb4ff76008de0d833b9fcfbbd48808c4c6e4ee1f72ee229a549a7888b09d15b234d2dbe4_0"
          },
          "properties": {}
        },
        {
          "ruleId": "eceaa056-f909-395d-bdc4-82a210fe6c78",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/py_functional.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 18,
                  "endLine": 249,
                  "endColumn": 68,
                  "snippet": {
                    "text": "        module = importlib.import_module(self.__class__.__module__)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "63854627ed1a193b13c5c32d40bdab239436771393cb86cfb8f3ef5ad36ce56cb89b898efcc09963184a1557b2a54ea2c20ee2ca8cbe911b51be97e45af4c002_0"
          },
          "properties": {}
        },
        {
          "ruleId": "d5ff7163-eb03-3d09-ae5d-6121209036ba",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "time.sleep() call; did you mean to leave this in?"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/rendezvous/ray_backend.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 13,
                  "endLine": 73,
                  "endColumn": 35,
                  "snippet": {
                    "text": "            time.sleep(interval_s)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "ac3f63b80b0a2fb0c190e47d3b81bd53d0a77d5f7bd760d1d408feefbc7e798f530abb8fe46a6bbfe14e6fa6107ab5a51263067d417b30d8b20c6bfc9c65289b_0"
          },
          "properties": {}
        },
        {
          "ruleId": "cba4fef0-9729-39dd-a84c-a74716e31cde",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"<think>.*</think>.*\\\\boxed\\{.*\\}.*\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/geo3k.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 15,
                  "endLine": 20,
                  "endColumn": 75,
                  "snippet": {
                    "text": "    pattern = re.compile(r\"<think>.*</think>.*\\\\boxed\\{.*\\}.*\", re.DOTALL)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "4705077c8370fc7f486b63cea338b228f93a9c9a72c04b66035ad920061a6b5b28543364ad6f7d36b7406caf903135ee4f651381085f3179f405bd8e37cda5d7_0"
          },
          "properties": {}
        },
        {
          "ruleId": "86e7008f-8d06-389b-a69e-49c23f947981",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `pattern` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/geo3k.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 20,
                  "endLine": 21,
                  "endColumn": 54,
                  "snippet": {
                    "text": "    match_result = re.fullmatch(pattern, predict_str)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "1cef1899b4a8889db5932d32e5a32ed6d91394fabc9eca04f1ad05de056a906d9cc2559362319a915e44575cd92cdee06adaccbb468bdae617f1825d6bf4f9e6_0"
          },
          "properties": {}
        },
        {
          "ruleId": "83a4fc18-e6af-39e5-b1f8-07c459a9c256",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"#### (\\\\-?[0-9\\\\.\\\\,]+)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/gsm8k.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 21,
                  "endLine": 23,
                  "endColumn": 72,
                  "snippet": {
                    "text": "        solutions = re.findall(\"#### (\\\\-?[0-9\\\\.\\\\,]+)\", solution_str)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "b9b413854afe6a14944466ffa798944d0ba4788997bad37b1d2b64a131a4e3998bc9422ac8206f0e2923060f1d6960d6663cbd6b77f695ee9eed292f8bf3bb41_0"
          },
          "properties": {}
        },
        {
          "ruleId": "68220841-1ad5-31fa-abb5-4d16612a328b",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"(\\\\-?[0-9\\\\.\\\\,]+)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/gsm8k.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 18,
                  "endLine": 30,
                  "endColumn": 64,
                  "snippet": {
                    "text": "        answer = re.findall(\"(\\\\-?[0-9\\\\.\\\\,]+)\", solution_str)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "ccab34adf436aa7c2300efd2dced1ba5d8173fd94266e7200383978acc5967fa1e73109e9446645f420c5da50a69b689ac2b5f8025e26d6d35f35a1933023f5e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "9eddca0c-e430-31ff-8952-43b9c8b6fff0",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(.*?)(\\$)(.*?)(\\$)(.*)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/math_dapo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 20,
                  "endLine": 142,
                  "endColumn": 76,
                  "snippet": {
                    "text": "    final_answer = re.sub(r\"(.*?)(\\$)(.*?)(\\$)(.*)\", \"$\\\\3$\", final_answer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "aac494bd77fbcacffd7644ac2077e052e7b2af8ebe3d2a74ec9fe1fa03d6f14dbdeed229644ab622d8f940c8a75658300fbcbb1faa3ca58990c27db7866e8bd5_0"
          },
          "properties": {}
        },
        {
          "ruleId": "20ab7ef8-abce-3d8e-8697-e94bee4ac077",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(\\\\text\\{)(.*?)(\\})\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/math_dapo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 20,
                  "endLine": 143,
                  "endColumn": 71,
                  "snippet": {
                    "text": "    final_answer = re.sub(r\"(\\\\text\\{)(.*?)(\\})\", \"\\\\2\", final_answer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "10922e2633bb954868a666e5c130d3999f05ab60978c5920e0badf83102607d5b616040ae3fc2633b6d4cc40f4afbc24d9a5d55ff161c43b7119824062cc0487_0"
          },
          "properties": {}
        },
        {
          "ruleId": "5119c4ac-3e3b-3989-9cb6-2ef0b0f5cade",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(\\\\textbf\\{)(.*?)(\\})\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/math_dapo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 20,
                  "endLine": 144,
                  "endColumn": 73,
                  "snippet": {
                    "text": "    final_answer = re.sub(r\"(\\\\textbf\\{)(.*?)(\\})\", \"\\\\2\", final_answer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "8acdb0d29220715a9e40e370d8aa6ca5b4ba89c3f70ea04c19cf5c80a24522a165c8c8a375b8424d92bded00406821bc493926b211100a437c5af061e0bb505e_0"
          },
          "properties": {}
        },
        {
          "ruleId": "3f32e060-d597-310e-8802-742c58e92454",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(\\\\overline\\{)(.*?)(\\})\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/math_dapo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 20,
                  "endLine": 145,
                  "endColumn": 75,
                  "snippet": {
                    "text": "    final_answer = re.sub(r\"(\\\\overline\\{)(.*?)(\\})\", \"\\\\2\", final_answer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "ea632dd280c90c4ad9fef94d6d833ada7bff857bf39de08255bb877d7e77fd9d1cfe0596a3903487c5c01f2e019cbdbda17e6ff27e35955b7ae7eb2d1ee97bff_0"
          },
          "properties": {}
        },
        {
          "ruleId": "41aff92f-7e21-3114-9e5a-6f454a00ef9f",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(\\\\boxed\\{)(.*)(\\})\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/math_dapo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 20,
                  "endLine": 146,
                  "endColumn": 71,
                  "snippet": {
                    "text": "    final_answer = re.sub(r\"(\\\\boxed\\{)(.*)(\\})\", \"\\\\2\", final_answer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "be276fa8cce79976f34361471381471fa157cdcc4dda7820bdd45f917df5ebc504431d8d570b9f8e9b7ababff83dc5c07fe0ca7bc966206209dabd7004ac437f_0"
          },
          "properties": {}
        },
        {
          "ruleId": "0af499be-c50c-330b-b9e2-ac87500ae764",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(frac)([^{])(.)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/math_dapo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 20,
                  "endLine": 154,
                  "endColumn": 78,
                  "snippet": {
                    "text": "    final_answer = re.sub(r\"(frac)([^{])(.)\", \"frac{\\\\2}{\\\\3}\", final_answer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "50ce934cfb8a79d2fcc8e8318116c7166cf28cbe0e92b16e5c7e26253c0599deda23b9e515e0277332c2355a09e767483d6052eb2d87debc15a32bbc1b2291ae_0"
          },
          "properties": {}
        },
        {
          "ruleId": "a17d4220-650b-3fe4-9b4e-a084b52641f7",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(sqrt)([^{])\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/math_dapo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 20,
                  "endLine": 155,
                  "endColumn": 70,
                  "snippet": {
                    "text": "    final_answer = re.sub(r\"(sqrt)([^{])\", \"sqrt{\\\\2}\", final_answer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "14c26fb0fac0ab2eaa26ad1e0de3ae245a95ca101e661cafce1f01d46ec62ed781b57d96f2b5f7041db85486492a73db12319d0460787d33ba3e2052f188187f_0"
          },
          "properties": {}
        },
        {
          "ruleId": "b14bf653-7316-36ff-b4ca-7fe7750190a5",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `answer_pattern` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/math_dapo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 13,
                  "endLine": 180,
                  "endColumn": 53,
                  "snippet": {
                    "text": "    match = re.findall(answer_pattern, solution_str)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "011653500dafe4863fae6197c7e709c23796577cd90451e639c773477859f6ff8f8a96bac3cef70275f295d6a86186d86e1f04e281b599583a69973c873d7c3d_0"
          },
          "properties": {}
        },
        {
          "ruleId": "e05d83f2-07ac-35de-9438-f5e414bf04e0",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "key `index` in `in_outs[\"outputs\"]` is assigned twice; the first assignment is useless"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/prime_code/testing_util.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 385,
                  "startColumn": 25,
                  "endLine": 388,
                  "endColumn": 26,
                  "snippet": {
                    "text": "                        in_outs[\"outputs\"][index][tmp_index] = i.split(\"\\n\")\n                        in_outs[\"outputs\"][index][tmp_index] = [\n                            x.strip() for x in in_outs[\"outputs\"][index][tmp_index] if x\n                        ]"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "50d9f9f96ba05872bcc20d81098090a08de8eda53d345277b950ccbaa65343426f5b3fc6d143b8bdb889ae70be67656754d16a6e655978ad896dc39d92cae933_0"
          },
          "properties": {}
        },
        {
          "ruleId": "80621617-a583-3687-a14b-a9314f78e4f9",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"^-?[0-9]+.?/0*[1-9][0-9]*.?$\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/prime_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 17,
                  "endLine": 87,
                  "endColumn": 65,
                  "snippet": {
                    "text": "    return bool(re.search(r\"^-?[0-9]+.?/0*[1-9][0-9]*.?$\", expr))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "bdc9d635220f7f569e872d7fc40a63ee5addc8196cbe2c2b87b5e41208f21457e0aa3a4f0726fb393c914cfa2f635e7d1800d84ba2c5b9defbad11129e1a026b_0"
          },
          "properties": {}
        },
        {
          "ruleId": "547376e8-b9e9-39fb-a49d-a8132199c2fe",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"([0-9]) +([0-9])\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/prime_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 10,
                  "endLine": 110,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    p1 = re.compile(\"([0-9]) +([0-9])\")"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "55aefd80f9801a55543288c8527fe8e198a364b097b91741ddbf7926964530102b7dbace9968c995672abb45bcf7bf2487ced1fb083eff454da0a7172f46e7b5_0"
          },
          "properties": {}
        },
        {
          "ruleId": "0e541eff-b6e4-311f-af88-e48ce91cfedd",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"(\\d)(,)(\\d\\d\\d)($|\\D)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/prime_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 10,
                  "endLine": 117,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    p1 = re.compile(\"(\\d)(,)(\\d\\d\\d)($|\\D)\")"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "cebda13c2e1963b03f27ef7d4e48ec44044a853f85d4a89d29aa9fb40176df97dc30ff48d3bf904321023ab1002b3c2f58b0d44ea8c2c07bf5fe9c5e8cbf75a6_0"
          },
          "properties": {}
        },
        {
          "ruleId": "f95cb51a-13aa-3552-aca2-13fac46fd458",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"^\\\\\\\\text\\{(?P<text>.+?)\\}$\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/prime_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 9,
                  "endLine": 132,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    m = re.search(\"^\\\\\\\\text\\{(?P<text>.+?)\\}$\", expr)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "edc26a3c064143d7535e820f0b52e89ebc5324313521f4529b8229520cf01db28fec7164c1374cdc900cad2ea43d9ab3b22637eea94badd51eb2c74d5a836fd0_0"
          },
          "properties": {}
        },
        {
          "ruleId": "36ee83df-55a7-38de-a943-57d65760aeaf",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `f\"{unit}(es)?(s)? *(\\^[0-9]+)?\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/prime_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 16,
                  "endLine": 166,
                  "endColumn": 65,
                  "snippet": {
                    "text": "        expr = re.sub(f\"{unit}(es)?(s)? *(\\^[0-9]+)?\", \"\", expr)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "cbb3159c1ea176cd685db0f15ee62f2de50d9d98289d2e6215cb6539c45bbb9f4179dc03feadff2590c7cf497c6ccf04de00ea0680826be09c3391230740105a_0"
          },
          "properties": {}
        },
        {
          "ruleId": "d491ae20-1ac5-38b4-a8a0-b2b3a29473f1",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"\\^ *\\\\\\\\circ\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/prime_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 12,
                  "endLine": 167,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    expr = re.sub(\"\\^ *\\\\\\\\circ\", \"\", expr)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "6b490812823a2d7e340d03fce398f51efa0ee321882318dea2a28968c86e6cc9063759981ca746720d36136719881f753763cd5afdf8cf359aa27a65ecc6c5cb_0"
          },
          "properties": {}
        },
        {
          "ruleId": "72d6561f-7292-340c-a303-de619de17e86",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\",\\\\\\\\! *\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/prime_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 12,
                  "endLine": 172,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    expr = re.sub(\",\\\\\\\\! *\", \"\", expr)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "f631e76015ad76df6690a2b7aec2b6982856c33f0f33b2258f620055971254a3412123aa00d2368fae9bd1588532f02d2aae7d8fd7f911560cac666507c37ed5_0"
          },
          "properties": {}
        },
        {
          "ruleId": "bf34b1d4-ade9-3986-9d7b-0aad0bad32ab",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"- *\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/prime_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 12,
                  "endLine": 180,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    expr = re.sub(\"- *\", \"-\", expr)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "94e5150fa7d76640cf27bf54f9d551a51db667201eb48a5b2b77cb77e81b1a6954905125b87c74c8d8e72b042d59f1f33bc8e51376951b0a65a6be915bdf32e1_0"
          },
          "properties": {}
        },
        {
          "ruleId": "680578e5-0e49-34ae-afde-e28b67f82b28",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `bad_regex` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/prime_math/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 16,
                  "endLine": 209,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    return all(re.search(bad_regex, expr) is None for bad_regex in BAD_REGEXES)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "6ca20d3f2ae43006ed23ff1f4c9fe36f19ee2a9c63bbc3ffb03d15685c719c127f6c3bbad71206309dc8fe61644b68439ba31b54958ebb9f322f9c4941c0e126_0"
          },
          "properties": {}
        },
        {
          "ruleId": "37ceb121-dc79-3d90-aa79-8b93a9230ed3",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"\\$\\d+(\\.\\d+)?\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/prime_math/grader.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 41,
                  "endLine": 123,
                  "endColumn": 75,
                  "snippet": {
                    "text": "    if isinstance(answer, str) and bool(re.match(r\"\\$\\d+(\\.\\d+)?\", answer)):"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "ed4e58496aee60c9c3983d51b7b8db1579d0d9cc756f7aa860f65074380fd2b06d7c59b9c30f99c22544175ae089d259533ecf9b3b2b59db8e64f07c2965be9b_0"
          },
          "properties": {}
        },
        {
          "ruleId": "2a1c6206-d0e5-35ff-8ae6-2a7aecaa7e83",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/prime_math/grader.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 22,
                  "endLine": 169,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            string = eval(string)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "3a83455f88394fe8941848ea68f7f56804567cde6bdb5cfaab85a0777e6401b9aaa905eb0e2101d44f336ff129d0588e01ce929218507983f198bf9effa7be3a_0"
          },
          "properties": {}
        },
        {
          "ruleId": "cd7c2410-aed8-3181-a8e6-f2b7ef8c392f",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/prime_math/grader.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 23,
                  "endLine": 299,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        if isinstance(eval(prediction), list):"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "3a83455f88394fe8941848ea68f7f56804567cde6bdb5cfaab85a0777e6401b9aaa905eb0e2101d44f336ff129d0588e01ce929218507983f198bf9effa7be3a_1"
          },
          "properties": {}
        },
        {
          "ruleId": "a310af99-43c7-329a-aaa2-d6f9e8fb4ebc",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/prime_math/grader.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 31,
                  "endLine": 301,
                  "endColumn": 47,
                  "snippet": {
                    "text": "                pred_matrix = eval(prediction)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "3a83455f88394fe8941848ea68f7f56804567cde6bdb5cfaab85a0777e6401b9aaa905eb0e2101d44f336ff129d0588e01ce929218507983f198bf9effa7be3a_2"
          },
          "properties": {}
        },
        {
          "ruleId": "318befd0-dc27-3a39-aeab-35215349e25a",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `pattern` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/prime_math/grader.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 371,
                  "startColumn": 17,
                  "endLine": 371,
                  "endColumn": 46,
                  "snippet": {
                    "text": "        match = re.match(pattern, prediction)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "9886fea2c7b09b01aba88d4ee8abc31dcd8c5b9adeb0126fff51d108ad738c94ac0de58c71189a60b0348344723c55a7f83239f124630d9b925370e95657f7a6_0"
          },
          "properties": {}
        },
        {
          "ruleId": "ba02dac9-7db7-3341-a9d5-c58e1078406c",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `\"^\\\\\\\\text\\{(?P<text>.+?)\\}$\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/prime_math/math_normalize.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 13,
                  "endLine": 50,
                  "endColumn": 61,
                  "snippet": {
                    "text": "        m = re.search(\"^\\\\\\\\text\\{(?P<text>.+?)\\}$\", answer)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "7acaedac03c30016b56e08bc77162f7421ea94dc7274bcca5d7f18c1e022e723bfdde96f3b1f3360cd801aaafac37c7bd724f9ce42fc7e5476bc9a2c0c6bf076_0"
          },
          "properties": {}
        },
        {
          "ruleId": "4b82bc31-a27c-34f4-95fd-b5a05e27b2bd",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"\\b(a|an|the)\\b\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/search_r1_like_qa_em.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 16,
                  "endLine": 25,
                  "endColumn": 52,
                  "snippet": {
                    "text": "        return re.sub(r\"\\b(a|an|the)\\b\", \" \", text)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "d5df03f6b4223fa683cd55c5826ab4a6adc635a886545d0f6d33533b442601748bcd1efac44581e96a33fd55cca7c1bb2c6d4afafca9cbe02653daf18b5b492c_0"
          },
          "properties": {}
        },
        {
          "ruleId": "34ab6d20-bfc7-3c70-a129-c4104964e77d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `answer_pattern` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/utils/reward_score/search_r1_like_qa_em.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 13,
                  "endLine": 78,
                  "endColumn": 65,
                  "snippet": {
                    "text": "    match = re.finditer(answer_pattern, solution_str, re.DOTALL)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "cb6f4ce9f9fdb911fcfbdbe767b82c4be6e855da4134613485b9b0be9c0f9526890446471a9fa10e5cb2e4a87fcac0e1e8cb0b4a60588d717647ded8891f93e7_0"
          },
          "properties": {}
        },
        {
          "ruleId": "5ad18498-95e6-3c99-99f0-6412349b431a",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/workers/megatron_workers.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 387,
                  "startColumn": 13,
                  "endLine": 387,
                  "endColumn": 68,
                  "snippet": {
                    "text": "            importlib.import_module(self.config.model.external_lib)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "0ac3c1de3883710139c23ac1b0748c3c24ba610cf6b6d858906d4780159962a686b73b17a343194482c6d27eb651e55bebc26ce60a385e4dcbce0711bc171bc8_0"
          },
          "properties": {}
        },
        {
          "ruleId": "d3d91de1-e9b6-322d-9a8e-1346b1b59eb2",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/workers/megatron_workers.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 859,
                  "startColumn": 13,
                  "endLine": 859,
                  "endColumn": 68,
                  "snippet": {
                    "text": "            importlib.import_module(self.config.model.external_lib)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "0ac3c1de3883710139c23ac1b0748c3c24ba610cf6b6d858906d4780159962a686b73b17a343194482c6d27eb651e55bebc26ce60a385e4dcbce0711bc171bc8_1"
          },
          "properties": {}
        },
        {
          "ruleId": "6eb953b1-68a6-3a46-9179-7afd4799c399",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/workers/megatron_workers.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1108,
                  "startColumn": 13,
                  "endLine": 1108,
                  "endColumn": 68,
                  "snippet": {
                    "text": "            importlib.import_module(self.config.model.external_lib)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "0ac3c1de3883710139c23ac1b0748c3c24ba610cf6b6d858906d4780159962a686b73b17a343194482c6d27eb651e55bebc26ce60a385e4dcbce0711bc171bc8_2"
          },
          "properties": {}
        },
        {
          "ruleId": "30607e4e-a027-3c85-ae10-0ab00390fed3",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Untrusted user input in `importlib.import_module()` function allows an attacker to load arbitrary code. Avoid dynamic values in `importlib.import_module()` or use a whitelist to prevent running untrusted code."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/workers/rollout/chat_scheduler.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 22,
                  "endLine": 303,
                  "endColumn": 58,
                  "snippet": {
                    "text": "            module = importlib.import_module(module_path)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "6f1516135fe67fe0165c54e0ebfd6c4ebd593cb4e6868418690e4b1a58175e4a9bf17e8890adf2f27d7a11763f534fecb7b7defa99a224952253d7ef6f245044_0"
          },
          "properties": {}
        },
        {
          "ruleId": "4d3d360c-8e80-3d74-8dee-c72bb926345b",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/workers/rollout/sglang_rollout/utils.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 31,
                  "endLine": 46,
                  "endColumn": 49,
                  "snippet": {
                    "text": "            serialized_data = pickle.dumps(data)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "5241f497597a319e4561fd4530f324d53708ed539397525e48aa8a37dd7da67d2419d47f529eaf0bcd589ccb6a19a8dfc2915b898b752b5687045c594b17dab8_0"
          },
          "properties": {}
        },
        {
          "ruleId": "ef45d802-a493-3e36-b3b4-f6c3daa08430",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/workers/rollout/sglang_rollout/utils.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 16,
                  "endLine": 67,
                  "endColumn": 45,
                  "snippet": {
                    "text": "        data = pickle.loads(serialized_data)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "05d241b4868a76b1f752a7aaaa5d3848b71b3536b062185defbf033b17f9b080ad4ba7e18ffd110eb5fa249cf5bc1dc929f8c68d3bb11fdf9126f8a5f86cba6c_0"
          },
          "properties": {}
        },
        {
          "ruleId": "e8352f3c-24c3-3f7f-8204-0f3f498a1e1c",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Regex `r\"(\\d+\\.\\d+\\.?\\d*)\"` may be vulnerable to catastrophic backtracking, which may lead to denial of service attacks. (This rule only matches regex usage, not actual REDoS patterns. For full detection, use Semgrep Pro Engine.)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/workers/rollout/vllm_rollout/__init__.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 13,
                  "endLine": 38,
                  "endColumn": 64,
                  "snippet": {
                    "text": "    match = re.match(r\"(\\d+\\.\\d+\\.?\\d*)\", vllm_package_version)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "70134f49c41f93654a5d856bb021ebefbacbf77ca014c42865ce0c888f508e0870740ca846a411ed23184484c37863d8a880c7dffd1ae48d6c007c039d881dbe_0"
          },
          "properties": {}
        },
        {
          "ruleId": "78403b2d-0b5e-3747-a7f5-4452ccbeb818",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/workers/rollout/vllm_rollout/vllm_async_server.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 27,
                  "endLine": 112,
                  "endColumn": 47,
                  "snippet": {
                    "text": "            sent_method = pickle.dumps(method)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "55d0d9294ff40dd3402cc73d5b1f454f3399aecce936dbd0540ee4b0d3cb012461125f6dd4be1cec5772eccddc99b26146c6aec0c3fc45c963975c8fa29e3b0c_0"
          },
          "properties": {}
        },
        {
          "ruleId": "fbbaeda2-a6e8-3e41-9900-b9c1b9abe9b1",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/workers/rollout/vllm_rollout/vllm_async_server.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 27,
                  "endLine": 160,
                  "endColumn": 47,
                  "snippet": {
                    "text": "            sent_method = pickle.dumps(method)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "55d0d9294ff40dd3402cc73d5b1f454f3399aecce936dbd0540ee4b0d3cb012461125f6dd4be1cec5772eccddc99b26146c6aec0c3fc45c963975c8fa29e3b0c_1"
          },
          "properties": {}
        },
        {
          "ruleId": "d878a268-0fb8-31f9-9091-5332c60f8fb3",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/workers/rollout/vllm_rollout/vllm_async_server.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 19,
                  "endLine": 163,
                  "endColumn": 66,
                  "snippet": {
                    "text": "        message = pickle.dumps((sent_method, args, kwargs or {}))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "55d0d9294ff40dd3402cc73d5b1f454f3399aecce936dbd0540ee4b0d3cb012461125f6dd4be1cec5772eccddc99b26146c6aec0c3fc45c963975c8fa29e3b0c_2"
          },
          "properties": {}
        },
        {
          "ruleId": "b0ce86bb-1738-30f4-a500-be5de9b050c2",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/workers/rollout/vllm_rollout/vllm_async_server.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 28,
                  "endLine": 169,
                  "endColumn": 55,
                  "snippet": {
                    "text": "            outputs.append(pickle.loads(socket.recv()))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "b90c32cd6d6cc8bd713b2f16a5c54a7189e79c153f1468ea5c5e7265af8ce8cf7f71e30a2851c16b4fb3965537fa52698da16f1d15003f906f4b53f01d064839_0"
          },
          "properties": {}
        },
        {
          "ruleId": "8e08b079-a12a-3b8f-8fb3-54f1c81bfede",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/workers/rollout/vllm_rollout/vllm_rollout_spmd.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 454,
                  "startColumn": 30,
                  "endLine": 454,
                  "endColumn": 50,
                  "snippet": {
                    "text": "            self.socket.send(pickle.dumps(result))"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "e752fbec1bf9eac6d3c49d4e8a77b855d72677eb2fd507b2b6abb0ebe1092810ea9fd46b64cdb9c5e3a4121159443036fd555cd926e8fbf0960320039ba4fcc6_0"
          },
          "properties": {}
        },
        {
          "ruleId": "9b93ac05-df9c-3f31-a3cc-ca60f91a9c41",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "verl/workers/rollout/vllm_rollout/vllm_rollout_spmd.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 452,
                  "startColumn": 36,
                  "endLine": 452,
                  "endColumn": 57,
                  "snippet": {
                    "text": "            method, args, kwargs = pickle.loads(message)"
                  }
                }
              }
            }
          ],
          "fingerprints": {
            "matchBasedId/v1": "0a6301dbe82d58d24c12e3d9b4b6bfeeeaf6261ff9e9a574d0149cdf0ea1d381b7ff4448a808f93b374179f0d6ad1a42928de6b9155dac9c6151c487015384ad_0"
          },
          "properties": {}
        }
      ],
      "newlineSequences": [
        "\r\n",
        "\n"
      ]
    }
  ]
}